{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/backgroundtask/backgroundtask.component.html","webpack:///./src/app/components/backgroundtask/backgroundtask.component.scss","webpack:///./src/app/components/backgroundtask/backgroundtask.component.ts","webpack:///./src/app/components/backgroundtask/viewdispensetask/viewdispensetask.component.html","webpack:///./src/app/components/backgroundtask/viewdispensetask/viewdispensetask.component.scss","webpack:///./src/app/components/backgroundtask/viewdispensetask/viewdispensetask.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/formula/edit-formula/edit-formula.component.html","webpack:///./src/app/components/formula/edit-formula/edit-formula.component.scss","webpack:///./src/app/components/formula/edit-formula/edit-formula.component.ts","webpack:///./src/app/components/formula/formula/formula.component.html","webpack:///./src/app/components/formula/formula/formula.component.scss","webpack:///./src/app/components/formula/formula/formula.component.ts","webpack:///./src/app/components/formula/list-formula/list-formula.component.html","webpack:///./src/app/components/formula/list-formula/list-formula.component.scss","webpack:///./src/app/components/formula/list-formula/list-formula.component.ts","webpack:///./src/app/components/formula/maintenance/maintenance.component.html","webpack:///./src/app/components/formula/maintenance/maintenance.component.scss","webpack:///./src/app/components/formula/maintenance/maintenance.component.ts","webpack:///./src/app/components/formula/viewformula/viewformula.component.html","webpack:///./src/app/components/formula/viewformula/viewformula.component.scss","webpack:///./src/app/components/formula/viewformula/viewformula.component.ts","webpack:///./src/app/components/help/help.component.html","webpack:///./src/app/components/help/help.component.scss","webpack:///./src/app/components/help/help.component.ts","webpack:///./src/app/components/help/language/language.component.html","webpack:///./src/app/components/help/language/language.component.scss","webpack:///./src/app/components/help/language/language.component.ts","webpack:///./src/app/components/help/question/question.component.html","webpack:///./src/app/components/help/question/question.component.scss","webpack:///./src/app/components/help/question/question.component.ts","webpack:///./src/app/components/help/structure/structure.component.html","webpack:///./src/app/components/help/structure/structure.component.scss","webpack:///./src/app/components/help/structure/structure.component.ts","webpack:///./src/app/components/issue/create/create.component.html","webpack:///./src/app/components/issue/create/create.component.scss","webpack:///./src/app/components/issue/create/create.component.ts","webpack:///./src/app/components/issue/edit/edit.component.html","webpack:///./src/app/components/issue/edit/edit.component.scss","webpack:///./src/app/components/issue/edit/edit.component.ts","webpack:///./src/app/components/issue/list/list.component.html","webpack:///./src/app/components/issue/list/list.component.scss","webpack:///./src/app/components/issue/list/list.component.ts","webpack:///./src/app/components/layout/breadcrumb/breadcrumb.component.html","webpack:///./src/app/components/layout/breadcrumb/breadcrumb.component.scss","webpack:///./src/app/components/layout/breadcrumb/breadcrumb.component.ts","webpack:///./src/app/components/layout/footer/footer.component.html","webpack:///./src/app/components/layout/footer/footer.component.scss","webpack:///./src/app/components/layout/footer/footer.component.ts","webpack:///./src/app/components/layout/header/header.component.html","webpack:///./src/app/components/layout/header/header.component.scss","webpack:///./src/app/components/layout/header/header.component.ts","webpack:///./src/app/components/layout/navigation/navigation.component.html","webpack:///./src/app/components/layout/navigation/navigation.component.scss","webpack:///./src/app/components/layout/navigation/navigation.component.ts","webpack:///./src/app/components/login-page/forgotpassword/forgotpassword.component.html","webpack:///./src/app/components/login-page/forgotpassword/forgotpassword.component.scss","webpack:///./src/app/components/login-page/forgotpassword/forgotpassword.component.ts","webpack:///./src/app/components/login-page/login/login.component.html","webpack:///./src/app/components/login-page/login/login.component.scss","webpack:///./src/app/components/login-page/login/login.component.ts","webpack:///./src/app/components/login-page/register/register.component.html","webpack:///./src/app/components/login-page/register/register.component.scss","webpack:///./src/app/components/login-page/register/register.component.ts","webpack:///./src/app/components/machine/machinesetting/machinesetting.component.html","webpack:///./src/app/components/machine/machinesetting/machinesetting.component.scss","webpack:///./src/app/components/machine/machinesetting/machinesetting.component.ts","webpack:///./src/app/components/setting/base/base.component.html","webpack:///./src/app/components/setting/base/base.component.scss","webpack:///./src/app/components/setting/base/base.component.ts","webpack:///./src/app/components/setting/collection/collection.component.html","webpack:///./src/app/components/setting/collection/collection.component.scss","webpack:///./src/app/components/setting/collection/collection.component.ts","webpack:///./src/app/components/setting/colorant/colorant.component.html","webpack:///./src/app/components/setting/colorant/colorant.component.scss","webpack:///./src/app/components/setting/colorant/colorant.component.ts","webpack:///./src/app/components/setting/customer/customer.component.html","webpack:///./src/app/components/setting/customer/customer.component.scss","webpack:///./src/app/components/setting/customer/customer.component.ts","webpack:///./src/app/components/setting/product/product.component.html","webpack:///./src/app/components/setting/product/product.component.scss","webpack:///./src/app/components/setting/product/product.component.ts","webpack:///./src/app/components/setting/productbase/productbase.component.html","webpack:///./src/app/components/setting/productbase/productbase.component.scss","webpack:///./src/app/components/setting/productbase/productbase.component.ts","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.scss","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/directions/boostrap/modal/modal.component.html","webpack:///./src/app/directions/boostrap/modal/modal.component.scss","webpack:///./src/app/directions/boostrap/modal/modal.component.ts","webpack:///./src/app/directions/product/base-can/base-can.component.html","webpack:///./src/app/directions/product/base-can/base-can.component.scss","webpack:///./src/app/directions/product/base-can/base-can.component.ts","webpack:///./src/app/directions/product/tablecolourant/table-colourants.component.html","webpack:///./src/app/directions/product/tablecolourant/table-colourants.component.scss","webpack:///./src/app/directions/product/tablecolourant/table-colourants.component.ts","webpack:///./src/app/directions/product/viewdetail/viewdetail.component.html","webpack:///./src/app/directions/product/viewdetail/viewdetail.component.scss","webpack:///./src/app/directions/product/viewdetail/viewdetail.component.ts","webpack:///./src/app/file.service.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/models/base.ts","webpack:///./src/app/models/collection.ts","webpack:///./src/app/models/colorant.ts","webpack:///./src/app/models/constant.ts","webpack:///./src/app/models/customer.ts","webpack:///./src/app/models/dispense.task.model.ts","webpack:///./src/app/models/formula.ts","webpack:///./src/app/models/formula_product_base.ts","webpack:///./src/app/models/formulacustomer.ts","webpack:///./src/app/models/pagination.model.ts","webpack:///./src/app/models/product.ts","webpack:///./src/app/models/product_base.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/services/base/base.service.ts","webpack:///./src/app/services/boostrap/modal.service.ts","webpack:///./src/app/services/collection/collection.service.ts","webpack:///./src/app/services/colorant/colorant.service.ts","webpack:///./src/app/services/customer/customer.service.ts","webpack:///./src/app/services/dashboard/dashboard.service.ts","webpack:///./src/app/services/dispensetask/dispensetask.service.ts","webpack:///./src/app/services/formula/formula.service.ts","webpack:///./src/app/services/issues/issue.service.ts","webpack:///./src/app/services/machine/machine.service.ts","webpack:///./src/app/services/product/product.service.ts","webpack:///./src/app/services/productbase/productbase.service.ts","webpack:///./src/app/services/store/store.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/shared/http/http.module.ts","webpack:///./src/app/shared/http/interceptor/https-interceptor.ts","webpack:///./src/app/shared/http/services/http.service.ts","webpack:///./src/app/utils/convert-models-utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,sD;;;;;;;;;;;ACAA,0RAA0R,uBAAuB,qBAAqB,EAAE,QAAQ,iBAAiB,EAAE,YAAY,kBAAkB,EAAE,6BAA6B,uBAAuB,gBAAgB,sBAAsB,yBAAyB,EAAE,mCAAmC,qBAAqB,uBAAuB,EAAE,mDAAmD,oBAAoB,EAAE,6BAA6B,qCAAqC,0BAA0B,EAAE,qDAAqD,yBAAyB,EAAE,EAAE,kBAAkB,oBAAoB,gBAAgB,iBAAiB,kBAAkB,gBAAgB,iBAAiB,uBAAuB,gBAAgB,sCAAsC,sBAAsB,EAAE,8CAA8C,iBAAiB,EAAE,wBAAwB,wBAAwB,EAAE,oBAAoB,qBAAqB,EAAE,YAAY,sBAAsB,EAAE,aAAa,gCAAgC,EAAE,QAAQ,eAAe,EAAE,QAAQ,eAAe,EAAE,yCAAyC,gBAAgB,EAAE,0CAA0C,gBAAgB,EAAE,0DAA0D,gBAAgB,uBAAuB,iBAAiB,sBAAsB,cAAc,qBAAqB,sBAAsB,uCAAuC,EAAE,+DAA+D,sBAAsB,EAAE,mEAAmE,kBAAkB,EAAE,yCAAyC,kBAAkB,EAAE,0CAA0C,uBAAuB,yBAAyB,gBAAgB,qBAAqB,sBAAsB,EAAE,6BAA6B,2CAA2C,kBAAkB,EAAE,EAAE,YAAY,2BAA2B,8BAA8B,mCAAmC,EAAE,iCAAiC,wBAAwB,EAAE,gCAAgC,uBAAuB,0BAA0B,gBAAgB,EAAE,qCAAqC,uBAAuB,mBAAmB,EAAE,qCAAqC,kCAAkC,uCAAuC,+BAA+B,yCAAyC,cAAc,EAAE,4CAA4C,cAAc,yBAAyB,EAAE,uDAAuD,kBAAkB,EAAE,gCAAgC,oCAAoC,EAAE,+GAA+G,qCAAqC,EAAE,oBAAoB,wBAAwB,qBAAqB,EAAE,6BAA6B,cAAc,8BAA8B,EAAE,kCAAkC,qBAAqB,kBAAkB,uBAAuB,oBAAoB,mBAAmB,EAAE,uCAAuC,sBAAsB,sBAAsB,EAAE,uCAAuC,kCAAkC,qBAAqB,aAAa,EAAE,yDAAyD,qBAAqB,EAAE,sBAAsB,wBAAwB,6BAA6B,EAAE,2CAA2C,0BAA0B,EAAE,0CAA0C,yBAAyB,4BAA4B,kBAAkB,EAAE,+CAA+C,yBAAyB,qBAAqB,EAAE,+CAA+C,oCAAoC,yCAAyC,iCAAiC,2CAA2C,gBAAgB,EAAE,sDAAsD,gBAAgB,2BAA2B,EAAE,iEAAiE,oBAAoB,EAAE,EAAE,sBAAsB,cAAc,+BAA+B,qBAAqB,EAAE,mBAAmB,uBAAuB,eAAe,kBAAkB,iBAAiB,iBAAiB,oBAAoB,qCAAqC,6BAA6B,EAAE,6BAA6B,mBAAmB,8BAA8B,sBAAsB,EAAE,EAAE,6BAA6B,mBAAmB,8BAA8B,sBAAsB,EAAE,EAAE,8BAA8B,mBAAmB,8BAA8B,sBAAsB,EAAE,EAAE,SAAS,+BAA+B,+BAA+B,EAAE,eAAe,qBAAqB,EAAE,kBAAkB,qBAAqB,EAAE,qBAAqB,uBAAuB,EAAE,yDAAyD,2DAA2D,iBAAiB,EAAE,6BAA6B,uBAAuB,WAAW,YAAY,mBAAmB,gBAAgB,qBAAqB,gEAAgE,mBAAmB,kCAAkC,2BAA2B,qCAAqC,EAAE,sDAAsD,uBAAuB,EAAE,iDAAiD,uBAAuB,EAAE,kDAAkD,uBAAuB,EAAE,wCAAwC,uBAAuB,EAAE,mDAAmD,iFAAiF,qDAAqD,EAAE,2DAA2D,kDAAkD,qDAAqD,oBAAoB,gBAAgB,EAAE,wBAAwB,kBAAkB,uBAAuB,aAAa,cAAc,6BAA6B,iBAAiB,8BAA8B,EAAE,mCAAmC,mBAAmB,sBAAsB,EAAE,6BAA6B,0BAA0B,gCAAgC,EAAE,EAAE,6CAA6C,gBAAgB,EAAE,6BAA6B,+CAA+C,+BAA+B,EAAE,EAAE,iDAAiD,uhc;;;;;;;;;;;;;;;;;;;;;ACAptN;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+B;AACjB;AAEc;AACC;AAEuB;AACvB;AAEtD,kBAAkB;AAC+B;AACI;AACV;AACA;AACI;AAGF;AACwB;AACM;AACN;AACN;AACoB;AAE3C;AACqB;AACS;AACJ;AACS;AACT;AACT;AACqB;AACZ;AAEH;AACkB;AACjF,mBAAmB;AAEwD;AAEE;AACS;AACkB;AAE1B;AAEF;AACY;AACA;AACZ;AAGiB;AAE7F,UAAU;AACyE;AACZ;AACkB;AACT;AAEA;AACc;AACF;AAEA;AAE5F,eAAe;AACiE;AACA;AAC3B;AACoC;AACyB;AAEb;AACT;AACpB;AACZ;AACkC;AACU;AACtB;AACC;AACpB;AAI/D,IAAM,MAAM,GAAW;IACrB,EAAC,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;IACpD,EAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,6FAAkB,EAAC;IAChD,EAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,4FAAc,EAAC,EAAE,EAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,4FAAc,EAAC;IAC5F,EAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,qGAAiB,EAAC,EAAE,EAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,qGAAiB,EAAC;IACrG,EAAC,MAAM,EAAE,iBAAiB,EAAE,SAAS,EAAE,uHAAuB,EAAC;IAE/D;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6FAAkB;QAC7B,QAAQ,EAAE;YACR,wDAAwD;YACxD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAC;YAChD,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sFAAa,EAAC;YACxC,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wGAAmB,EAAC;YACpD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAC;YAC9C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAC;YAChD,qEAAqE;YAErE,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,+FAAgB,EAAC;YAC9C,4DAA4D;YAC5D,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,2GAAoB,EAAC;YAC3D,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,6GAAoB,EAAC;YACtD,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6GAAoB,EAAC;YAE3D,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,4GAAuB,EAAC;YACxD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,2GAAoB,EAAC;YAEtD,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oHAAuB,EAAC;YAGrD,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+FAAiB,EAAC;YAChD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,8EAAa,EAAC;YACjD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,+FAAiB,EAAC;YACrD,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,kGAAkB,EAAC;YAEtD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,0FAAe,EAAC;YAC5C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oFAAa,EAAC;YAC5C,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,oFAAa,EAAC;SACzC;KACF;CACF,CAAC;AAoGF;IAAA;IACA,CAAC;IADY,SAAS;QAlGrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBAEZ,oBAAoB;gBACpB,0FAAc;gBACd,uHAAwB;gBACxB,iGAAgB;gBAEhB,UAAU;gBACV,4FAAc;gBACd,qGAAiB;gBACjB,uHAAuB;gBAEvB,wBAAwB;gBACxB,6FAAkB;gBAElB,gBAAgB;gBAChB,2FAAe;gBACf,uGAAmB;gBACnB,uGAAmB;gBACnB,2FAAe;gBAEf,4GAAuB;gBACvB,iIAAyB;gBAEzB,oBAAoB;gBACpB,8EAAa;gBACb,kGAAiB;gBACjB,sFAAa;gBACb,wGAAmB;gBACnB,+FAAgB;gBAChB,kGAAiB;gBACjB,2GAAoB;gBACpB,wGAAmB;gBAEnB,oBAAoB;gBACpB,+FAAgB;gBAChB,6GAAoB;gBAEpB,2GAAoB;gBACpB,6GAAoB;gBACpB,2GAAoB;gBAEpB,oBAAoB;gBACpB,oHAAuB;gBACvB,8EAAa;gBACb,iBAAiB;gBACjB,oFAAa;gBACb,0FAAe;gBACf,oFAAa;gBAEb,YAAY;gBACZ,+FAAiB;gBACjB,8EAAa;gBACb,+FAAiB;gBACjB,kGAAkB;aACnB;YAED,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,oEAAgB;gBAEhB,qEAAgB;gBAChB,oEAAU,CAAC,OAAO,EAAE;gBACpB,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAE5B,0DAAW;gBAEX,kBAAkB;gBAClB,oEAAS;gBACT,0DAAe;gBACf,6DAAgB;gBAEhB,kBAAkB;gBAClB,+DAAc;aACf;YACD,SAAS,EAAE;gBACT,wDAAa;gBACb,2EAAY;gBACZ,gGAAmB;gBACnB,8EAAY;gBAEZ,uFAAgB;gBAEhB,4EAAY;gBACZ,qFAAgB;gBAChB,iFAAc;gBACd,0FAAiB;gBACjB,iFAAc;gBACd,wEAAW;gBACX,6FAAkB;gBAElB,iFAAc;aACf;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;AClOtB,oCAAoC,sDAAsD,4wCAA4wC,kCAAkC,sEAAsE,yJAAyJ,yCAAyC,6CAA6C,+BAA+B,2DAA2D,+BAA+B,yDAAyD,+BAA+B,cAAc,iCAAiC,aAAa,+BAA+B,gDAAgD,+BAA+B,iDAAiD,6rB;;;;;;;;;;;ACAzmE,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAR;AAEe;AAE/B;AAEyB;AAShE;IAQE,iCAAoB,YAA0B,EAC1B,cAA8B,EAC9B,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QALlC,0BAAqB,GAAsC,IAAI,CAAC;IAMhE,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAClD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,KAA2C;gBAC9F,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC;YAC3C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,iDAAe,GAAf,UAAgB,IAAuC;QACrD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC;IACvE,CAAC;IAED,sDAAoB,GAApB;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,0CAAQ,GAAR,UAAS,IAAU;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACvC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,6BAA6B;oBAChC,OAAO,OAAO,CAAC,CAAC,CAAC,2BAA2B,EAAE,CAAC,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;gBACtF,KAAK,kBAAkB;oBACrB,OAAO,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;gBACtH,KAAK,aAAa;oBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBAC5G,KAAK,gBAAgB;oBACnB,OAAO,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,EAC3H,KAAK,CAAC,CAAC;gBACX,KAAK,aAAa;oBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACpI,KAAK,SAAS;oBACZ,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC9C,KAAK,QAAQ;oBACX,OAAO,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC5C,KAAK,aAAa;oBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACtD,KAAK,cAAc;oBACjB,OAAO,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBACxF;oBACE,OAAO,CAAC,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;YACrE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IA3EU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCASkC,0EAAY;YACV,gFAAc;YACtB,sDAAM;OAVvB,uBAAuB,CA4EnC;IAAD,8BAAC;CAAA;AA5EmC;;;;;;;;;;;;ACfpC,0MAA0M,uBAAuB,qTAAqT,sBAAsB,0HAA0H,4FAA4F,mLAAmL,kDAAkD,4MAA4M,oCAAoC,2wCAA2wC,4GAA4G,kDAAkD,4BAA4B,uaAAua,6IAA6I,0GAA0G,gEAAgE,yDAAyD,+BAA+B,6DAA6D,4EAA4E,8L;;;;;;;;;;;ACA3lH,8BAA8B,gBAAgB,0BAA0B,uBAAuB,gBAAgB,EAAE,8BAA8B,4BAA4B,yBAAyB,eAAe,gBAAgB,kBAAkB,EAAE,+CAA+C,+7B;;;;;;;;;;;;;;;;;;;;;;;;;ACA/O;AACsC;AAO7F;IAME;IAEA,CAAC;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,6CAAS,GAAT;IACA,CAAC;IAdQ;QAAR,2DAAK,EAAE;kCAAe,6EAAiB;mEAAC;IAChC;QAAR,2DAAK,EAAE;kCAAmB,iFAAqB;uEAAC;IACxC;QAAR,2DAAK,EAAE;;uEAA2C;IAC1C;QAAR,2DAAK,EAAE;;uEAA0B;IAJvB,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OACW,yBAAyB,CAgBrC;IAAD,gCAAC;CAAA;AAhBqC;;;;;;;;;;;;ACRtC,+lB;;;;;;;;;;;ACAA,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC0B;AAO5E;IAEE,4BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAE3D,qCAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,gDAAmB,GAAnB;QACE,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;IAC9C,CAAC;IAVU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAGsC,sFAAgB;OAF3C,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;ACR/B,0DAA0D,UAAU,4sBAA4sB,iBAAiB,sLAAsL,gCAAgC,wVAAwV,iBAAiB,sLAAsL,gCAAgC,wZAAwZ,iBAAiB,kOAAkO,kBAAkB,kLAAkL,iCAAiC,+MAA+M,wCAAwC,KAAK,wCAAwC,4lBAA4lB,qCAAqC,oNAAoN,kDAAkD,kVAAkV,iBAAiB,4KAA4K,4BAA4B,+SAA+S,iBAAiB,gBAAgB,+CAA+C,KAAK,wBAAwB,uxBAAuxB,gCAAgC,+BAA+B,iCAAiC,+BAA+B,iCAAiC,+BAA+B,mCAAmC,0/CAA0/C,mCAAmC,kvCAAkvC,iBAAiB,mCAAmC,oNAAoN,eAAe,iMAAiM,8BAA8B,2aAA2a,iBAAiB,yCAAyC,wNAAwN,kBAAkB,IAAI,kBAAkB,+LAA+L,2BAA2B,uZAAuZ,iBAAiB,0CAA0C,sLAAsL,8BAA8B,goBAAgoB,sCAAsC,KAAK,gCAAgC,KAAK,gCAAgC,yNAAyN,iBAAiB,ikBAAikB,qBAAqB,qSAAqS,uBAAuB,kkB;;;;;;;;;;;ACAvuY,oCAAoC,wBAAwB,EAAE,kCAAkC,4BAA4B,kBAAkB,sBAAsB,6BAA6B,uBAAuB,EAAE,+CAA+C,2yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlN;AACA;AAC6C;AAC/C;AACS;AACoB;AACT;AACA;AACpB;AACM;AACkB;AAC9B;AACuB;AACQ;AAEF;AAQ5E;IAqBE,8BAAoB,MAAc,EACd,KAAqB,EACrB,YAA0B,EAC1B,gBAAkC,EAClC,cAA8B,EAC9B,eAAgC,EAChC,iBAAoC,EACpC,cAA8B;QAP9B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QApBlD,aAAQ,GAAW,IAAI,CAAC;QACxB,WAAM,GAA4B,IAAI,CAAC;QACvC,iBAAY,GAAmB,IAAI,CAAC;QACpC,qBAAgB,GAAuB,IAAI,CAAC;QAC5C,oBAAe,GAAsB,IAAI,CAAC;QAC1C,mBAAc,GAA4B,IAAI,CAAC;QAE/C,yBAAoB,GAA4B,EAAE,CAAC;QACnD,wBAAmB,GAA2B,EAAE,CAAC;QAEjD,oBAAe,GAAQ,IAAI,CAAC;QAC5B,kBAAa,GAAQ,IAAI,CAAC;IAU1B,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtG,IAAI,KAAI,CAAC,oBAAoB,IAAI,IAAI,IAAI,KAAI,CAAC,oBAAoB,GAAG,CAAC,EAAE;gBACtE,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvB,KAAI,CAAC,6BAA6B,EAAE,CAAC;aACtC;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,KAAI,CAAC,6BAA6B,EAAE,CAAC;aACtC;YACD,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4DAA6B,GAA7B;QACE,IAAM,UAAU,GAAG,IAAI,kEAAe,EAAE,CAAC;QACzC,IAAM,OAAO,GAAG,IAAI,4DAAY,EAAE,CAAC;QACnC,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC9B,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;QAChC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;QAEtB,IAAM,OAAO,GAAG,IAAI,4DAAY,EAAE,CAAC;QACnC,IAAM,IAAI,GAAG,IAAI,uDAAS,EAAE,CAAC;QAC7B,IAAM,WAAW,GAAG,IAAI,qEAAgB,EAAE,CAAC;QAC3C,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,MAAM,GAAG,IAAI,oFAAuB,EAAE,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;QACtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,4DAA6B,GAA7B;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC5F,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC;YACnD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC;YAEvD,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACpE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAExD,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAgB,GAAhB;QAAA,iBAqCC;QApCC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK;YAChD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK;YACnD,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,eAAK;YAC5C,KAAK,CAAC,GAAG,CAAC,WAAC;gBACT,IAAM,gBAAgB,GAAG,IAAI,uEAAqB,EAAE,CAAC;gBACrD,gBAAgB,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAC9B,gBAAgB,CAAC,OAAO,GAAG,KAAK,CAAC;gBACjC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,eAAK;YACrD,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,KAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,KAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;wCAChE,eAAe;oBACxB,IAAM,iBAAiB,GAAG,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,cAAI;wBAChE,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,KAAK,eAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;oBAC1E,CAAC,CAAC,CAAC;oBAEH,IAAI,iBAAiB,IAAI,IAAI,IAAI,iBAAiB,GAAG,CAAC,CAAC,EAAE;wBACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;wBAC/B,KAAI,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;qBAC7D;gBACH,CAAC;gBATD,KAA8B,UAAwB,EAAxB,UAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB;oBAAjD,IAAM,eAAe;4BAAf,eAAe;iBASzB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBAgBC;QAfC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,KAAK,SAAS,EAAE;YAC1E,IAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,IAAI;gBAClD,OAAO,IAAI,CAAC,SAAS,KAAK,KAAI,CAAC,iBAAiB,CAAC;YACnD,CAAC,CAAC,CAAC;YAEH,IAAI,eAAe,IAAI,IAAI,EAAE;gBAC3B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;aACxD;YAED,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,eAAK;gBACvF,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAChC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uDAAwB,GAAxB;QAAA,iBASC;QARC,IAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAC,IAAI;YAC1D,OAAO,IAAI,CAAC,aAAa,KAAK,KAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,KAAI,CAAC,iBAAiB,CAAC;QAChH,CAAC,CAAC,CAAC;QAEH,IAAI,mBAAmB,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;SACpD;IACH,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBA6BC;QA5BC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK;YAClD,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAEzB,KAAqB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;gBAAvB,IAAM,MAAM;gBACf,IAAM,gBAAgB,GAAG,IAAI,kFAAqB,EAAE,CAAC;gBACrD,gBAAgB,CAAC,SAAS,GAAG,MAAM,CAAC;gBACpC,gBAAgB,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC/C,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAEjC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aAC5C;YAED,IAAI,KAAI,CAAC,MAAM,IAAI,IAAI,IAAI,KAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,IAAI,IAAI,KAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,CAAC,EAAE;gBAC3G,KAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,MAA+B;oBACpH,IAAM,eAAe,GAA4B,MAAM,CAAC;4CAE7C,MAAM;wBACf,IAAM,mBAAmB,GAAG,KAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAC,IAAI;4BAC7D,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;wBACrE,CAAC,CAAC,CAAC;wBAEH,IAAI,mBAAmB,IAAI,IAAI,EAAE;4BAC/B,KAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;yBACrE;oBACH,CAAC;oBARD,KAAqB,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe;wBAA/B,IAAM,MAAM;gCAAN,MAAM;qBAQhB;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAoB,GAApB,UAAqB,mBAA4C;QAC/D,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,KAAgB,UAAmB,EAAnB,2CAAmB,EAAnB,iCAAmB,EAAnB,IAAmB,EAAE;YAAhC,IAAM,CAAC;YACV,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACxC,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC,QAAQ,EAAE;oBACnD,WAAW,GAAG,CAAC,CAAC,QAAQ,CAAC;iBAC1B;aACF;SACF;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,uDAAwB,GAAxB;QACE,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC5F,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,aAAa,CAAC,GAAG,+BAA+B,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC5F,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,aAAa,CAAC,GAAG,+BAA+B,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,EAAE;YACjG,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,cAAc,CAAC,GAAG,8BAA8B,CAAC;SAC5D;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACtG,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,kBAAkB,CAAC,GAAG,8BAA8B,CAAC;SAChE;QAED,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,OAAO,IAAI,IAAI;eAC3E,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE;YACvD,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,WAAW,CAAC,GAAG,2BAA2B,CAAC;SACtD;QAED,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YAC7H,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,QAAQ,CAAC,GAAG,wBAAwB,CAAC;SAChD;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE;YACzC,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,WAAW,CAAC,GAAG,0CAA0C,CAAC;SACrE;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YACnE,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,gBAAgB,CAAC,GAAG,+BAA+B,CAAC;SAC/D;aAAM;YACL,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAC,IAAI;gBACpD,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,IAAI,aAAa,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtD,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,CAAC,gBAAgB,CAAC,GAAG,+BAA+B,CAAC;aAC/D;SACF;QAED,OAAO;YACL,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;SACzC,CAAC;IACJ,CAAC;IAED,8CAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;IACrC,CAAC;IAED,kDAAmB,GAAnB;QAAA,iBAmCC;QAlCC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACrD,IAAI,CAAE,YAAY,CAAC,QAAQ,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,EACzH,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;gBAChE,IAAI,KAAK,CAAC,oBAAoB,IAAI,IAAI,EAAE;oBAEtC,IAAI,KAAI,CAAC,MAAM,CAAC,oBAAoB,IAAI,IAAI,EAAE;wBAC5C,KAAI,CAAC,aAAa,GAAG;4BACnB,KAAK,EAAE,MAAM;4BACb,OAAO,EAAE,iCAAiC;yBAC3C,CAAC;qBACH;yBAAM;wBACL,KAAI,CAAC,aAAa,GAAG;4BACnB,KAAK,EAAE,QAAQ;4BACf,OAAO,EAAE,iCAAiC;yBAC3C,CAAC;qBACH;iBACF;qBAAM;oBACL,KAAI,CAAC,aAAa,GAAG;wBACnB,KAAK,EAAE,OAAO;wBACd,OAAO,EAAE,qDAAqD;qBAC/D,CAAC;iBACH;gBAED,UAAU,CAAC;oBACT,KAAI,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;gBAC9C,CAAC,EAAE,CAAC,CAAC,CAAC;YACR,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,SAAS,CAAC;SAC/C;IACH,CAAC;IAED,8CAAe,GAAf;QACE,IAAI;YACF,IAAI,CAAC,UAAU,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAAC,OAAO,CAAC,EAAE;SAEX;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,wCAAS,GAAT,UAAU,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,yCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,OAAO,EAAE;YAC1G,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;SAChD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAzTU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAsB4B,sDAAM;YACP,8DAAc;YACP,8EAAY;YACR,qFAAgB;YAClB,gFAAc;YACb,oFAAe;YACb,yFAAiB;YACpB,gFAAc;OA5BvC,oBAAoB,CA0ThC;IAAD,2BAAC;CAAA;AA1TgC;;;;;;;;;;;;ACvBjC,wCAAwC,6CAA6C,4f;;;;;;;;;;;ACArF,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAQlD;IAEE;QADA,WAAM,GAA4B,IAAI,CAAC;IACvB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAED,wCAAa,GAAb,UAAc,eAAe;QAC3B,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;IAChC,CAAC;IAED,+CAAoB,GAApB;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IAbU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAc5B;IAAD,uBAAC;CAAA;AAd4B;;;;;;;;;;;;ACR7B,y/BAAy/B,aAAa,KAAK,eAAe,0qBAA0qB,gBAAgB,KAAK,kBAAkB,qpBAAqpB,aAAa,KAAK,eAAe,6pBAA6pB,iBAAiB,KAAK,iBAAiB,ypBAAypB,cAAc,KAAK,QAAQ,2xDAA2xD,0BAA0B,6BAA6B,0BAA0B,oEAAoE,sIAAsI,uCAAuC,wCAAwC,6BAA6B,sCAAsC,6BAA6B,+CAA+C,8BAA8B,sFAAsF,wCAAwC,wBAAwB,oZAAoZ,saAAsa,iCAAiC,OAAO,0BAA0B,yQAAyQ,8BAA8B,4a;;;;;;;;;;;ACAp4O,uCAAuC,gBAAgB,EAAE,gCAAgC,qBAAqB,gBAAgB,EAAE,wBAAwB,iBAAiB,EAAE,6BAA6B,4BAA4B,sBAAsB,yBAAyB,wBAAwB,EAAE,wCAAwC,+BAA+B,wBAAwB,EAAE,6BAA6B,wBAAwB,yBAAyB,EAAE,+CAA+C,u0C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9b;AAIZ;AACe;AACT;AAClC;AACkC;AAEG;AAIX;AAEf;AAQlD;IAwBE,8BACU,YAA0B,EAC1B,cAA8B,EAC9B,iBAAoC,EACpC,cAA8B,EAC9B,eAAgC,EAChC,WAAwB,EACxB,MAAc;QANd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QA9Bd,oBAAe,GAAG,IAAI,0DAAY,EAA2B,CAAC;QAExE,cAAS,GAA8B,EAAE,CAAC;QAC1C,eAAU,GAA8B,EAAE,CAAC;QAC3C,gBAAW,GAAS,IAAI,CAAC;QACzB,iBAAY,GAAG,EAAE,CAAC;QAElB,iBAAY,GAAmB,EAAE,CAAC;QAClC,oBAAe,GAAsB,EAAE,CAAC;QACxC,iBAAY,GAAmB,EAAE,CAAC;QAElC,iBAAY,GAAoB,EAAE,CAAC;QACnC,wBAAmB,GAA2B,EAAE,CAAC;QAEjD,mBAAc,GAAoB,IAAI,wEAAe,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QA2GpE,aAAQ,GAAG,UAAU,IAAU;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC;QAEF,yBAAoB,GAAG;YACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;YAChC,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAElD,IAAM,SAAS,GAAG,EAAE,CAAC;YAErB,KAAK,IAAI,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpF,IAAI,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;oBACvF,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7B;qBAAM;oBACL,MAAM;iBACP;aACF;YAED,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;QAClD,CAAC,CAAC;IA/GF,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG;YACZ,SAAS,EAAE,SAAS;YACpB,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,SAAS;YACvB,UAAU,EAAE,SAAS;SACtB,CAAC;QAEF,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,GAAG,CAAC,EAAE;YAClG,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IACH,CAAC;IAED,2CAAY,GAAZ;QAAA,iBAkDC;QAjDC,kCAAkC;QAClC,mCAAmC;QACnC,IAAM,EAAE,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,eAAK;YAC1C,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK;YAChD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,eAAK;YACnD,EAAE,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,eAAK;YACtD,EAAE,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAChC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,cAAc,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,eAAK;YAC5D,KAAK,CAAC,GAAG,CAAC,aAAG;gBACX,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACvB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,eAAK;YAC5C,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtD,KAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAClC,KAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAwB,GAAxB;QACE,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oCACvH,eAAe;gBACxB,IAAM,eAAe,GAAG,OAAK,SAAS,CAAC,MAAM,CAAC,cAAI;oBAChD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC;gBACtE,CAAC,CAAC,CAAC;gBAEH,IAAI,eAAe,IAAI,IAAI,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzD,KAA0B,UAAe,EAAf,mCAAe,EAAf,6BAAe,EAAf,IAAe,EAAE;wBAAtC,IAAM,WAAW;wBACpB,IAAI,WAAW,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC,EAAE;4BAC/H,WAAW,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC;yBACvC;wBACD,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;qBACjE;iBACF;YACH,CAAC;;YAbD,KAA8B,UAAwB,EAAxB,SAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB;gBAAjD,IAAM,eAAe;wBAAf,eAAe;aAazB;SACF;IACH,CAAC;IAyBD,0CAAW,GAAX,UAAY,UAAmC;QAC7C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,+EAA+E;IACjF,CAAC;IAED,6CAAc,GAAd,UAAe,KAAK;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,oCAAK,GAAL;IAEA,CAAC;IAED,2CAAY,GAAZ;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAED,sCAAO,GAAP;QAAA,iBAsEC;QArEC,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAElC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACzB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAG;gBAC9B,OAAO,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC/E,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC5B,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAG;gBAC9B,OAAO,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE,KAAK,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAChG,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACzB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAG;gBAC9B,OAAO,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAK,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC3F,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YAC1B,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAG;gBAC9B,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3E,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAQ;wBACvD,OAAO,QAAQ,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;oBAC9E,CAAC,CAAC,CAAC;oBACH,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;wBAC/B,MAAM,GAAG,IAAI,CAAC;qBACf;iBACF;gBACD,OAAO,MAAM,CAAC;YAChB,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,KAAK,EAAE,EAAE;YAC7F,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;gBACnC,IAAM,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,KAAK,KAAK,CAAC;gBACnD,QAAQ,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE;oBAC/B,KAAK,aAAa;wBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBACtE,KAAK,aAAa;wBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBACtE,KAAK,kBAAkB;wBACrB,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;oBAChF,KAAK,YAAY;wBACf,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;oBAClG,KAAK,SAAS;wBACZ,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBAC9F,KAAK,aAAa;wBAChB,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;oBACtE,KAAK,WAAW;wBACd,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;oBAC9F;wBACE,OAAO,CAAC,CAAC;iBACZ;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;YACrE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,uCAAQ,GAAR,UAAS,SAAiB;QACxB,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;QAC1C,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,4CAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,6CAAc,GAAd,UAAe,SAAS;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,+BAA6B,SAAW,CAAC,CAAC,CAAC;IACnE,CAAC;IApPS;QAAT,4DAAM,EAAE;;iEAA+D;IAD7D,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCA2BwB,0EAAY;YACV,gFAAc;YACX,yFAAiB;YACpB,gFAAc;YACb,mFAAe;YACnB,yDAAW;YAChB,sDAAM;OA/Bb,oBAAoB,CAsPhC;IAAD,2BAAC;CAAA;AAtPgC;;;;;;;;;;;;ACxBjC,uF;;;;;;;;;;;ACAA,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAOhD;IAIE;IACA,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IARU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAUhC;IAAD,2BAAC;CAAA;AAVgC;;;;;;;;;;;;ACPjC,sgBAAsgB,4BAA4B,oNAAoN,0CAA0C,4OAA4O,wIAAwI,2NAA2N,wCAAwC,sNAAsN,kDAAkD,mNAAmN,0BAA0B,iNAAiN,wBAAwB,iRAAiR,2BAA2B,ssBAAssB,sCAAsC,6BAA6B,2EAA2E,0IAA0I,6GAA6G,wvBAAwvB,6BAA6B,cAAc,gYAAgY,uGAAuG,sHAAsH,6CAA6C,+DAA+D,SAAS,mEAAmE,mDAAmD,khBAAkhB,iBAAiB,gBAAgB,iBAAiB,4VAA4V,iBAAiB,gBAAgB,iBAAiB,i7CAAi7C,kBAAkB,2zCAA2zC,kBAAkB,qfAAqf,4BAA4B,wEAAwE,0CAA0C,2+B;;;;;;;;;;;ACA57S,8BAA8B,gBAAgB,0BAA0B,uBAAuB,gBAAgB,EAAE,8BAA8B,4BAA4B,yBAAyB,eAAe,gBAAgB,kBAAkB,EAAE,iBAAiB,eAAe,EAAE,+CAA+C,+8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjR;AACkB;AAClB;AAEe;AAOzB;AAC2C;AACiB;AACgB;AACpC;AACjB;AACK;AASzE;IAuBE,8BAAoB,cAA8B,EAC9B,kBAAsC,EACtC,YAA0B,EAC1B,mBAAwC,EACxC,cAA8B,EAC9B,MAAc,EAAU,KAAqB;QAL7C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAxBjE,wBAAmB,GAA4B,IAAI,CAAC;QACpD,uBAAkB,GAA0B,IAAI,CAAC;QAEjD,qBAAgB,GAAG,CAAC,CAAC;QACrB,YAAO,GAAG,CAAC,CAAC;QACZ,sBAAiB,GAAwB,IAAI,CAAC;QAC9C,gBAAW,GAAG,CAAC,CAAC;QAChB,oBAAe,GAAyB,IAAI,CAAC;QAG7C,6BAA6B;QAC7B,eAAU,GAAY,KAAK,CAAC;QAC5B,gBAAW,GAA4B,IAAI,CAAC;QAC5C,oBAAe,GAAgC,IAAI,CAAC;QACpD,iBAAY,GAAU,IAAI,CAAC;QAC3B,iBAAY,GAAW,IAAI,CAAC;QAE5B,iBAAY,GAAW,IAAI,CAAC;IAQ5B,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,0CAAW,GAAX,UAAY,GAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACrC,CAAC;IAED,8CAAe,GAAf;QAAA,iBAyCC;QAxCC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACvB,uCAAuC;YACvC,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAA6B;gBAClH,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAEhC,qCAAqC;gBACrC,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBAEvB,KAAuB,UAAwB,EAAxB,UAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB,EAAE;oBAA5C,IAAM,QAAQ;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC,CAAC;oBAEpF,IAAI,KAAI,CAAC,gBAAgB,KAAK,CAAC,IAAI,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,EAAE;wBAC5E,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC;qBAC3C;iBACF;YACH,CAAC,CAAC,CAAC;YAEH,+CAA+C;YAC/C,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,eAAK;gBAC9F,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAEhC,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;gBAE1B,KAA6B,UAAuB,EAAvB,UAAI,CAAC,kBAAkB,EAAvB,cAAuB,EAAvB,IAAuB,EAAE;oBAAjD,IAAM,cAAc;oBACvB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC;wBACxB,EAAE,EAAE,cAAc,CAAC,GAAG;wBACtB,IAAI,EAAE,cAAc,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,cAAc,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC;qBAC5F,CAAC,CAAC;oBAEH,IAAI,cAAc,CAAC,GAAG,KAAK,KAAI,CAAC,OAAO,EAAE;wBACvC,KAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;qBACzC;iBACF;gBAED,IAAI,KAAI,CAAC,iBAAiB,IAAI,IAAI,IAAI,KAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxE,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;oBACpD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;iBAC9C;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,6CAAc,GAAd,UAAe,CAAM;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,4CAAa,GAAb,UAAc,OAAe;QAA7B,iBAgEC;QA/DC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACtH,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;gBACpB,gEAAgE;gBAChE,IAAI,KAAI,CAAC,WAAW,IAAI,IAAI,IAAI,KAAI,CAAC,WAAW,CAAC,MAAM,KAAK,mFAAuB,CAAC,IAAI,EAAE;oBACxF,IAAM,eAAe,GAAG,EAAE,CAAC;oBAE3B,KAAuB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;wBAArC,IAAM,QAAQ;wBACjB,IAAM,SAAS,GAAG,IAAI,iFAAqB,CAAC,uFAA2B,CAAC,OAAO,EAAE,IAAI,EACnF,UAAC,eAAe,EAAE,mBAAmB;4BACnC,KAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;wBACpE,CAAC,CAAC,CAAC;wBAEL,IAAM,SAAS,GAAG,IAAI,iFAAqB,CAAC,uFAA2B,CAAC,OAAO,EAAE,IAAI,iFAAqB,CAAC,QAAQ,CAAC,QAAQ,EAC1H,QAAQ,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,EAAE,UAAC,eAAe,EAAE,mBAAmB;4BACxE,KAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;wBACpE,CAAC,CAAC,CAAC;wBAEH,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;wBAChC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBACjC;oBAED,IAAM,MAAM,GAAG,IAAI,iFAAqB,CAAC,uFAA2B,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAC,eAAe,EAAE,mBAAmB;wBACxH,KAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;wBAClE,KAAI,CAAC,WAAW,IAAI,CAAC,CAAC;wBACtB,IAAI,KAAI,CAAC,WAAW,GAAG,CAAC,EAAE;4BACxB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;yBAC7B;6BAAM;4BACL,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;yBACtB;wBAED,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC;wBAC5B,UAAU,CAAC;4BACT,KAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;wBACxC,CAAC,EAAE,GAAG,CAAC,CAAC;oBACV,CAAC,CAAC,CAAC;oBAEH,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAE7B,KAAI,CAAC,WAAW,GAAG,IAAI,6EAAiB,CAAC,UAAU,EAAE,eAAe,EAAE,IAAI,6EAAiB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,iBAAiB,EAC7H,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC;oBAEzC,KAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,mFAAuB,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM,EAC/G,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,EAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;wBACrG,IAAM,IAAI,GAAsC,mEAAiB,CAAC,wCAAwC,CAAC,IAAI,CAAC,CAAC;wBACjH,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,2BAA2B,CAAC;wBAC3D,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;wBACtC,KAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;wBAE9C,KAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;wBAC3D,KAAI,CAAC,YAAY,GAAG,UAAU,CAAC;wBAE/B,UAAU,CAAC;4BACT,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;wBAC1B,CAAC,EAAE,GAAG,CAAC,CAAC;oBACV,CAAC,CAAC,CAAC;iBACJ;aACF;iBAAM;gBACL,KAAI,CAAC,YAAY,GAAG,2CAA2C,CAAC;gBAChE,KAAI,CAAC,WAAW,IAAI,IAAI,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAiB,GAAjB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,qDAAsB,GAAtB,UAAuB,eAAkC,EAAE,mBAA0C;QACnG,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC;QAE3C,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,mFAAuB,CAAC,WAAW,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,wCAAS,GAAT,UAAU,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,yCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,iDAAkB,GAAlB;QACE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,mDAAoB,GAApB;QAAA,iBAQC;QAPC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,KAAK,EAAE,CAAC;QAEf,UAAU,CAAC;YACT,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAC7C,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC9B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAhMQ;QAAR,2DAAK,EAAE;kCAAS,oFAAuB;wDAAC;IAD9B,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAyBoC,gFAAc;YACV,4FAAkB;YACxB,6EAAY;YACL,+FAAmB;YACxB,gFAAc;YACtB,sDAAM,EAAiB,8DAAc;OA5BtD,oBAAoB,CAkMhC;IAAD,2BAAC;CAAA;AAlMgC;;;;;;;;;;;;AC1BjC,k3HAAk3H,+iC;;;;;;;;;;;ACAl3H,uCAAuC,2BAA2B,iBAAiB,EAAE,kBAAkB,8BAA8B,4BAA4B,EAAE,+CAA+C,+oB;;;;;;;;;;;;;;;;;;;;;;;;ACAhK;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,22CAA22C,EAAE,GAAG,OAAO,GAAG,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,IAAI,yFAAyF,EAAE,GAAG,OAAO,GAAG,IAAI,sJAAsJ,yBAAyB,4wBAA4wB,wDAAwD,MAAM,mhBAAmhB,EAAE,GAAG,OAAO,GAAG,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,IAAI,0FAA0F,aAAa,6cAA6c,MAAM,0X;;;;;;;;;;;ACA3nH,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAOhD;IAEE;QAMA,kBAAa,GAAY,IAAI,CAAC;QAC9B,cAAS,GAAW,qBAAqB,CAAC;QAC1C,cAAS,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAPvG,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IANU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAY7B;IAAD,wBAAC;CAAA;AAZ6B;;;;;;;;;;;;ACP9B,s4I;;;;;;;;;;;ACAA,8BAA8B,gBAAgB,EAAE,kBAAkB,kBAAkB,EAAE,WAAW,qBAAqB,EAAE,+CAA+C,+mB;;;;;;;;;;;;;;;;;;;;;;;;ACArH;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,yqE;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,qD;;;;;;;;;;;ACAA,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAOpE;IAEE,yBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGkC,2EAAY;OAFnC,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACR5B,mD;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAOpE;IAEE,uBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,gCAAQ,GAAR;IAEA,CAAC;IANU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkC,2EAAY;OAFnC,aAAa,CAQzB;IAAD,oBAAC;CAAA;AARyB;;;;;;;;;;;;ACR1B,mD;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AAOpE;IAEE,uBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAEnD,gCAAQ,GAAR;QACE,+EAA+E;QAC/E,sDAAsD;QACtD,yBAAyB;QACzB,MAAM;IACR,CAAC;IATU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkC,2EAAY;OAFnC,aAAa,CAWzB;IAAD,oBAAC;CAAA;AAXyB;;;;;;;;;;;;ACR1B,0M;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,2O;;;;;;;;;;;ACAA,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,sKAAsK,cAAc,wT;;;;;;;;;;;ACApL,yCAAyC,oBAAoB,YAAY,WAAW,aAAa,yBAAyB,iBAAiB,qBAAqB,qEAAqE,kBAAkB,8CAA8C,wBAAwB,EAAE,sCAAsC,mBAAmB,EAAE,sBAAsB,mFAAmF,0BAA0B,EAAE,+CAA+C,+1C;;;;;;;;;;;;;;;;;;;;;;;;ACA5f;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,2wJ;;;;;;;;;;;ACAA,6CAA6C,sBAAsB,mBAAmB,uBAAuB,EAAE,2CAA2C,qBAAqB,EAAE,mDAAmD,wBAAwB,uBAAuB,EAAE,gEAAgE,oBAAoB,EAAE,oCAAoC,+BAA+B,wBAAwB,mBAAmB,EAAE,+CAA+C,2vC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1d;AACgB;AACzB;AAEY;AAQnD;IASE,6BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QARpE,cAAS,GAAG,0DAAS,CAAC;QAEtB,gBAAW,GAAG,EAAE,CAAC;QAEjB,aAAQ,GAAG,MAAM,CAAC;QAClB,gBAAW,GAAG,SAAS,CAAC;QACxB,YAAO,GAAG,KAAK,CAAC;IAGhB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAEnD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACpC;IACH,CAAC;IAED,+CAAiB,GAAjB,UAAkB,UAAyB;QACzC,IAAI,IAAI,CAAC,WAAW,KAAK,UAAU,EAAE;YACnC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;IACH,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IA9BU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAUiC,uEAAW,EAAkB,sDAAM;OATzD,mBAAmB,CA+B/B;IAAD,0BAAC;CAAA;AA/B+B;;;;;;;;;;;;ACZhC,8nC;;;;;;;;;;;ACAA,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;ACPpC,qdAAqd,iBAAiB,gXAAgX,iBAAiB,uwB;;;;;;;;;;;ACAv2B,oCAAoC,iBAAiB,sBAAsB,oBAAoB,EAAE,uCAAuC,oBAAoB,6BAA6B,EAAE,2CAA2C,oBAAoB,EAAE,+CAA+C,+yB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3P;AACgB;AACzB;AAQvC;IAIE,wBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHpE,aAAQ,GAAW,IAAI,CAAC;QACxB,aAAQ,GAAW,IAAI,CAAC;IAGxB,CAAC;IAED,yEAAyE;IACzE,wDAAwD;IAExD,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAjBU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAMiC,uEAAW,EAAkB,sDAAM;OAJzD,cAAc,CAkB1B;IAAD,qBAAC;CAAA;AAlB0B;;;;;;;;;;;;ACV3B,o9E;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,wSAAwS,0CAA0C,i3CAAi3C,iBAAiB,gCAAgC,aAAa,2FAA2F,sDAAsD,gCAAgC,iBAAiB,uFAAuF,kDAAkD,gCAAgC,aAAa,wFAAwF,eAAe,0mBAA0mB,oLAAoL,sFAAsF,0CAA0C,0DAA0D,0CAA0C,wsBAAwsB,WAAW,4SAA4S,cAAc,0iDAA0iD,iBAAiB,gCAAgC,aAAa,+FAA+F,kDAAkD,gCAAgC,aAAa,2FAA2F,eAAe,0QAA0Q,4NAA4N,6FAA6F,4MAA4M,0FAA0F,kDAAkD,4DAA4D,kDAAkD,wjBAAwjB,iBAAiB,2LAA2L,iBAAiB,oiBAAoiB,8QAA8Q,gDAAgD,uPAAuP,kDAAkD,qPAAqP,0CAA0C,uPAAuP,oBAAoB,uPAAuP,oBAAoB,uPAAuP,4CAA4C,qpB;;;;;;;;;;;ACAhoU,4CAA4C,gCAAgC,uBAAuB,kBAAkB,EAAE,+EAA+E,kBAAkB,EAAE,uFAAuF,yBAAyB,eAAe,kBAAkB,kBAAkB,EAAE,6GAA6G,kBAAkB,qBAAqB,2BAA2B,EAAE,2MAA2M,mBAAmB,EAAE,6DAA6D,gBAAgB,EAAE,4DAA4D,oBAAoB,EAAE,gTAAgT,kBAAkB,EAAE,yBAAyB,uBAAuB,aAAa,cAAc,gBAAgB,eAAe,EAAE,0NAA0N,kBAAkB,yBAAyB,gBAAgB,iBAAiB,kBAAkB,mBAAmB,EAAE,gRAAgR,2BAA2B,iBAAiB,mBAAmB,kDAAkD,0CAA0C,EAAE,uDAAuD,qCAAqC,EAAE,mEAAmE,uBAAuB,EAAE,0DAA0D,wCAAwC,EAAE,sEAAsE,0BAA0B,EAAE,sDAAsD,iCAAiC,EAAE,kEAAkE,mBAAmB,EAAE,sDAAsD,mCAAmC,EAAE,kEAAkE,qBAAqB,EAAE,oCAAoC,uBAAuB,EAAE,8DAA8D,oBAAoB,uBAAuB,mBAAmB,EAAE,6BAA6B,iBAAiB,0BAA0B,kBAAkB,sBAAsB,uBAAuB,uBAAuB,EAAE,oDAAoD,yBAAyB,eAAe,kBAAkB,iBAAiB,kBAAkB,gCAAgC,EAAE,0KAA0K,2BAA2B,8BAA8B,kBAAkB,mBAAmB,oBAAoB,sCAAsC,EAAE,oFAAoF,qBAAqB,EAAE,qDAAqD,yBAAyB,iCAAiC,iBAAiB,gBAAgB,iBAAiB,oBAAoB,EAAE,6CAA6C,yBAAyB,kBAAkB,4BAA4B,wCAAwC,wCAAwC,4CAA4C,4CAA4C,gBAAgB,kBAAkB,0BAA0B,EAAE,6CAA6C,wBAAwB,sBAAsB,yBAAyB,kBAAkB,gBAAgB,+CAA+C,+CAA+C,EAAE,uKAAuK,sBAAsB,EAAE,qKAAqK,eAAe,EAAE,+CAA+C,urQ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv3J;AACyB;AAGH;AACH;AAQnE;IAoBE,iCACU,YAA0B,EAC1B,cAA8B,EAC9B,YAA0B;QAF1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAhBpC,6BAAwB,GAA0B,IAAI,CAAC;IAiBvD,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,2CAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAElD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YAEpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAChD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;YAExD,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;gBACxD,KAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,0DAAwB,GAAxB,UAAyB,KAAU,EAAE,IAAY;QAAjD,iBA0BC;QAzBC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QAEvB,IAAI,IAAI,KAAK,MAAM,EAAE;YACnB,KAAmB,UAAyB,EAAzB,SAAI,CAAC,oBAAoB,EAAzB,cAAyB,EAAzB,IAAyB,EAAE;gBAAzC,IAAM,IAAI;gBACb,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,EAAE;oBACtE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,IAAI,CAAC,YAAY,GAAG,0CAA0C,CAAC;iBAChE;gBAED,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE;oBACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC1B,IAAI,CAAC,YAAY,GAAG,0CAA0C,CAAC;oBAC/D,MAAM;iBACP;aACF;YAED,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBACvD,UAAU,CAAC;oBACT,KAAI,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;gBACrD,CAAC,EAAE,CAAC,CAAC,CAAC;aACP;SACF;IACH,CAAC;IAED,wDAAsB,GAAtB,UAAuB,WAAmB;QAA1C,iBAgBC;QAfC,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,EAAE;YAC9B,IAAM,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAC,IAA2B;gBAC9E,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,WAAW,CAAC;YACpD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC7E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,wBAAwB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACxG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,+BAA+B;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YAE1D,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,CAAC,uCAAuC,CAAC,CAAC;YAC1D,CAAC,EAAE,CAAC,CAAC,CAAC;SACP;IACH,CAAC;IAED,mDAAiB,GAAjB,UAAkB,IAAY;QAC5B,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YAE1D,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE;gBACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;aACzD;iBAAM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAChC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;aAC3D;YACD,yEAAyE;SAC1E;aAAM,IAAI,IAAI,KAAK,SAAS,EAAE;YAC7B,6GAA6G;SAC9G;IACH,CAAC;IAED,sDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;IAC5D,CAAC;IAED,oDAAkB,GAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,qDAAmB,GAAnB;QACE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;IAClD,CAAC;IAED,yDAAuB,GAAvB,UAAwB,IAAY;QAClC,IAAI,SAAS,KAAK,IAAI,EAAE;YACtB,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,EAAE;gBAC3C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC;aACzC;SACF;aAAM,IAAI,KAAK,KAAK,IAAI,EAAE;YACzB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE;gBAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;aACzC;SACF;IACH,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAC,WAAW;YACrG,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;YAC3C,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;YAC3C,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,eAAe,CAAC;YAEnD,KAAI,CAAC,eAAe,GAAG,WAAW,CAAC,WAAW,CAAC;YAC/C,KAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,eAAe,CAAC;YACvD,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAa,GAAb,UAAc,OAAe;QAC3B,IAAM,aAAa,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;QAC9E,IAAI,CAAC,WAAW,GAAG,aAAa,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;IAC5D,CAAC;IAED,iDAAe,GAAf,UAAgB,EAAU;QAA1B,iBAMC;QALC,IAAI,CAAC,cAAc,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC;aACpH,SAAS,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAC/C,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAS,GAAT,UAAU,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,4CAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAE5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IA/KU,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAuBwB,6EAAY;YACV,gFAAc;YAChB,0EAAY;OAvBzB,uBAAuB,CAiLnC;IAAD,8BAAC;CAAA;AAjLmC;;;;;;;;;;;;ACbpC,ssBAAssB,eAAe,6BAA6B,eAAe,2H;;;;;;;;;;;ACAjwB,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AAShE;IAIE,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,gCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAU;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACxC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,OAAO,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAK;YAC5D,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,kCAAU,GAAV;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YAC3D,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAzBU,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAMiC,uEAAW;OAJjC,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;;;;;ACV1B,snBAAsnB,2BAA2B,yBAAyB,gUAAgU,2BAA2B,yBAAyB,qlBAAqlB,qBAAqB,6BAA6B,kBAAkB,6BAA6B,uCAAuC,+uBAA+uB,8wBAA8wB,gEAAgE,2pBAA2pB,iBAAiB,4KAA4K,mCAAmC,6WAA6W,iBAAiB,6KAA6K,iBAAiB,q3C;;;;;;;;;;;ACA/uJ,yDAAyD,4BAA4B,gCAAgC,EAAE,+CAA+C,mmB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtH;AAEkC;AACvB;AACW;AAUtE;IAYE,6BAAoB,iBAAoC,EAAU,YAA0B;QAAxE,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAX5F,YAAO,GAAiB,IAAI,CAAC;QAC7B,iBAAY,GAAW,IAAI,CAAC;QAC5B,WAAM,GAAoB,IAAI,CAAC;QAC/B,mBAAc,GAAW,IAAI,CAAC;QAC9B,mBAAc,GAAW,IAAI,CAAC;QAG9B,eAAU,GAAsB,IAAI,CAAC;QACrC,oBAAe,GAAyB,IAAI,CAAC;IAK7C,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,sCAAQ,GAAR,UAAS,IAAU;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,gBAAgB,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;gBACjF,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,UAAU,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBAC/F,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;YACrE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,uCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACxD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,GAAG,IAAI,kEAAe,EAAE,CAAC;QAEpC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,4CAAc,GAAd,UAAe,YAAoB;QAAnC,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAChE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;YAC3C,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAuB,GAAvB,UAAwB,YAAY;QAApC,iBAMC;QALC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC;QACpD,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,8CAAgB,GAAhB,UAAiB,YAAoB;QAArC,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACxE,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,KAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC,CAAC;YACnD,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAwB,GAAxB;QAAA,iBAaC;QAZC,IAAM,SAAS,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAElD,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC/E,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;gBAC1C,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC;SAC5C;IACH,CAAC;IAED,sDAAwB,GAAxB;QACE,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAClF,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,gBAAgB,CAAC,GAAG,mCAAmC,CAAC;SACnE;QAED,OAAO;YACL,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;SACzC,CAAC;IACJ,CAAC;IAED,kDAAoB,GAApB;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,uCAAS,GAAT,UAAU,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,wCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IA5HU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAauC,yFAAiB,EAAwB,6EAAY;OAZjF,mBAAmB,CA6H/B;IAAD,0BAAC;CAAA;AA7H+B;;;;;;;;;;;;ACdhC,ygCAAygC,wBAAwB,6BAA6B,wBAAwB,6BAA6B,kBAAkB,6BAA6B,uBAAuB,6BAA6B,oBAAoB,8CAA8C,wHAAwH,uCAAuC,eAAe,2H;;;;;;;;;;;ACAt8C,mCAAmC,gBAAgB,EAAE,+CAA+C,md;;;;;;;;;;;;;;;;;;;;;;;;;ACApD;AAE6B;AAS7E;IAOE,2BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QANtD,SAAI,GAAW,IAAI,CAAC;QACpB,SAAI,GAAW,IAAI,CAAC;IAOpB,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,kCAAM,GAAN;QAAA,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACvD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAU;QACjB,IAAI,CAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACvC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,eAAe,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAC9E,KAAK,eAAe,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAC9E,KAAK,SAAS,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC5D,KAAK,cAAc,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBAC3E,KAAK,WAAW,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAClE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;YACrE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAlDU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCASsC,oFAAgB;OAP3C,iBAAiB,CAmD7B;IAAD,wBAAC;CAAA;AAnD6B;;;;;;;;;;;;ACX9B,gsBAAgsB,2BAA2B,yBAAyB,gUAAgU,2BAA2B,yBAAyB,yoBAAyoB,eAAe,6BAA6B,gBAAgB,6BAA6B,gBAAgB,6BAA6B,kBAAkB,6BAA6B,eAAe,ghCAAghC,0DAA0D,ooBAAooB,iBAAiB,4UAA4U,iBAAiB,qUAAqU,iBAAiB,8TAA8T,iBAAiB,mUAAmU,iBAAiB,k7C;;;;;;;;;;;ACA1+J,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AACO;AACqB;AACN;AAStE;IASE,2BAAoB,eAAgC,EAAU,YAA0B;QAApE,oBAAe,GAAf,eAAe,CAAiB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAHxF,oBAAe,GAAyB,IAAI,CAAC;IAI7C,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,qCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,IAAW;YACnD,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,GAAG,IAAI,8DAAa,EAAE,CAAC;QAElC,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QACzC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,wCAAY,GAAZ,UAAa,QAAuB;QAApC,iBAMC;QALC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QAEvB,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC;QACzC,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,oDAAwB,GAAxB;QACE,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC9D,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,MAAM,CAAC,GAAG,iCAAiC,CAAC;SACvD;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChE,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,OAAO,CAAC,GAAG,yCAAyC,CAAC;SAChE;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACpE,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,SAAS,CAAC,GAAG,oCAAoC,CAAC;SAC7D;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChE,QAAQ,GAAG,IAAI,CAAC;YAChB,SAAS,CAAC,OAAO,CAAC,GAAG,kCAAkC,CAAC;SACzD;QAED,OAAO;YACL,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;SACzC,CAAC;IACJ,CAAC;IAED,kDAAsB,GAAtB;QAAA,iBAYC;QAXC,IAAM,SAAS,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBACjE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC;gBACxC,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,KAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;SACtC;IACH,CAAC;IAED,iDAAqB,GAArB,UAAsB,QAAuB;QAA7C,iBAMC;QALC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,UAAU,CAAC;QAE9C,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;QAClD,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,0CAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC/E,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,KAAI,CAAC,UAAU,CAAC,+BAA+B,CAAC,CAAC;YACjD,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,gDAAoB,GAApB;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,qCAAS,GAAT,UAAU,EAAU;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAU,GAAV,UAAW,EAAU;QACnB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAU;QACjB,IAAI,CAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YACvC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,MAAM,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnD,KAAK,OAAO,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACtD,KAAK,OAAO,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACtD,KAAK,SAAS,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC5D,KAAK,MAAM,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACnD,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAc;YACrE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAzIU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAUqC,mFAAe,EAAwB,6EAAY;OAT7E,iBAAiB,CA0I7B;IAAD,wBAAC;CAAA;AA1I6B;;;;;;;;;;;;ACZ9B,2wCAA2wC,kBAAkB,+BAA+B,kBAAkB,+BAA+B,wCAAwC,qvB;;;;;;;;;;;ACAr5C,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAEyB;AAUzE;IAQE,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAPlD,gBAAW,GAAW,IAAI,CAAC;QAC3B,gBAAW,GAAW,IAAI,CAAC;QAE3B,cAAS,GAAmB,IAAI,CAAC;QACjC,eAAU,GAAmB,IAAI,CAAC;QAClC,yBAAoB,GAAW,IAAI,CAAC;IAGpC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,iCAAM,GAAN;QACE,4CAA4C;QAC5C,kDAAkD;QAClD,mHAAmH;QACnH,kHAAkH;QAClH,OAAO;QACP,KAAK;QACL,EAAE;QACF,4GAA4G;IAC9G,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAU;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,UAAU,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;gBAChG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAK;YAC5D,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,qCAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;YACrD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB,UAAkB,SAAiB;QACjC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;IACxC,CAAC;IAtDU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAUoC,gFAAc;OARvC,gBAAgB,CAuD5B;IAAD,uBAAC;CAAA;AAvD4B;;;;;;;;;;;;ACZ7B,0D;;;;;;;;;;;ACAA,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,mD;;;;;;;;;;;ACAA,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,iL;;;;;;;;;;;ACAA,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;ACAe;AACR;AAetE;IAIE,wBAAoB,YAA0B,EAAU,EAAc;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAU,OAAE,GAAF,EAAE,CAAY;QACpE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;IAClC,CAAC;IAED,iCAAQ,GAAR;QACE,IAAM,KAAK,GAAG,IAAI,CAAC;QAEnB,6BAA6B;QAC7B,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACvC,OAAO;SACR;QAED,oGAAoG;QACpG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAExC,kCAAkC;QAClC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAM;YACrD,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,UAAU,EAAE;gBACrC,KAAK,CAAC,KAAK,EAAE,CAAC;aACf;QACH,CAAC,CAAC,CAAC;QAEH,0FAA0F;QAC1F,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,6DAA6D;IAC7D,oCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACxB,CAAC;IAED,aAAa;IACb,6BAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QACrC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5C,CAAC;IAED,cAAc;IACd,8BAAK,GAAL;QACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IA9CQ;QAAR,2DAAK,EAAE;;8CAAY;IADT,cAAc;QAb1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SASrB,CAAC;yCAOkC,6EAAY,EAAc,wDAAU;OAJ3D,cAAc,CAiD1B;IAAD,qBAAC;CAAA;AAjD0B;;;;;;;;;;;;AChB3B,iPAAiP,yDAAyD,8FAA8F,2BAA2B,mDAAmD,uBAAuB,iDAAiD,2BAA2B,4G;;;;;;;;;;;ACAzjB,yCAAyC,uBAAuB,EAAE,+CAA+C,ue;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1D;AACO;AACH;AAO3D;IASE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IAEA,CAAC;IAZQ;QAAR,2DAAK,EAAE;kCAAc,qEAAgB;yDAAC;IAC9B;QAAR,2DAAK,EAAE;;qDAAiB;IAChB;QAAR,2DAAK,EAAE;kCAAa,kEAAe;wDAAC;IAH1B,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,gBAAgB,CAe5B;IAAD,uBAAC;CAAA;AAf4B;;;;;;;;;;;;ACT7B,yfAAyf,sCAAsC,yBAAyB,4DAA4D,0HAA0H,6GAA6G,oJ;;;;;;;;;;;ACA31B,8BAA8B,gBAAgB,0BAA0B,uBAAuB,gBAAgB,EAAE,8BAA8B,4BAA4B,yBAAyB,eAAe,gBAAgB,kBAAkB,EAAE,+CAA+C,25B;;;;;;;;;;;;;;;;;;;;;;;;ACAvM;AAS/F;IAWE;IACA,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAGD,8CAAW,GAAX,UAAY,OAAsB;QAChC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,IAAM,eAAe,GAAiB,OAAO,CAAC,SAAS,CAAC;QACxD,IAAI,eAAe,IAAI,IAAI,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC,YAAY,CAAC;SAChD;QAED,IAAM,aAAa,GAAiB,OAAO,CAAC,OAAO,CAAC;QACpD,IAAI,aAAa,IAAI,IAAI,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,YAAY,CAAC;SAC5C;QAED,IAAM,yBAAyB,GAAiB,OAAO,CAAC,mBAAmB,CAAC;QAC5E,IAAI,yBAAyB,IAAI,IAAI,EAAE;YACrC,IAAI,CAAC,oBAAoB,GAAG,yBAAyB,CAAC,YAAY,CAAC;SACpE;QACD,IAAM,sBAAsB,GAAiB,OAAO,CAAC,gBAAgB,CAAC;QACtE,IAAI,sBAAsB,IAAI,IAAI,EAAE;YAClC,IAAI,CAAC,iBAAiB,GAAG,sBAAsB,CAAC,YAAY,CAAC;SAC9D;IACH,CAAC;IAED,8CAAW,GAAX,UAAY,GAAW;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACrC,CAAC;IA1CQ;QAAR,2DAAK,EAAE;;+DAAmB;IAClB;QAAR,2DAAK,EAAE;;6DAAiB;IAChB;QAAR,2DAAK,EAAE;;yEAA8C;IAC7C;QAAR,2DAAK,EAAE;;sEAA0B;IAJvB,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OAEW,wBAAwB,CA4CpC;IAAD,+BAAC;CAAA;AA5CoC;;;;;;;;;;;;ACTrC,mTAAmT,oBAAoB,qBAAqB,cAAc,kDAAkD,oHAAoH,mE;;;;;;;;;;;ACAhhB,+DAA+D,mL;;;;;;;;;;;;;;;;;;;;;;;;;ACAI;AACM;AAQzE;IAIE,6BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFlD,uBAAkB,GAA8B,IAAI,CAAC;QAGnD,mCAAmC;IACrC,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACxE,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAhBQ;QAAR,2DAAK,EAAE;;0DAAmB;IADhB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAKoC,gFAAc;OAJvC,mBAAmB,CAmB/B;IAAD,0BAAC;CAAA;AAnB+B;;;;;;;;;;;;;;;;;;;;;;;;;ACTW;AAM3C;IAEE;QACE,IAAU,MAAO,CAAC,OAAO,EAAE;YAC3B,IAAI;gBACF,IAAI,CAAC,GAAG,GAAS,MAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC;aAC1D;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,KAAK,CAAC;aACb;SACA;aAAM;YACL,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;SAC7C;IACH,CAAC;IAED,8BAAQ,GAAR;QACE,sDAAsD;QACtD,wDAAwD;QACxD,oBAAoB;QACpB,QAAQ;QACR,+BAA+B;QAC/B,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC5C,CAAC;IAtBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAuBvB;IAAD,kBAAC;CAAA;AAvBuB;;;;;;;;;;;;;;;;;;;;;;;;ACNiB;AACY;AAkC1B;AA6E3B;IAAA;IAA4B,CAAC;IAAhB,cAAc;QA1E1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,WAAW;gBACX,yBAAyB;gBACzB,mBAAmB;gBACnB,yBAAyB;gBACzB,iBAAiB;gBACjB,mEAAiB;gBACjB,kBAAkB;gBAClB,uBAAuB;gBACvB,mBAAmB;gBACnB,sBAAsB;gBACtB,qBAAqB;gBACrB,iBAAiB;gBACjB,kBAAkB;gBAClB,iBAAiB;gBACjB,iBAAiB;gBACjB,wBAAwB;gBACxB,4BAA4B;gBAC5B,kBAAkB;gBAClB,mBAAmB;gBACnB,mBAAmB;gBACnB,oBAAoB;gBACpB,wBAAwB;gBACxB,iEAAe;gBACf,qBAAqB;gBACrB,oBAAoB;gBACpB,gEAAc;gBACd,+DAAa;gBACb,oEAAkB;gBAClB,iBAAiB;gBACjB,oBAAoB;gBACpB,kEAAgB;gBAChB,uBAAuB;gBACvB,kEAAiB;aAClB;YACD,OAAO,EAAE;gBACP,WAAW;gBACX,yBAAyB;gBACzB,mBAAmB;gBACnB,yBAAyB;gBACzB,iBAAiB;gBACjB,mEAAiB;gBACjB,kBAAkB;gBAClB,uBAAuB;gBACvB,mBAAmB;gBACnB,sBAAsB;gBACtB,qBAAqB;gBACrB,iBAAiB;gBACjB,kBAAkB;gBAClB,iBAAiB;gBACjB,iBAAiB;gBACjB,wBAAwB;gBACxB,4BAA4B;gBAC5B,kBAAkB;gBAClB,mBAAmB;gBACnB,mBAAmB;gBACnB,oBAAoB;gBACpB,wBAAwB;gBACxB,iEAAe;gBACf,qBAAqB;gBACrB,oBAAoB;gBACpB,gEAAc;gBACd,+DAAa;gBACb,oEAAkB;gBAClB,iBAAiB;gBACjB,oBAAoB;gBACpB,kEAAgB;gBAChB,uBAAuB;gBACvB,kEAAiB;aAClB;SACF,CAAC;OAGW,cAAc,CAAE;IAAD,qBAAC;CAAA;AAAF;;;;;;;;;;;;;AChH3B;AAAA;AAAA;IAKE;IAEA,CAAC;IAED,sBAAI,6BAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,+BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,+BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;IAAA;IA8CA,CAAC;IAvCC,sBAAI,yCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,2CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;aAED,UAAmB,KAAa;YAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAI,wCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,wCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,oCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAKH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AChDD;AAAA;AAAA;IAAA;IA0EA,CAAC;IA/DC,sBAAI,sCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,wCAAa;aAAjB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,KAAa;YAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAI,wCAAa;aAAjB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,KAAa;YAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAI,kCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,uCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAoB;YACnC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,oCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,iCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAoB;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,+BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAoB;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAKH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1ED;AAAA;AAAO,IAAI,SAAS,GAAG;IACrB,OAAO,EAAG,OAAO;IACjB,MAAM,EAAG,MAAM;IACf,UAAU,EAAG,UAAU;IACvB,aAAa,EAAG,aAAa;CAC9B,CAAC;;;;;;;;;;;;;ACHF;AAAA;AAAA;AAAA;IAAA;IAgEA,CAAC;IAvDC,sBAAI,qCAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAe,KAAa;YAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAMD,sBAAI,gCAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,KAAa;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAJA;IAMD,sBAAI,gCAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,KAAa;YACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAJA;IAMD,sBAAI,kCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,+BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,kCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,+BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAKH,oBAAC;AAAD,CAAC;;AAED;IAAA;IAoBA,CAAC;IAfC,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAc;YACxB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAoB;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,uBAAuB,GAAG;IACrC,OAAO,EAAE,SAAS;IAClB,WAAW,EAAE,OAAO;IACpB,IAAI,EAAE,MAAM;CACb,CAAC;AAEK,IAAM,2BAA2B,GAAG;IACzC,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEF;IAME,2BAAY,kBAA2C,EAAE,cAAmC,EAAE,OAAe,EAAE,WAAmB;QAChI,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED,sBAAI,iDAAkB;aAAtB;YACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;aAED,UAAuB,KAA8B;YACnD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAI,6CAAc;aAAlB;YACE,OAAO,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;aAED,UAAmB,KAA0B;YAC3C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAJA;IAMD,sBAAI,sCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,0CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAKH,wBAAC;AAAD,CAAC;;AAED;IAIE,+BAAY,QAAuB,EAAE,QAAgB;QACnD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAoB;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,4BAAC;AAAD,CAAC;;AAGD;IAeE,+BAAY,IAAY,EAAE,QAAsC,EAAE,gBAAgB;QAChF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,sBAAI,yCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,uCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAOD,sBAAI,yCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,+CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,mDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAED,UAAqB,KAAK;YACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,4CAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAW;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAW;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,6CAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAe,KAA+B;YAC5C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAMD,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAmC;YAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,4BAAC;AAAD,CAAC;;AAED;IAeE,2BAAY,IAAY,EAAE,YAA4C,EAAE,QAAkC,EAAE,gBAAgB;QAC1H,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,sBAAI,qCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,mCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,qCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,sCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,2CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAMD,sBAAI,+CAAgB;aAApB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAED,UAAqB,KAAK;YACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,wCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAW;YACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,sCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAW;YACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,uCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAA+B;YAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,2CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAsC;YACrD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAKH,wBAAC;AAAD,CAAC;;AAED;IAAA;IAyEA,CAAC;IA/DC,sBAAI,0EAA2B;aAA/B;YACE,OAAO,IAAI,CAAC,4BAA4B,CAAC;QAC3C,CAAC;aAED,UAAgC,KAAa;YAC3C,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAC5C,CAAC;;;OAJA;IAMD,sBAAI,sDAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,iEAAkB;aAAtB;YACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;aAED,UAAuB,KAA8B;YACnD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAI,mDAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAgB;YACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,sDAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,0DAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAW;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,qDAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,2DAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAW;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAKH,wCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjXD;AAAA;AAAA;IAAA;IA8GA,CAAC;IAhGC,sBAAI,mCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,mCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,oCAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAe,KAAsB;YACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAOD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAW;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,kCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAiB;YAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,iCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,0CAAgB;aAApB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAED,UAAqB,KAAa;YAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,mCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,iCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,sCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,KAAsB;YACrC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAJA;IAKH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9GD;AAAA;AAAA;AAAA;AAAA;IAAA;IA4BA,CAAC;IAvBC,sBAAI,yDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,qBAAqB,CAAC;QACpC,CAAC;aAED,UAAyB,KAAa;YACpC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACrC,CAAC;;;OAJA;IAMD,sBAAI,4CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,gDAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAuB;YACrC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAKH,8BAAC;AAAD,CAAC;;AAED;IAAA;IAqCA,CAAC;IA/BC,sBAAI,qDAAkB;aAAtB;YACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;aAED,UAAuB,KAAa;YAClC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,4CAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAoB;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,4BAAC;AAAD,CAAC;;AAGD;IAAA;IAiEA,CAAC;IAvDC,sBAAI,iDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAED,UAAqB,KAAa;YAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAJA;IAMD,sBAAI,4CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAuB;YACrC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,oCAAG;aAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;aAED,UAAQ,KAAa;YACnB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACpB,CAAC;;;OAJA;IAMD,sBAAI,qCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,4CAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,wCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,2CAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;aAED,UAAe,KAAa;YAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC;;;OAJA;IAKH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvID;AAAA;AAAA;IAAA;IA4BA,CAAC;IAvBC,sBAAI,mDAAiB;aAArB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC;aAED,UAAsB,KAAa;YACjC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAJA;IAMD,sBAAI,yCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,0CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAoB;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCD;AAAA;AAAA;IAOE,yBAAY,SAAgB,EAAE,SAAiB,EAAE,SAAiB,EAAE,WAAmB;QACrF,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED,sBAAI,sCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAY;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,sCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,sCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,wCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAKH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;IAAA;IA8CA,CAAC;IAvCC,sBAAI,mCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,kCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAU;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC3CD;AAAA;AAAA;IAAA;IA8CA,CAAC;IAvCC,sBAAI,2CAAa;aAAjB;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAED,UAAkB,KAAa;YAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAI,qCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,kCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAgB;YACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,oCAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,qCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAKH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IAAA;IAuDA,CAAC;IA/CC,sBAAI,mCAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAa;YACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,8BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,8BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,qCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;aAED,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMD,sBAAI,yCAAe;aAAnB;YACE,OAAO,IAAI,CAAC,gBAAgB,CAAC;QAC/B,CAAC;aAED,UAAoB,KAAa;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC;;;OAJA;IAKH,mBAAC;AAAD,CAAC;;AAED;IAAA;IAoBA,CAAC;IAfC,sBAAI,6BAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,+BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,gBAAC;AAAD,CAAC;;AAED;IAAA;IAqCA,CAAC;IA/BC,sBAAI,6BAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAJA;IAMD,sBAAI,+BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,2BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAgB;YACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,8BAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAKH,gBAAC;AAAD,CAAC;;AAED;IAAA;IAqCA,CAAC;IA/BC,sBAAI,qDAAkB;aAAtB;YACE,OAAO,IAAI,CAAC,mBAAmB,CAAC;QAClC,CAAC;aAED,UAAuB,KAAa;YAClC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAJA;IAMD,sBAAI,0CAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAMD,sBAAI,4CAAS;aAAb;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAED,UAAc,KAAoB;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC;;;OAJA;IAMD,sBAAI,2CAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAED,UAAa,KAAa;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;;;OAJA;IAKH,4BAAC;AAAD,CAAC;;AAGD;IAAA;IAmBA,CAAC;IAfC,sBAAI,sCAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAa;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAJA;IAMD,sBAAI,yCAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAJA;IAKH,2BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLwC;AAC2B;AACX;AACD;AACS;AAIjE;IAEE,qBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAED,2CAAqB,GAArB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,aAAa,CAAC,CAAC,IAAI,CAC5E,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,SAAS,CAAC,IAAI,CAAC,mEAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC5D;aACF;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IApBU,WAAW;QAFvB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;yCAIL,8EAAW;OAF1B,WAAW,CAsBvB;IAAD,kBAAC;CAAA;AAtBuB;;;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AAM3C;IAGE;QAFQ,WAAM,GAAU,EAAE,CAAC;IAEX,CAAC;IAEjB,0BAAG,GAAH,UAAI,KAAU;QACZ,sCAAsC;QACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,6BAAM,GAAN,UAAO,EAAU;QACf,2CAA2C;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC;IACrD,CAAC;IAED,2BAAI,GAAJ,UAAK,EAAU;QACb,6BAA6B;QAC7B,IAAM,KAAK,GAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAED,4BAAK,GAAL,UAAM,EAAU;QACd,8BAA8B;QAC9B,IAAM,KAAK,GAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAzBU,YAAY;QAJxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OAEW,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AACqB;AACN;AACY;AACH;AAGb;AAMpD;IACE,2BAAoB,IAAiB,EAAU,YAA0B;QAArD,SAAI,GAAJ,IAAI,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;IACzE,CAAC;IAED,wCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,mBAAmB,CAAC,CAAC,IAAI,CAClF,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,KAAyB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAA1B,IAAM,UAAU;oBACnB,SAAS,CAAC,IAAI,CAAC,mEAAiB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC;iBACtE;aACF;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR,UAAS,YAAY;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,sBAAsB,GAAG,YAAY,CAAC,CAAC,IAAI,CACpG,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oDAAwB,GAAxB,UAAyB,UAA2B;QAClD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAM,EAAE,GAAG;YACT,YAAY,EAAE,UAAU,CAAC,YAAY;YACrC,cAAc,EAAE,UAAU,CAAC,cAAc;YACzC,WAAW,EAAE,UAAU,CAAC,WAAW;YACnC,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;SACxC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,iBAAiB,EAAE,EAAE,CAAC,CAAC,IAAI,CACrF,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,4CAAgB,GAAhB,UAAiB,YAAoB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,oBAAoB,GAAG,YAAY,CAAC,CAAC,IAAI,CAClG,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAlDU,iBAAiB;QAJ7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,8EAAW,EAAwB,iEAAY;OAD9D,iBAAiB,CAmD7B;IAAD,wBAAC;CAAA;AAnD6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbW;AAEqB;AACN;AACJ;AACgB;AAKpE;IACE,0BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAED,iCAAM,GAAN,UAAO,IAAY,EAAE,IAAY;QAC/B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;QAC3B,uEAAuE;IACzE,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAU;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;IAE7B,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAcC;QAbC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,kBAAkB,CAAC,CAAC,IAAI,CACjF,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,aAAa,GAAG,EAAE,CAAC;YACzB,IAAI,IAAI,EAAE;gBACR,KAAuB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAxB,IAAM,QAAQ;oBACjB,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC1D;aACF;YACD,OAAO,aAAa,CAAC;QACvB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,gDAAqB,GAA7B,UAA8B,MAAW;QACvC,IAAM,cAAc,GAAG,IAAI,8DAAa,EAAE,CAAC;QAC3C,cAAc,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAChD,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QACpD,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QACpD,cAAc,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QACxC,cAAc,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAClD,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5C,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QACtC,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAClC,OAAO,cAAc,CAAC;IACxB,CAAC;IAzCU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,8EAAW;OAD1B,gBAAgB,CA0C5B;IAAD,uBAAC;CAAA;AA1C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACmB;AACN;AACY;AAChB;AACa;AAMjE;IAEE,yBAAoB,IAAiB,EAAU,YAA0B;QAArD,SAAI,GAAJ,IAAI,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;IAAI,CAAC;IAE9E,iCAAO,GAAP;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,mBAAmB,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CACtG,mEAAG,CAAC,UAAC,IAAgB;gBACnB,IAAM,YAAY,GAAG,EAAE,CAAC;gBACxB,IAAI,IAAI,EAAE;oBACR,KAAuB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;wBAAxB,IAAM,QAAQ;wBACjB,YAAY,CAAC,IAAI,CAAC,mEAAiB,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACvE;iBACF;gBACD,OAAO,YAAY,CAAC;YACtB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;gBACd,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CACH,CAAC;SACH;IACH,CAAC;IAED,sCAAY,GAAZ,UAAa,MAAqB;QAChC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAM,EAAE,GAAG,mEAAiB,CAAC,uBAAuB,CAAC,MAAM,EAAG,OAAO,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,eAAe,EAAE,EAAE,CAAC,CAAC,IAAI,CACnF,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,wCAAc,GAAd,UAAe,UAAkB;QAC/B,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAM,EAAE,GAAG;YACT,UAAU,EAAE,UAAU;YACtB,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;SACxC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,iBAAiB,EAAE,EAAE,CAAC,CAAC,IAAI,CACrF,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,OAAO,mEAAiB,CAAC,6BAA6B,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA9CU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,8EAAW,EAAwB,iEAAY;OAF9D,eAAe,CA+C3B;IAAD,sBAAC;CAAA;AA/C2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACiB;AACnB;AACa;AAMpD;IAEE,0BAAoB,MAAc,EAAU,YAA0B,EAAU,cAA8B;QAA1F,WAAM,GAAN,MAAM,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAC9G,CAAC;IAED,8CAAmB,GAAnB;QAAA,iBAuBC;QAtBC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,OAAO,IAAI,IAAI,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC5D,IAAI,cAAc,GAAG,KAAK,CAAC;gBAC3B,IAAM,qBAAqB,GAAG,IAAI,CAAC;gBACnC,IAAI,qBAAqB,IAAI,IAAI,IAAI,qBAAqB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvE,cAAc,GAAG,IAAI,CAAC;iBACvB;qBAAM;oBACL,KAA+B,UAAqB,EAArB,+CAAqB,EAArB,mCAAqB,EAArB,IAAqB,EAAE;wBAAjD,IAAM,gBAAgB;wBACzB,IAAI,gBAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,eAAe,EAAE;4BACvD,cAAc,GAAG,IAAI,CAAC;yBACvB;qBACF;iBACF;gBAED,IAAI,cAAc,EAAE;oBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;iBAC9C;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;iBAC9C;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,+CAAoB,GAApB,UAAqB,SAAiB;IAEtC,CAAC;IAhCU,gBAAgB;QAJ5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI4B,sDAAM,EAAwB,iEAAY,EAA0B,uEAAc;OAFnG,gBAAgB,CAiC5B;IAAD,uBAAC;CAAA;AAjC4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AAIiB;AAEM;AACsC;AAMtG;IAME,6BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QALlD,gBAAW,GAA6B,IAAI,CAAC;QAC7C,oBAAe,GAAiC,IAAI,CAAC;QAKnD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,mFAAuB,CAAC,OAAO,CAAC;IAChD,CAAC;IAED,6CAAe,GAAf,UAAgB,aAAgC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,iDAAmB,GAAnB;QAAA,iBAsBC;QArBC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,MAAM,GAAG,0EAAc,CAAC,WAAW,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE/D,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,0EAAc,CAAC,WAAW,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,0EAAc,CAAC,WAAW,CAAC;YACzD,IAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC;YAEnD,UAAU,CAAC;gBACT,KAAI,CAAC,8BAA8B,EAAE,CAAC;YACxC,CAAC,EAAE,QAAQ,CAAC,CAAC;SACd;QAED,SAAS,qBAAqB,CAAC,aAAgC;YAC7D,KAAmB,UAA0B,EAA1B,kBAAa,CAAC,YAAY,EAA1B,cAA0B,EAA1B,IAA0B,EAAE;gBAA1C,IAAM,IAAI;gBACb,IAAI,IAAI,CAAC,MAAM,KAAK,mFAAuB,CAAC,OAAO,EAAE;oBACnD,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,4DAA8B,GAA9B;QACE,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;YAChC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,uFAA2B,CAAC,OAAO,EAAE;gBACrE,aAAa;gBACb,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,mFAAuB,CAAC,IAAI,CAAC;gBAC3D,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBACjD,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC/E;gBACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAE5B;iBAAM,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,uFAA2B,CAAC,OAAO,EAAE;gBAC5E,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,mFAAuB,CAAC,IAAI,CAAC;gBAE3D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBAErG,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBACjD,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC/E;gBAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAE5B;iBAAM,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,uFAA2B,CAAC,QAAQ,EAAE;gBAC7E,IAAI,CAAC,wBAAwB,CAAC,mFAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,kBAAkB,EAC/H,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACtC;SACF;IACH,CAAC;IAED,mDAAqB,GAArB,UAAsB,IAAY,EAAE,IAA2B,EAAE,MAAc;QAC7E,IAAI,IAAI,KAAK,uFAA2B,CAAC,OAAO,EAAE;YAChD,IAAI,CAAC,cAAc,CAAC,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SACzG;IACH,CAAC;IAED,sDAAwB,GAAxB,UAAyB,IAAY,EAAE,MAAc,EAAE,kBAA2C,EAAE,OAAe;QAAnH,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,gCAAgC,CAAC,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YAC9G,sBAAsB;YACtB,KAAI,CAAC,eAAe,CAAC,MAAM,GAAG,mFAAuB,CAAC,IAAI,CAAC;YAC3D,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,mFAAuB,CAAC,IAAI,CAAC;YACvD,KAAI,CAAC,MAAM,GAAG,mFAAuB,CAAC,OAAO,CAAC;YAE9C,IAAI,KAAI,CAAC,eAAe,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACjD,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,eAAe,CAAC,CAAC;aAC/E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAvFU,mBAAmB;QAJ/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAQoC,uEAAc;OANvC,mBAAmB,CAwF/B;IAAD,0BAAC;CAAA;AAxF+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbS;AAC2B;AACN;AACN;AACS;AAGb;AAQpD;IAIE,wBAAoB,IAAiB,EAAU,YAA0B;QAArD,SAAI,GAAJ,IAAI,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAHzE,gBAAW,GAAmB,EAAE,CAAC;QACjC,2BAAsB,GAA8B,EAAE,CAAC;QAGrD,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kCAAS,GAAT;QACE,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,iDAAwB,GAAxB;QAAA,iBAiBC;QAhBC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,6BAA6B,CAAC,CAAC,IAAI,CAC5F,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,sBAAsB,GAAG,EAAE,CAAC;YAClC,IAAI,IAAI,EAAE;gBACR,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAnB,IAAM,GAAG;oBACZ,sBAAsB,CAAC,IAAI,CAAC,mEAAiB,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC,CAAC;iBACpF;aACF;YAED,KAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;YACrD,OAAO,sBAAsB,CAAC;QAChC,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,+BAAM,GAAN;QAAA,iBAgBC;QAfC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,gBAAgB,CAAC,CAAC,IAAI,CAC/E,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,EAAE;gBACR,KAAsB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAvB,IAAM,OAAO;oBAChB,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC/D;aACF;YACD,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC;YAC1B,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAGD,0CAAiB,GAAjB;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,0BAA0B,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAC7G,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,EAAE;gBACR,KAAsB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAvB,IAAM,OAAO;oBAChB,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC,CAAC;iBACvE;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,eAAe;IACf,iBAAiB;IACjB,2BAA2B;IAC3B,yBAAyB;IACzB,OAAO;IACP,cAAc;IACd,4EAA4E;IAC5E,qBAAqB;IACrB,4BAA4B;IAC5B,UAAU;IACV,mBAAmB;IACnB,IAAI;IACJ,EAAE;IACF,gBAAgB;IAChB,iBAAiB;IACjB,2BAA2B;IAC3B,yBAAyB;IACzB,OAAO;IACP,cAAc;IACd,iFAAiF;IACjF,qBAAqB;IACrB,4BAA4B;IAC5B,UAAU;IACV,mBAAmB;IACnB,IAAI;IAEJ,iCAAQ,GAAR,UAAS,SAAiB;QACxB,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACnD,OAAO,MAAM,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEjF,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK;YACpC,OAAO,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED,iDAAwB,GAAxB,UAAyB,SAAiB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,wBAAwB,GAAG,SAAS,CAAC,CAAC,IAAI,CACnG,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrE;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,8CAAqB,GAArB,UAAsB,aAAqB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,4BAA4B,GAAG,aAAa,CAAC,CAAC,IAAI,CAC3G,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,mDAA0B,GAA1B,UAA2B,oBAA4B;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,gCAAgC,GAAG,oBAAoB,CAAC,CAAC,IAAI,CACtH,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gDAAuB,GAAvB,UAAwB,oBAA4B,EAAE,OAAqB,EAAE,WAA6B,EAClF,cAAuC,EAAE,oBAA6C;QAC5G,IAAM,UAAU,GAAG,mEAAiB,CAAC,uCAAuC,CAAC,oBAAoB,EAAE,OAAO,EAAE,WAAW,EACrH,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,EAAE,cAAc,EAAE,oBAAoB,CAAC,CAAC;QAE5E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,8BAA8B,EAAE,UAAU,CAAC,CAAC,IAAI,CAC1G,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA7JU,cAAc;QAJ1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,8EAAW,EAAwB,iEAAY;OAJ9D,cAAc,CA8J1B;IAAD,qBAAC;CAAA;AA9J0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACfc;AACO;AAgBhD;IAIE,sBAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHrC,QAAG,GAAG,uBAAuB,CAAC;QAC9B,eAAU,GAAe,EAAE,CAAC;IAI5B,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,EAAE,eAAe,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAC;QAE3G,OAAO,IAAI,CAAC,UAAU,CAAC;QAEvB,sCAAsC;IACxC,CAAC;IAED,mCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IACnD,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ;QAC/C,IAAM,KAAK,GAAG;YACZ,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ;SACnF,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAa,EAAE,KAAK,CAAC,CAAC;IACzD,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAC9D,IAAM,KAAK,GAAG;YACZ,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,kCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,GAAG,uBAAkB,EAAI,CAAC,CAAC;IAE1D,CAAC;IAED,oCAAa,GAAb,UAAc,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM;QAC5D,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,UAAU;YACtB,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;IACJ,CAAC;IAxDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK2B,+DAAU;OAJ1B,YAAY,CAyDxB;IAAD,mBAAC;CAAA;AAzDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBgB;AAC2B;AAEH;AACT;AACM;AACvB;AAIa;AAKpD;IAIE,wBAAoB,IAAiB,EAAU,YAA0B,EAAU,MAAc;QAA7E,SAAI,GAAJ,IAAI,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHjG,YAAO,GAAiB,IAAI,CAAC;QAI3B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kCAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAElD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC7C,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;YACpC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,4CAAmB,GAAnB;QACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAChH,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrE;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,iDAAwB,GAAxB;QACE,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;SACnD;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,mDAA0B,GAA1B,UAA2B,OAAqB,EAAE,SAAwB,EAAE,WAAmB;QAC7F,IAAM,EAAE,GAAG;YACT,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;YACvC,SAAS,EAAE,EAAC,WAAW,EAAE,SAAS,CAAC,WAAW,EAAC;YAC/C,QAAQ,EAAE,WAAW;SACtB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,uBAAuB,EAAE,EAAE,CAAC,CAAC,IAAI,CAC3F,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,MAAM,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,MAAM,CAAC,IAAI,CAAC,mEAAiB,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrE;aACF;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,oDAA2B,GAA3B,UAA4B,QAAuB,EAAE,QAAgB,EAAE,MAAc;QACnF,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzC,IAAM,EAAE,GAAG;YACT,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;YACvC,SAAS,EAAE,EAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAC;YAC9C,QAAQ,EAAE,QAAQ;YAClB,2BAA2B,EAAE,MAAM;SACpC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,4BAA4B,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC;IAC5G,CAAC;IAED,yDAAgC,GAAhC,UAAiC,MAAc,EAAE,MAAM,EAAE,kBAA2C,EAAE,QAAgB;QACpH,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnD,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAElD,IAAM,EAAE,GAAG;YACT,2BAA2B,EAAE,MAAM;YACnC,kBAAkB,EAAE,EAAC,oBAAoB,EAAE,kBAAkB,CAAC,oBAAoB,EAAC;YACnF,IAAI,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAC;YAC3B,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;YACvC,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,wBAAwB,EAAE,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,4CAAmB,GAAnB;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAClH,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,mBAAmB,GAAG,EAAE,CAAC;YAC/B,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,mBAAmB,CAAC,IAAI,CAAC,mEAAiB,CAAC,wCAAwC,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC5F;aACF;YACD,OAAO,mBAAmB,CAAC;QAC7B,CAAC,CAAC,EAAE,0EAAU,CAAC,WAAC;YACd,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6CAAoB,GAApB,UAAqB,MAAc;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,2BAA2B,GAAG,MAAM,CAAC,CAAC,IAAI,CACnG,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,kDAAyB,GAAzB,UAA0B,OAAe,EAAE,mBAA4C,EAAE,QAAsB;QAC7G,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kCAAkC;QACjG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,wBAAwB,GAAG,SAAS,CAAC,CAAC,IAAI,CACnG,mEAAG,CAAC,UAAC,QAAoB;YACvB,qCAAqC;YACrC,IAAM,GAAG,GAAG,EAAE,CAAC,CAAC,yCAAyC;YACzD,IAAM,eAAe,GAAG,EAAE,CAAC,CAAC,kEAAkE;YAC9F,QAAQ,CAAC,GAAG,CAAC,WAAC;gBACZ,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;YAC1D,CAAC,CAAC,CAAC;YACH,mBAAmB,CAAC,GAAG,CAAC,YAAE;gBACxB,IAAM,UAAU,GAAG,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC;gBAC9C,iGAAiG;gBACjG,IAAM,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxE,4EAA4E;gBAC5E,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,eAAe,CAAC,UAAU,CAAC,GAAG,cAAc,EAAE;oBAChF,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACtB;YACH,CAAC,CAAC,CAAC;YACH,OAAO,GAAG,CAAC;QACb,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,6CAAoB,GAApB,UAAqB,WAAmB,EAAE,eAAuB;QAC/D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAM,EAAE,GAAG;YACT,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;YACjC,WAAW,EAAE,WAAW;YACxB,eAAe,EAAE,eAAe;SACjC,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,gBAAgB,EAAE,EAAE,CAAC,CAAC,IAAI,CACpF,mEAAG,CAAC,UAAC,IAAS;YACZ,OAAO,mEAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,2CAAkB,GAAlB,UAAmB,OAAqB;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IA9KU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,8EAAW,EAAwB,iEAAY,EAAkB,sDAAM;OAJtF,cAAc,CA+K1B;IAAD,qBAAC;CAAA;AA/K0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfc;AAEqB;AACN;AACY;AAEH;AAOjE;IAIE,wBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAHrC,cAAS,GAAmB,EAAE,CAAC;QAC/B,eAAU,GAAmB,IAAI,CAAC;IAGlC,CAAC;IAED,qCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,gBAAgB,CAAC,CAAC,IAAI,CAC/E,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,SAAS,CAAC,IAAI,CAAC,mEAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/D;aACF;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,0CAAiB,GAAjB,UAAkB,SAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,sBAAsB,GAAG,SAAS,CAAC,CAAC;IACjG,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAU;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC;YACvC,QAAQ,IAAI,CAAC,MAAM,EAAE;gBACnB,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,KAAK,aAAa,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBACxE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,SAAS,OAAO,CAAC,CAAkB,EAAE,CAAkB,EAAE,KAAK;YAC5D,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,2CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,sBAAsB,CAAC,CAAC,IAAI,CACrF,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,SAAS,CAAC,IAAI,CAAC,mEAAiB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,sDAA6B,GAA7B,UAA8B,SAAiB;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,6BAA6B,GAAG,SAAS,CAAC,CAAC,IAAI,CACxG,mEAAG,CAAC,UAAC,IAAgB;YACnB,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,EAAE;gBACR,KAAmB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAApB,IAAM,IAAI;oBACb,SAAS,CAAC,IAAI,CAAC,mEAAiB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC;iBACnE;aACF;YACD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EACF,0EAAU,CAAC,WAAC;YACV,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IA7EU,cAAc;QAJ1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,8EAAW;OAJ1B,cAAc,CA8E1B;IAAD,qBAAC;CAAA;AA9E0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACbc;AAE2B;AAKpE;IACE,4BAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACrC,CAAC;IAFU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,8EAAW;OAD1B,kBAAkB,CAK9B;IAAD,yBAAC;CAAA;AAL8B;;;;;;;;;;;;;;;;;;;;;;;;;ACPU;AAMzC;IAEE;QAGA,cAAS,GAAc,IAAI,CAAC;QAC5B,YAAO,GAAiB,IAAI,CAAC;IAH7B,CAAC;IAKD,0CAAmB,GAAnB,UAAoB,SAAoB;QACtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,wCAAiB,GAAjB,UAAkB,OAAqB;QACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,uCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAtBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,YAAY,CAuBxB;IAAD,mBAAC;CAAA;AAvBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AACD;AACD;AACK;AACkB;AACM;AACH;AAEb;AAMpD;IAKE,qBAAoB,IAAiB,EAAU,MAAc,EAAU,aAA4B,EAAU,YAA0B;QAAnH,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAJvI,YAAO,GAAY,KAAK,CAAC;QACzB,YAAO,GAAc,IAAI,CAAC;QAIxB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,qCAAe,GAAf;QACE,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAC1F,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;SAClG;IACH,CAAC;IAED,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QAAxC,iBAyBC;QAxBC,IAAM,EAAE,GAAG;YACT,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,QAAQ,CAAC,cAAc,GAAG,YAAY,EAAE,EAAE,CAAC,CAAC,IAAI,CACzE,mEAAG,CAAC,eAAK;YACP,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,mEAAiB,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAC3D,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACpD,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1D,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;iBAAM;gBACL,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,qDAAqD,CAAC;gBAC1E,KAAK,CAAC,qDAAqD,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CACH,CAAC,SAAS,EAAE,CAAC;IAChB,CAAC;IAED,kCAAY,GAAZ;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,+BAAS,GAAT;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAxDU,WAAW;QAJvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO0B,8EAAW,EAAkB,sDAAM,EAAyB,uDAAa,EAAwB,iEAAY;OAL5H,WAAW,CAyDvB;IAAD,kBAAC;CAAA;AAzDuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACduB;AACc;AACc;AACvB;AACe;AAmBnE;IAAA;IASA,CAAC;mBATY,UAAU;IACd,kBAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,YAAU;YACpB,SAAS,EAAE;gBACT,kEAAW;aACZ;SACF,CAAC;IACJ,CAAC;;IARU,UAAU;QAjBtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,qEAAgB;aACjB;YACD,YAAY,EAAE,EACb;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,iFAAkB;gBAClB;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,iFAAkB;oBAC5B,KAAK,EAAE,IAAI;iBACZ;aAAC;YACJ,OAAO,EAAE,EAAE;SACZ,CAAC;OACW,UAAU,CAStB;IAAD,iBAAC;CAAA;AATsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB8B;AAC0D;AACjE;AAC9C,2DAA2D;AACf;AAK5C;IACE,kDAAkD;IAClD,IAAI;IACJ;IACA,CAAC;IAED,sCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAChD,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,2CAA2C;QAC3C,eAAe;QACb,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;QACpD,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACpD,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAChD,WAAW;QACX,2BAA2B;QAC3B,IAAI;QACJ,2CAA2C;QAC3C,gCAAgC;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACxB,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAC/C,CAAC;IACN,CAAC;IAED;;;;;;;;;;;OAWG;IACK,4CAAe,GAAvB,UAAwB,KAA8B,EAAE,MAAwB;QAC9E,6BAA6B;QAC7B,+BAA+B;QAC/B,IAAI;QACJ,IAAI,OAAe,CAAC;QACpB,IAAI,KAAK,YAAY,sEAAiB,EAAE;YACtC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;SACzB;aAAM;YACL,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC5D;QACD,OAAO,uDAAU,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED;;;;;;;;;;;OAWG;IACH,+CAAkB,GAAlB,UAAmB,KAA8B,EAAE,MAAwB;QACzE,6BAA6B;QAC7B,+BAA+B;QAC/B,IAAI;QACJ,IAAI,OAAe,CAAC;QACpB,IAAI,KAAK,YAAY,sEAAiB,EAAE;YACtC,sBAAsB;YACtB,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE;gBACrB,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;aACrC;iBAAM;gBACL,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;aACzB;SACF;aAAM;YACL,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC5D;QACD,OAAO,uDAAU,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IA7EU,kBAAkB;QAH9B,gEAAU,CAAE;YACX,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CA8E9B;IAAD,yBAAC;CAAA;AA9E8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACO;AAGhD;IAAiC,+BAAU;IAA3C;;IAEA,CAAC;IAFY,WAAW;QADvB,gEAAU,EAAE;OACA,WAAW,CAEvB;IAAD,kBAAC;CAAA,CAFgC,+DAAU,GAE1C;AAFuB;;;;;;;;;;;;;ACJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACM;AAC8D;AAC3D;AACT;AACN;AACQ;AACoE;AACrC;AACR;AACT;AAWxD,IAAM,cAAc,GAAG;IAC5B,KAAK,EAAE,OAAO;IACd,WAAW,EAAE,aAAa;IAC1B,QAAQ,EAAE,UAAU;CACrB,CAAC;AAEF;IAAA;IA4PA,CAAC;IA3PQ,uCAAqB,GAA5B,UAA6B,MAAW;QACtC,IAAM,OAAO,GAAG,IAAI,4DAAY,EAAE,CAAC;QACnC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,UAAU,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACjF,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACnC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1G,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACnD,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QACjC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,+CAA6B,GAApC,UAAqC,MAAW;QAC9C,IAAM,eAAe,GAAG,IAAI,6EAAoB,EAAE,CAAC;QACnD,eAAe,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QAC7D,eAAe,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClF,eAAe,CAAC,QAAQ,GAAG,iBAAiB,CAAC,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACrF,OAAO,eAAe,CAAC;IACzB,CAAC;IAEM,uCAAqB,GAA5B,UAA6B,MAAW;QACtC,IAAM,IAAI,GAAG,IAAI,4DAAY,EAAE,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,kDAAgC,GAAvC,UAAwC,MAAW;QACjD,IAAM,IAAI,GAAG,IAAI,oFAAuB,EAAE,CAAC;QAC3C,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;QACxD,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,yBAAyB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACnF,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,gDAA8B,GAArC,UAAsC,MAAW;QAC/C,IAAM,IAAI,GAAG,IAAI,kFAAqB,EAAE,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,yCAAuB,GAA9B,UAA+B,MAAW;QACxC,IAAM,IAAI,GAAG,IAAI,8DAAa,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,8CAA4B,GAAnC,UAAoC,MAAW;QAC7C,IAAM,IAAI,GAAG,IAAI,gFAAmB,EAAE,CAAC;QACvC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,wCAAsB,GAA7B,UAA8B,MAAW;QACvC,IAAM,UAAU,GAAG,IAAI,kEAAe,EAAE,CAAC;QACzC,UAAU,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAC9C,UAAU,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAClD,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAC5C,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC7G,OAAO,UAAU,CAAC;IACpB,CAAC;IAEM,gDAA8B,GAArC,UAAsC,MAAW;QAC/C,IAAM,kBAAkB,GAAG,IAAI,oFAAuB,EAAE,CAAC;QACzD,kBAAkB,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;QACtE,kBAAkB,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACrF,kBAAkB,CAAC,WAAW,GAAG,iBAAiB,CAAC,yBAAyB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACjG,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAEM,2CAAyB,GAAhC,UAAiC,MAAW;QAC1C,IAAM,WAAW,GAAG,IAAI,qEAAgB,EAAE,CAAC;QAC3C,WAAW,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QACjD,WAAW,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9E,WAAW,CAAC,IAAI,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrE,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QACnC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QACrC,OAAO,WAAW,CAAC;IACrB,CAAC;IAEM,oCAAkB,GAAzB,UAA0B,MAAW;QACnC,IAAM,IAAI,GAAG,IAAI,sDAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,oCAAkB,GAAzB,UAA0B,MAAW;QACnC,IAAM,IAAI,GAAG,IAAI,4DAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3F,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACvG,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,oCAAkB,GAAzB,UAA0B,MAAW;QACnC,IAAM,IAAI,GAAG,IAAI,4DAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,uCAAqB,GAA5B,UAA6B,MAAW;QACtC,IAAM,OAAO,GAAG,IAAI,+DAAY,EAAE,CAAC;QACnC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QACrC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3B,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;QACjD,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACzC,OAAO,OAAO,CAAC;IACjB,CAAC;IAEM,gDAA8B,GAArC,UAAsC,MAAW;QAC/C,IAAM,IAAI,GAAG,IAAI,wEAAqB,EAAE,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC7E,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,0DAAwC,GAA/C,UAAgD,MAAW;QACzD,IAAM,IAAI,GAAG,IAAI,6FAAiC,EAAE,CAAC;QACrD,IAAI,CAAC,2BAA2B,GAAG,MAAM,CAAC,2BAA2B,CAAC;QACtE,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QACxG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAGM,wCAAsB,GAA7B,UAA8B,QAAa;QACzC,IAAM,IAAI,GAAG,IAAI,8DAAa,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3G,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,+CAA6B,GAApC,UAAqC,MAAW;QAC9C,IAAM,IAAI,GAAG,IAAI,uEAAoB,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,yDAAuC,GAA9C,UAA+C,oBAA4B,EAC5B,OAAqB,EACrB,WAA6B,EAC7B,OAAqB,EACrB,oBAA6C,EAC7C,oBAA6C;QAC1F,IAAM,aAAa,GAAG;YACpB,SAAS,EAAE,OAAO,CAAC,SAAS;SAC7B,CAAC;QAEF,IAAM,wBAAwB,GAAG;YAC/B,oBAAoB,EAAE,oBAAoB;YAC1C,OAAO,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,OAAO,CAAC;YAC1D,WAAW,EAAE,EAAC,aAAa,EAAE,WAAW,CAAC,aAAa,EAAC;SACxD,CAAC;QAEF,IAAM,0BAA0B,GAAG,EAAE,CAAC;QACtC,KAAmB,UAAoB,EAApB,6CAAoB,EAApB,kCAAoB,EAApB,IAAoB,EAAE;YAApC,IAAM,IAAI;YACb,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBAC9C,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1F;SACF;QAED,IAAM,qBAAqB,GAAG,EAAE,CAAC;QACjC,KAA6B,UAAoB,EAApB,6CAAoB,EAApB,kCAAoB,EAApB,IAAoB,EAAE;YAA9C,IAAM,cAAc;YACvB,IAAI,cAAc,CAAC,OAAO,EAAE;gBAC1B,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;aAChE;SACF;QAED,OAAO;YACL,kBAAkB,EAAE,wBAAwB;YAC5C,OAAO,EAAE,aAAa;YACtB,oBAAoB,EAAE,0BAA0B;YAChD,YAAY,EAAG,qBAAqB;SACrC,CAAC;IACJ,CAAC;IAEM,wCAAsB,GAA7B,UAA8B,OAAqB;QACjD,OAAO;YACL,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,WAAW,EAAE,OAAO,CAAC,WAAW;YAChC,UAAU,EAAE,EAAC,YAAY,EAAE,OAAO,CAAC,UAAU,CAAC,YAAY,EAAC;YAC3D,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;YAC1C,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;SACzB,CAAC;IACJ,CAAC;IAEM,iDAA+B,GAAtC,UAAuC,gBAAuC;QAC5E,OAAO;YACL,kBAAkB,EAAE,gBAAgB,CAAC,kBAAkB;YACvD,SAAS,EAAE,EAAC,WAAW,EAAE,gBAAgB,CAAC,SAAS,CAAC,WAAW,EAAC;YAChE,OAAO,EAAE,EAAC,SAAS,EAAE,gBAAgB,CAAC,OAAO,CAAC,SAAS,EAAC;YACxD,QAAQ,EAAE,gBAAgB,CAAC,QAAQ;SACpC,CAAC;IACJ,CAAC;IAEM,yCAAuB,GAA9B,UAA+B,MAAqB,EAAE,OAAqB;QACzE,OAAO;YACL,UAAU,EAAE,MAAM,CAAC,UAAU;YAC7B,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,OAAO,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAC;SACxC,CAAC;IACJ,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvRD;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,uDAAuD;QACvD,cAAc,EAAE,0EAA0E;QAC1F,UAAU,EAAG,YAAY;KAC1B;CACF,CAAC;AAEF;IAEE;QAIO,oBAAe,GAAG,cAAc,CAAC;QAHtC,cAAc,CAAC,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC;IAClD,CAAC;IAID,sBAAW,0BAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IACH,qBAAC;AAAD,CAAC;;AAED;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjCnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"/*!\\r\\n * Start Bootstrap - SB Admin v5.0.2 (https://startbootstrap.com/template-overviews/sb-admin)\\r\\n * Copyright 2013-2018 Start Bootstrap\\r\\n * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-sb-admin/blob/master/LICENSE)\\r\\n */\\nhtml {\\n  position: relative;\\n  min-height: 100%; }\\nbody {\\n  height: 100%; }\\n#wrapper {\\n  display: flex; }\\n#wrapper #content-wrapper {\\n  overflow-x: hidden;\\n  width: 100%;\\n  padding-top: 1rem;\\n  padding-bottom: 80px; }\\nbody.fixed-nav #content-wrapper {\\n  margin-top: 56px;\\n  padding-left: 90px; }\\nbody.fixed-nav.sidebar-toggled #content-wrapper {\\n  padding-left: 0; }\\n@media (min-width: 768px) {\\n  body.fixed-nav #content-wrapper {\\n    padding-left: 225px; }\\n  body.fixed-nav.sidebar-toggled #content-wrapper {\\n    padding-left: 90px; } }\\n.scroll-to-top {\\n  position: fixed;\\n  right: 15px;\\n  bottom: 15px;\\n  display: none;\\n  width: 50px;\\n  height: 50px;\\n  text-align: center;\\n  color: #fff;\\n  background: rgba(52, 58, 64, 0.5);\\n  line-height: 46px; }\\n.scroll-to-top:focus, .scroll-to-top:hover {\\n  color: white; }\\n.scroll-to-top:hover {\\n  background: #343a40; }\\n.scroll-to-top i {\\n  font-weight: 800; }\\n.smaller {\\n  font-size: 0.7rem; }\\n.o-hidden {\\n  overflow: hidden !important; }\\n.z-0 {\\n  z-index: 0; }\\n.z-1 {\\n  z-index: 1; }\\n.navbar-nav .form-inline .input-group {\\n  width: 100%; }\\n.navbar-nav .nav-item.active .nav-link {\\n  color: #fff; }\\n.navbar-nav .nav-item.dropdown .dropdown-toggle::after {\\n  width: 1rem;\\n  text-align: center;\\n  float: right;\\n  vertical-align: 0;\\n  border: 0;\\n  font-weight: 900;\\n  content: '\\\\f105';\\n  font-family: 'Font Awesome 5 Free'; }\\n.navbar-nav .nav-item.dropdown.show .dropdown-toggle::after {\\n  content: '\\\\f107'; }\\n.navbar-nav .nav-item.dropdown.no-arrow .dropdown-toggle::after {\\n  display: none; }\\n.navbar-nav .nav-item .nav-link:focus {\\n  outline: none; }\\n.navbar-nav .nav-item .nav-link .badge {\\n  position: absolute;\\n  margin-left: 0.75rem;\\n  top: 0.3rem;\\n  font-weight: 400;\\n  font-size: 0.5rem; }\\n@media (min-width: 768px) {\\n  .navbar-nav .form-inline .input-group {\\n    width: auto; } }\\n.sidebar {\\n  width: 90px !important;\\n  background-color: #212529;\\n  min-height: calc(100vh - 56px); }\\n.sidebar .nav-item:last-child {\\n  margin-bottom: 1rem; }\\n.sidebar .nav-item .nav-link {\\n  text-align: center;\\n  padding: 0.75rem 1rem;\\n  width: 90px; }\\n.sidebar .nav-item .nav-link span {\\n  font-size: 0.65rem;\\n  display: block; }\\n.sidebar .nav-item .dropdown-menu {\\n  position: absolute !important;\\n  -webkit-transform: none !important;\\n  transform: none !important;\\n  left: calc(90px + 0.5rem) !important;\\n  margin: 0; }\\n.sidebar .nav-item .dropdown-menu.dropup {\\n  bottom: 0;\\n  top: auto !important; }\\n.sidebar .nav-item.dropdown .dropdown-toggle::after {\\n  display: none; }\\n.sidebar .nav-item .nav-link {\\n  color: rgba(255, 255, 255, 0.5); }\\n.sidebar .nav-item .nav-link:active, .sidebar .nav-item .nav-link:focus, .sidebar .nav-item .nav-link:hover {\\n  color: rgba(255, 255, 255, 0.75); }\\n.sidebar.toggled {\\n  width: 0 !important;\\n  overflow: hidden; }\\n@media (min-width: 768px) {\\n  .sidebar {\\n    width: 225px !important; }\\n  .sidebar .nav-item .nav-link {\\n    display: block;\\n    width: 100%;\\n    text-align: left;\\n    padding: 1rem;\\n    width: 225px; }\\n  .sidebar .nav-item .nav-link span {\\n    font-size: 1rem;\\n    display: inline; }\\n  .sidebar .nav-item .dropdown-menu {\\n    position: static !important;\\n    margin: 0 1rem;\\n    top: 0; }\\n  .sidebar .nav-item.dropdown .dropdown-toggle::after {\\n    display: block; }\\n  .sidebar.toggled {\\n    overflow: visible;\\n    width: 90px !important; }\\n  .sidebar.toggled .nav-item:last-child {\\n    margin-bottom: 1rem; }\\n  .sidebar.toggled .nav-item .nav-link {\\n    text-align: center;\\n    padding: 0.75rem 1rem;\\n    width: 90px; }\\n  .sidebar.toggled .nav-item .nav-link span {\\n    font-size: 0.65rem;\\n    display: block; }\\n  .sidebar.toggled .nav-item .dropdown-menu {\\n    position: absolute !important;\\n    -webkit-transform: none !important;\\n    transform: none !important;\\n    left: calc(90px + 0.5rem) !important;\\n    margin: 0; }\\n  .sidebar.toggled .nav-item .dropdown-menu.dropup {\\n    bottom: 0;\\n    top: auto !important; }\\n  .sidebar.toggled .nav-item.dropdown .dropdown-toggle::after {\\n    display: none; } }\\n.sidebar.fixed-top {\\n  top: 56px;\\n  height: calc(100vh - 56px);\\n  overflow-y: auto; }\\n.card-body-icon {\\n  position: absolute;\\n  z-index: 0;\\n  top: -1.25rem;\\n  right: -1rem;\\n  opacity: 0.4;\\n  font-size: 5rem;\\n  -webkit-transform: rotate(15deg);\\n  transform: rotate(15deg); }\\n@media (min-width: 576px) {\\n  .card-columns {\\n    -webkit-column-count: 1;\\n    column-count: 1; } }\\n@media (min-width: 768px) {\\n  .card-columns {\\n    -webkit-column-count: 2;\\n    column-count: 2; } }\\n@media (min-width: 1200px) {\\n  .card-columns {\\n    -webkit-column-count: 2;\\n    column-count: 2; } }\\n:root {\\n  --input-padding-x: 0.75rem;\\n  --input-padding-y: 0.75rem; }\\n.card-login {\\n  max-width: 25rem; }\\n.card-register {\\n  max-width: 40rem; }\\n.form-label-group {\\n  position: relative; }\\n.form-label-group > input,\\n.form-label-group > label {\\n  padding: var(--input-padding-y) var(--input-padding-x);\\n  height: auto; }\\n.form-label-group > label {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  display: block;\\n  width: 100%;\\n  margin-bottom: 0;\\n  /* Override default `<label>` margin */\\n  line-height: 1.5;\\n  color: #495057;\\n  border: 1px solid transparent;\\n  border-radius: 0.25rem;\\n  transition: all 0.1s ease-in-out; }\\n.form-label-group input::-webkit-input-placeholder {\\n  color: transparent; }\\n.form-label-group input:-ms-input-placeholder {\\n  color: transparent; }\\n.form-label-group input::-ms-input-placeholder {\\n  color: transparent; }\\n.form-label-group input::placeholder {\\n  color: transparent; }\\n.form-label-group input:not(:placeholder-shown) {\\n  padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\\n  padding-bottom: calc(var(--input-padding-y) / 3); }\\n.form-label-group input:not(:placeholder-shown) ~ label {\\n  padding-top: calc(var(--input-padding-y) / 3);\\n  padding-bottom: calc(var(--input-padding-y) / 3);\\n  font-size: 12px;\\n  color: #777; }\\nfooter.sticky-footer {\\n  display: flex;\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  width: calc(100% - 90px);\\n  height: 80px;\\n  background-color: #e9ecef; }\\nfooter.sticky-footer .copyright {\\n  line-height: 1;\\n  font-size: 0.8rem; }\\n@media (min-width: 768px) {\\n  footer.sticky-footer {\\n    width: calc(100% - 225px); } }\\nbody.sidebar-toggled footer.sticky-footer {\\n  width: 100%; }\\n@media (min-width: 768px) {\\n  body.sidebar-toggled footer.sticky-footer {\\n    width: calc(100% - 90px); } }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AppRoutingModule} from './app-routing.module';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n// IMPORT MATERIAL\r\nimport {MaterialModule} from './material.module';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgSelect2Module} from 'ng-select2';\r\nimport { NgxBarcodeModule } from 'ngx-barcode';\r\n\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {ListComponent} from './components/issue/list/list.component';\r\nimport {CreateComponent} from './components/issue/create/create.component';\r\nimport {EditComponent} from './components/issue/edit/edit.component';\r\nimport {HelpComponent} from './components/help/help.component';\r\nimport {StructureComponent} from './components/help/structure/structure.component';\r\n\r\nimport {CookieService} from 'ng-cookie';\r\nimport {IssueService} from './services/issues/issue.service';\r\nimport {ColourantService} from './services/colorant/colorant.service';\r\nimport {ProductService} from './services/product/product.service';\r\nimport {CollectionService} from './services/collection/collection.service';\r\nimport {FormulaService} from './services/formula/formula.service';\r\nimport {BaseService} from './services/base/base.service';\r\nimport {ProductBaseService} from './services/productbase/productbase.service';\r\nimport {MachineService} from './services/machine/machine.service';\r\n\r\nimport {ModalService} from './services/boostrap/modal.service';\r\nimport {DispenseTaskService} from './services/dispensetask/dispensetask.service';\r\n// import direction\r\n\r\nimport {ModalComponent} from './directions/boostrap/modal/modal.component';\r\n\r\nimport {LoginComponent} from './components/login-page/login/login.component';\r\nimport {RegisterComponent} from './components/login-page/register/register.component';\r\nimport {ForgotpasswordComponent} from './components/login-page/forgotpassword/forgotpassword.component';\r\n\r\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\r\n\r\nimport {HeaderComponent} from './components/layout/header/header.component';\r\nimport {NavigationComponent} from './components/layout/navigation/navigation.component';\r\nimport {BreadcrumbComponent} from './components/layout/breadcrumb/breadcrumb.component';\r\nimport {FooterComponent} from './components/layout/footer/footer.component';\r\n\r\n\r\nimport {BackgroundTaskComponent} from './components/backgroundtask/backgroundtask.component';\r\n\r\n// setting\r\nimport {ColorantComponent} from './components/setting/colorant/colorant.component';\r\nimport {BaseComponent} from './components/setting/base/base.component';\r\nimport {CollectionComponent} from './components/setting/collection/collection.component';\r\nimport {ProductComponent} from './components/setting/product/product.component';\r\n\r\nimport {FormulaComponent} from './components/formula/formula/formula.component';\r\nimport {ListFormulaComponent} from './components/formula/list-formula/list-formula.component';\r\nimport {ViewFormulaComponent} from './components/formula/viewformula/viewformula.component';\r\n\r\nimport {MaintenanceComponent} from './components/formula/maintenance/maintenance.component';\r\n\r\n// help page !!\r\nimport {LanguageComponent} from './components/help/language/language.component';\r\nimport {QuestionComponent} from './components/help/question/question.component';\r\nimport {HttpModule} from './shared/http/http.module';\r\nimport {ViewDetailComponent} from './directions/product/viewdetail/viewdetail.component';\r\nimport {ViewDispenseTaskComponent} from './components/backgroundtask/viewdispensetask/viewdispensetask.component';\r\n\r\nimport {MachineSettingComponent} from './components/machine/machinesetting/machinesetting.component';\r\nimport {ProductbaseComponent} from './components/setting/productbase/productbase.component';\r\nimport {DashboardService} from './services/dashboard/dashboard.service';\r\nimport {StoreService} from './services/store/store.service';\r\nimport {EditFormulaComponent} from './components/formula/edit-formula/edit-formula.component';\r\nimport {TableColourantsComponent} from './directions/product/tablecolourant/table-colourants.component';\r\nimport {BaseCanComponent} from './directions/product/base-can/base-can.component';\r\nimport {CustomerComponent} from './components/setting/customer/customer.component';\r\nimport {UserComponent} from './components/user/user.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {'path': '', redirectTo: 'login', pathMatch: 'full'},\r\n  {'path': 'index', component: DashboardComponent},\r\n  {'path': 'login', component: LoginComponent}, {'path': 'sign-in', component: LoginComponent},\r\n  {'path': 'register', component: RegisterComponent}, {'path': 'sign-up', component: RegisterComponent},\r\n  {'path': 'forgot-password', component: ForgotpasswordComponent},\r\n\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n    children: [\r\n      // {path: '', redirectTo: 'formula', pathMatch: 'full'},\r\n      {path: 'colorant', component: ColorantComponent},\r\n      {path: 'base', component: BaseComponent},\r\n      {path: 'collection', component: CollectionComponent},\r\n      {path: 'product', component: ProductComponent},\r\n      {path: 'customer', component: CustomerComponent},\r\n      // {path: 'product/view-detail/:id', component: ViewDetailComponent},\r\n\r\n      {path: 'formula', component: FormulaComponent},\r\n      // {path: 'formula', loadChildren: './components/formula/'},\r\n      {path: 'view-formula/:id', component: ViewFormulaComponent},\r\n      {path: 'formula/add', component: EditFormulaComponent},\r\n      {path: 'formula/edit/:id', component: EditFormulaComponent},\r\n\r\n      {path: 'job-status', component: BackgroundTaskComponent},\r\n      {path: 'maintenance', component: MaintenanceComponent},\r\n\r\n      {path: 'machine', component: MachineSettingComponent},\r\n\r\n\r\n      {path: 'question', component: QuestionComponent},\r\n      {path: 'help/overview', component: HelpComponent},\r\n      {path: 'help/language', component: LanguageComponent},\r\n      {path: 'help/boostrap', component: StructureComponent},\r\n\r\n      {path: 'create', component: CreateComponent},\r\n      {path: 'edit/:id', component: EditComponent},\r\n      {path: 'list', component: ListComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\r\n    // import directions\r\n    ModalComponent,\r\n    TableColourantsComponent,\r\n    BaseCanComponent,\r\n\r\n    // page !!\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotpasswordComponent,\r\n\r\n    // dashboard after login\r\n    DashboardComponent,\r\n\r\n    // common layout\r\n    HeaderComponent,\r\n    NavigationComponent,\r\n    BreadcrumbComponent,\r\n    FooterComponent,\r\n\r\n    BackgroundTaskComponent,\r\n    ViewDispenseTaskComponent,\r\n\r\n    // setting component\r\n    UserComponent,\r\n    ColorantComponent,\r\n    BaseComponent,\r\n    CollectionComponent,\r\n    ProductComponent,\r\n    CustomerComponent,\r\n    ProductbaseComponent,\r\n    ViewDetailComponent,\r\n\r\n    // formula component\r\n    FormulaComponent,\r\n    ListFormulaComponent,\r\n\r\n    ViewFormulaComponent,\r\n    EditFormulaComponent,\r\n    MaintenanceComponent,\r\n\r\n    // machine component\r\n    MachineSettingComponent,\r\n    UserComponent,\r\n    // test component\r\n    ListComponent,\r\n    CreateComponent,\r\n    EditComponent,\r\n\r\n    // help page\r\n    QuestionComponent,\r\n    HelpComponent,\r\n    LanguageComponent,\r\n    StructureComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n\r\n    HttpClientModule,\r\n    HttpModule.forRoot(),\r\n    RouterModule.forRoot(routes),\r\n\r\n    FormsModule,\r\n\r\n    // import boostrap\r\n    NgbModule,\r\n    NgSelect2Module,\r\n    NgxBarcodeModule,\r\n\r\n    // IMPORT MATERIAL\r\n    MaterialModule\r\n  ],\r\n  providers: [\r\n    CookieService,\r\n    StoreService,\r\n    DispenseTaskService,\r\n    ModalService,\r\n\r\n    DashboardService,\r\n\r\n    IssueService,\r\n    ColourantService,\r\n    ProductService,\r\n    CollectionService,\r\n    FormulaService,\r\n    BaseService,\r\n    ProductBaseService,\r\n\r\n    MachineService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<div [ngStyle]=\\\"{'display' : selectedFormula != null ? 'none': 'block'}\\\">\\r\\n  <div class=\\\"block-header\\\">\\r\\n    <h1>Dispense History</h1>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Dispense History\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n              <tr>\\r\\n                <th mat-sort-header=\\\"machineFormulaProductBaseId\\\">#Id</th>\\r\\n                <th mat-sort-header=\\\"approximateColor\\\">Color</th>\\r\\n                <th mat-sort-header=\\\"formulaName\\\">Formula Name</th>\\r\\n                <th mat-sort-header=\\\"collectionName\\\">Collection</th>\\r\\n                <th mat-sort-header=\\\"productName\\\">Product</th>\\r\\n                <th mat-sort-header=\\\"canSize\\\">Can Size</th>\\r\\n                <th mat-sort-header=\\\"status\\\">Status</th>\\r\\n                <th mat-sort-header=\\\"createdDate\\\">Created Time</th>\\r\\n                <th mat-sort-header=\\\"finishedDate\\\">Finished Time</th>\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngFor=\\\"let item of listBackgroundTask\\\">\\r\\n                <td>{{item.machineFormulaProductBaseId}}</td>\\r\\n                <td class=\\\"text-center\\\"><span [ngStyle]=\\\"{'background': item.formulaProductBase.formula.approximateColor, 'display': 'inline-block', 'width': '30px', 'height': '30px', 'border': '1px solid #333'}\\\"></span></td>\\r\\n                <td>{{item.formulaProductBase.formula.formulaName}}</td>\\r\\n                <td>{{item.formulaProductBase.formula.collection.collectionName}}</td>\\r\\n                <td>{{item.formulaProductBase.productBase.product.productName}}</td>\\r\\n                <td>{{item.canSize}} L</td>\\r\\n                <td>{{item.status}}</td>\\r\\n                <td>{{item.createdDate | date: 'hh:mm:ss dd/MM/yyyy'}}</td>\\r\\n                <td>{{item.finishedDate | date: 'hh:mm:ss dd/MM/yyyy'}}</td>\\r\\n                <td><span (click)=\\\"viewCurrentTask(item)\\\"><i class=\\\"fas fa-info-circle\\\"></i></span></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"selectedFormula\\\">\\r\\n  <app-viewformula [dbItem]=\\\"selectedFormula\\\"></app-viewformula>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"selectedFormula\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <button class=\\\"btn btn-primary push-left\\\" (click)=\\\"clearSelectedFormula()\\\"><i class=\\\"fas fa-arrow-circle-left\\\"></i> Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmFja2dyb3VuZHRhc2svYmFja2dyb3VuZHRhc2suY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {MachineFormulaProductBaseLogModel} from '../../models/dispense.task.model';\r\nimport {MachineService} from '../../services/machine/machine.service';\r\nimport {Sort} from '@angular/material';\r\nimport {Router} from '@angular/router';\r\nimport {MachineModel} from '../../models/user.model';\r\nimport {StoreService} from '../../services/store/store.service';\r\nimport {FormulaProductBaseModel} from '../../models/formula_product_base';\r\n\r\n\r\n@Component({\r\n  selector: 'app-backgroundtask',\r\n  templateUrl: './backgroundtask.component.html',\r\n  styleUrls: ['./backgroundtask.component.scss']\r\n})\r\nexport class BackgroundTaskComponent implements OnInit {\r\n  selectedFormula: FormulaProductBaseModel;\r\n\r\n  listItems: MachineFormulaProductBaseLogModel [] | any;\r\n  listBackgroundTask: MachineFormulaProductBaseLogModel [] | any;\r\n  currentBackgroundTask: MachineFormulaProductBaseLogModel = null;\r\n  machine: MachineModel;\r\n\r\n  constructor(private storeService: StoreService,\r\n              private machineService: MachineService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.machine = this.storeService.getMachineData();\r\n    if (this.machine != null && this.machine.machineId > 0) {\r\n      this.machineService.findAllDispenseTask().subscribe((datas: MachineFormulaProductBaseLogModel []) => {\r\n        this.listItems = datas;\r\n        this.listBackgroundTask = this.listItems;\r\n      });\r\n    }\r\n  }\r\n\r\n  viewCurrentTask(task: MachineFormulaProductBaseLogModel) {\r\n    this.currentBackgroundTask = task;\r\n    this.selectedFormula = this.currentBackgroundTask.formulaProductBase;\r\n  }\r\n\r\n  clearSelectedFormula() {\r\n    this.currentBackgroundTask = null;\r\n    this.selectedFormula = null;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.listItems.slice();\r\n\r\n    if (!sort.active || sort.direction === '') {\r\n      this.listBackgroundTask = data;\r\n      return;\r\n    }\r\n\r\n    this.listBackgroundTask = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'machineFormulaProductBaseId':\r\n          return compare(a.machineFormulaProductBaseId, b.machineFormulaProductBaseId, isAsc);\r\n        case 'approximateColor':\r\n          return compare(a.formulaProductBase.formula.approximateColor, b.formulaProductBase.formula.approximateColor, isAsc);\r\n        case 'formulaName':\r\n          return compare(a.formulaProductBase.formula.formulaName, b.formulaProductBase.formula.formulaName, isAsc);\r\n        case 'collectionName':\r\n          return compare(a.formulaProductBase.formula.collection.collectionName, b.formulaProductBase.formula.collection.collectionName,\r\n            isAsc);\r\n        case 'productName':\r\n          return compare(a.formulaProductBase.productBase.product.productName, b.formulaProductBase.productBase.product.productName, isAsc);\r\n        case 'canSize':\r\n          return compare(a.canSize, b.canSize, isAsc);\r\n        case 'status':\r\n          return compare(a.status, b.status, isAsc);\r\n        case 'createdDate':\r\n          return compare(a.createdDate, b.createdDate, isAsc);\r\n        case 'finishedDate':\r\n          return compare(a.finishedDate == null ? 0 : 1, b.finishedDate == null ? 0 : 1, isAsc);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"task-content\\\" *ngIf=\\\"dispenseStepTask != null\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div *ngIf=\\\"dispenseStepTask != null\\\">\\r\\n        {{dispenseStepTask.type}}\\r\\n\\r\\n        <div class=\\\"component-pumping-info\\\" *ngIf=\\\"'pumping' == dispenseStepTask.type\\\">\\r\\n\\r\\n          <table cellpadding=\\\"5\\\" cellspacing=\\\"0\\\">\\r\\n            <tr>\\r\\n              <td class=\\\"text-right\\\">Component</td>\\r\\n              <td colspan=\\\"100%\\\" class=\\\"text-center\\\" [style]=\\\"{'margin-left': '50px'}\\\">\\r\\n\\r\\n                  <span class=\\\"color-bar\\\" >\\r\\n                    <span class=\\\"color-select\\\" [ngStyle]=\\\"{'background': dispenseStepTask.taskData.colorant.rbgHex, 'width': '20px', 'height': '150px'}\\\"></span>\\r\\n                  </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td class=\\\"text-right\\\"><span class=\\\"component-name\\\">{{dispenseStepTask.taskData.colorant.colourantName}}</span></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Wanted</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td  class=\\\"text-right\\\"><span class=\\\"component-name\\\">{{dispenseStepTask.taskData.quantity}}</span> ml</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td>Dispensed</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td  class=\\\"text-right\\\"><span class=\\\"component-name\\\">0</span> ml</td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n      <div *ngIf=\\\"dispenseTask.childrenTask != null && dispenseTask.childrenTask.length > 0\\\" >\\r\\n\\r\\n        <div  *ngIf=\\\"'prepare' == dispenseStepTask.type\\\" class=\\\"formula-animation preparing-animation text-center\\\">\\r\\n          <img src=\\\"/assets/videos/Preparing.gif\\\" width=\\\"250\\\" height=\\\"250\\\"/>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"'pumping' == dispenseStepTask.type\\\" class=\\\"formula-animation pumping-animation text-center\\\">\\r\\n          <img src=\\\"/assets/videos/Pumping.gif\\\" width=\\\"250\\\" height=\\\"250\\\"/>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"'finished' == dispenseStepTask.type\\\" class=\\\"text-center\\\">\\r\\n          FINISHED\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <div *ngFor=\\\"let colorantItem of listColorantUsed\\\" class=\\\"color-bar-group\\\">\\r\\n          <span class=\\\"color-bar\\\" >\\r\\n            <span class=\\\"color-select\\\" [ngStyle]=\\\"{'background': colorantItem.colorant.rbgHex, 'width': (colorantItem.quantity / maxColorQuantity) * 100 + '%'}\\\">\\r\\n              <span class=\\\"color-name\\\">{{colorantItem.colorant.name}}</span>\\r\\n            </span>\\r\\n          </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <span class=\\\"base-can-empty\\\" *ngIf=\\\"dispenseTask.taskData != null\\\">\\r\\n          <span class=\\\"base-can-background\\\">\\r\\n            <span class=\\\"base-can-volume\\\"\\r\\n                  [ngStyle]=\\\"{'background-color': dispenseTask.taskData.productBaseCan.productBase.rbgHex, 'height': dispenseTask.taskData.productBaseCan.percentage + '%'}\\\">\\r\\n              <span class=\\\"can-base-info\\\">\\r\\n                <span class=\\\"base-type\\\">Base : {{dispenseTask.taskData.productBaseCan.productBase.base.baseCode}}</span>\\r\\n                <span class=\\\"base-volume\\\">{{dispenseTask.taskData.canSize}} Liter</span>\\r\\n                <span class=\\\"base-name\\\">{{dispenseTask.taskData.formulaProductBase.formula.collection.collectionName}}</span>\\r\\n              </span>\\r\\n            </span>\\r\\n          </span>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".color-bar {\\n  width: 100%;\\n  display: inline-block;\\n  position: relative;\\n  height: 1em; }\\n  .color-bar .color-select {\\n    display: inline-block;\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    bottom: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iYWNrZ3JvdW5kdGFzay92aWV3ZGlzcGVuc2V0YXNrL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxiYWNrZ3JvdW5kdGFza1xcdmlld2Rpc3BlbnNldGFza1xcdmlld2Rpc3BlbnNldGFzay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVc7RUFDWCxzQkFBcUI7RUFDckIsbUJBQWtCO0VBQ2xCLFlBQVcsRUFTWjtFQWJEO0lBT0ksc0JBQXFCO0lBQ3JCLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsVUFBUztJQUNULFlBQVcsRUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmFja2dyb3VuZHRhc2svdmlld2Rpc3BlbnNldGFzay92aWV3ZGlzcGVuc2V0YXNrLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbG9yLWJhcntcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogMWVtO1xyXG5cclxuICAuY29sb3Itc2VsZWN0e1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICBib3R0b206IDBweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DispenseTaskModel, DispenseTaskStepModel} from '../../../models/dispense.task.model';\r\n\r\n@Component({\r\n  selector: 'app-viewdispensetask',\r\n  templateUrl: './viewdispensetask.component.html',\r\n  styleUrls: ['./viewdispensetask.component.scss']\r\n})\r\nexport class ViewDispenseTaskComponent implements OnInit {\r\n  @Input() dispenseTask: DispenseTaskModel;\r\n  @Input() dispenseStepTask: DispenseTaskStepModel;\r\n  @Input() listColorantUsed: {colorant, quantity} [];\r\n  @Input() maxColorQuantity: number;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData(): void {\r\n  }\r\n}\r\n","module.exports = \"<app-header></app-header>\\r\\n<div id=\\\"wrapper\\\">\\r\\n  <div id=\\\"content-wrapper\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n      <div class=\\\"container\\\">\\r\\n        <app-breadcrumb></app-breadcrumb>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"container\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n\\r\\n      <!--<section class=\\\"content\\\">-->\\r\\n      <!---->\\r\\n      <!--</section>-->\\r\\n<!---->\\r\\n      <!--<section class=\\\"content\\\">-->\\r\\n        <!---->\\r\\n      <!--</section>-->\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {DashboardService} from '../../services/dashboard/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private dashboardService: DashboardService) { }\r\n\r\n  ngOnInit() {\r\n    this.validateMachineData();\r\n  }\r\n\r\n  validateMachineData() {\r\n    this.dashboardService.validateMachineData();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>{{viewMode}} Formula</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"dbItem != null\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card filter-card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Standard Formula\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form form-horizontal form-detail\\\">\\r\\n          <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-2 label-control\\\">Formula Code</label>\\r\\n              <div class=\\\"input-group input-group-sm col-md-4\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.formula.formulaCode\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"clearErrorField('formulaCode')\\\">\\r\\n                <ng-container *ngIf=\\\"errorValidation['formulaCode'] != null\\\">\\r\\n                  <span class=\\\"error-label\\\">{{errorValidation['formulaCode']}}</span>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"col-md-2 label-control\\\">Formula name</label>\\r\\n              <div class=\\\"input-group input-group-sm col-md-4\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.formula.formulaName\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"clearErrorField('formulaName')\\\">\\r\\n                <ng-container *ngIf=\\\"errorValidation['formulaName'] != null\\\">\\r\\n                  <span class=\\\"error-label\\\">{{errorValidation['formulaName']}}</span>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-2 label-control\\\">Collection</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm\\\" [(ngModel)]=\\\"dbItem.formula.collection.collectionId\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  (change)=\\\"clearErrorField('collectionId')\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Collection</option>\\r\\n                  <option *ngFor=\\\"let c of listCollections\\\" [ngValue]=\\\"c.collectionId\\\">{{c.collectionName}}</option>\\r\\n                </select>\\r\\n\\r\\n                <ng-container *ngIf=\\\"errorValidation['collectionId'] != null\\\">\\r\\n                  <span class=\\\"error-label\\\">{{errorValidation['collectionId']}}</span>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"col-md-2 label-control\\\">Product</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                {{dbItem.productBase.product.productCode}} : {{dbItem.productBase.product.productName}}\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-2 label-control\\\">Approximate color</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <input [value]=\\\"dbItem.formula.approximateColor\\\" [style.background]=\\\"dbItem.formula.approximateColor\\\" [(colorPicker)]=\\\"dbItem.formula.approximateColor\\\" (colorPickerChange)=\\\"clearErrorField('approximateColor')\\\"/>\\r\\n\\r\\n                <ng-container *ngIf=\\\"errorValidation['approximateColor'] != null\\\">\\r\\n                  <span class=\\\"error-label\\\">{{errorValidation['approximateColor']}}</span>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"col-md-2 label-control\\\">Formula Date</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                {{dbItem.formula.createdDate | date : 'dd/MM/yyyy'}}\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-2 label-control\\\">Substrate</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.formula.substrate\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </div>\\r\\n\\r\\n              <label class=\\\"col-md-2 label-control\\\">Barcode</label>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <!--{{dbItem.productBase.product}}-->\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-2 label-control\\\">Comment</label>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <textarea [(ngModel)]=\\\"dbItem.formula.comment\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngStyle]=\\\"{'width': '100%', 'min-height': (1.2 * 4) +'em'}\\\">{{dbItem.formula.comment}}</textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"listCustomerSelected != null && listCustomerSelected.length > 0\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <tr>\\r\\n                <th>#</th>\\r\\n                <th>Name</th>\\r\\n                <th>Phone Number</th>\\r\\n                <th>Email</th>\\r\\n                <th>Address</th>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngFor=\\\"let customerSelected of listCustomerSelected\\\">\\r\\n                <td>\\r\\n                  <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"customerSelected.checked\\\"></mat-checkbox>\\r\\n                </td>\\r\\n                <td>{{customerSelected.customer.name}}</td>\\r\\n                <td>{{customerSelected.customer.phone}}</td>\\r\\n                <td>{{customerSelected.customer.email}}</td>\\r\\n                <td>{{customerSelected.customer.address}}</td>\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-footer\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <label class=\\\"col-md-3 label-control\\\"></label>\\r\\n          <div class=\\\"col-md-9\\\">\\r\\n            <button class=\\\"btn btn-primary mr-3\\\" (click)=\\\"saveOrUpdateFormula()\\\">\\r\\n              <span *ngIf=\\\"viewMode == 'Add'\\\">Save</span>\\r\\n              <span *ngIf=\\\"viewMode == 'Edit'\\\">Update</span>\\r\\n            </button>\\r\\n\\r\\n            <button class=\\\"btn btn-default mr-3\\\" (click)=\\\"goToFormulaPage()\\\">\\r\\n              Back\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"dbItem != null && listColourants != null\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card filter-card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Formula Detail\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form form-horizontal form-detail\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-subtitle col-md-12\\\">\\r\\n                  <h4>Contents</h4>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <ng-container *ngIf=\\\"errorValidation['listColourants'] != null\\\">\\r\\n                    <span class=\\\"error-label\\\">{{errorValidation['listColourants']}}</span>\\r\\n                  </ng-container>\\r\\n                  <app-table-colourants [listFormulaColorant]=\\\"listColourants\\\" [canSize]=\\\"1\\\" [baseOnCan]=\\\"dbItem.formula.baseOnCan\\\" [maxColorQuantity]=\\\"getMaxColourantValue(listColourants)\\\"></app-table-colourants>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <br />\\r\\n                  <br />\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <app-base-can [productBase]=\\\"dbItem.productBase\\\" [canSize]=\\\"1\\\" [collection]=\\\"dbItem.formula.collection\\\"></app-base-can>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-subtitle col-md-12\\\">\\r\\n                  <h4>Components</h4>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-md-4 label-control\\\">Product</label>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                      <select class=\\\"form-control form-control-sm select-sm\\\" [(ngModel)]=\\\"selectedProductId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"getListProductBase(); clearErrorField('productId')\\\">\\r\\n                        <option [ngValue]=\\\"undefined\\\">Choose Product</option>\\r\\n                        <option *ngFor=\\\"let c of listProducts\\\" [ngValue]=\\\"c.productId\\\">{{c.productCode}}</option>\\r\\n                      </select>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"errorValidation['productId'] != null\\\">\\r\\n                        <span class=\\\"error-label\\\">{{errorValidation['productId']}}</span>\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-md-4 label-control\\\">Base</label>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                      <select class=\\\"form-control form-control-sm select-sm\\\" [(ngModel)]=\\\"selectedProductBaseId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"updateCurrentProductBase(); clearErrorField('baseId')\\\">\\r\\n                        <option [ngValue]=\\\"undefined\\\">Choose Base</option>\\r\\n                        <option *ngFor=\\\"let pb of listProductBases\\\" [ngValue]=\\\"pb.productBaseId\\\">{{pb.base.baseName}} ({{pb.base.baseCode}})</option>\\r\\n                      </select>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"errorValidation['baseId'] != null\\\">\\r\\n                        <span class=\\\"error-label\\\">{{errorValidation['baseId']}}</span>\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"col-md-4 label-control\\\">Base On Can</label>\\r\\n                    <div class=\\\"col-md-8\\\">\\r\\n                      <input type=\\\"number\\\" [(ngModel)]=\\\"dbItem.formula.baseOnCan\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  (change)=\\\"updateCurrentProductBase(); clearErrorField('baseOnCan')\\\"/>\\r\\n\\r\\n                      <ng-container *ngIf=\\\"errorValidation['baseOnCan'] != null\\\">\\r\\n                        <span class=\\\"error-label\\\">{{errorValidation['baseOnCan']}}</span>\\r\\n                      </ng-container>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"card-subtitle col-md-12\\\">\\r\\n                  <h4>Colourants</h4>\\r\\n                </div>\\r\\n\\r\\n                <ng-container *ngFor=\\\"let colour of listColourants\\\">\\r\\n                  <div class=\\\"col-md-6 colourant-group\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <label class=\\\"col-md-8 label-control\\\">\\r\\n                        <span class=\\\"colour-bar\\\" [ngStyle]=\\\"{'background': colour.colourant.rbgHex}\\\">{{colour.colourant.colourantCode}} : {{colour.colourant.colourantName}}</span>\\r\\n                      </label>\\r\\n                      <div class=\\\"col-md-4\\\">\\r\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"colour.quantity\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  (change)=\\\"clearErrorField('listColourants')\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"updateMessage != null\\\">\\r\\n  <pp-modal id=\\\"show-update-formula-model\\\" class=\\\"modal show-update-formula-model\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">{{updateMessage.title}}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('show-update-formula-model')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{updateMessage.message}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <ng-container *ngIf=\\\"updateMessage.title == 'Error'\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('show-update-formula-model')\\\">Close</button>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"updateMessage.title != 'Error'\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeModal('show-update-formula-model')\\\">OK</button>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\"","module.exports = \".colourant-group {\\n  margin-bottom: 10px; }\\n  .colourant-group .colour-bar {\\n    display: inline-block;\\n    width: 100%;\\n    min-height: 1em;\\n    border: 1px solid #000;\\n    padding: 3px 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb3JtdWxhL2VkaXQtZm9ybXVsYS9YOlxcd3NfbGVhcm5pbmdcXGNsaWVudHZpZXRwb3dlci9zcmNcXGFwcFxcY29tcG9uZW50c1xcZm9ybXVsYVxcZWRpdC1mb3JtdWxhXFxlZGl0LWZvcm11bGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBbUIsRUFTcEI7RUFWRDtJQUlJLHNCQUFxQjtJQUNyQixZQUFXO0lBQ1gsZ0JBQWU7SUFDZix1QkFBc0I7SUFDdEIsaUJBQWdCLEVBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9mb3JtdWxhL2VkaXQtZm9ybXVsYS9lZGl0LWZvcm11bGEuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29sb3VyYW50LWdyb3Vwe1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcblxyXG4gIC5jb2xvdXItYmFye1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtaW4taGVpZ2h0OiAxZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xyXG4gICAgcGFkZGluZzogM3B4IDVweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormulaColourantModel, FormulaProductBaseModel} from '../../../models/formula_product_base';\r\nimport {FormulaModel} from '../../../models/formula';\r\nimport {ProductBaseModel} from '../../../models/product_base';\r\nimport {CollectionService} from '../../../services/collection/collection.service';\r\nimport {FormulaService} from '../../../services/formula/formula.service';\r\nimport {ProductService} from '../../../services/product/product.service';\r\nimport {ProductModel} from '../../../models/product';\r\nimport {CollectionModel} from '../../../models/collection';\r\nimport {ColourantService} from '../../../services/colorant/colorant.service';\r\nimport {BaseModel} from '../../../models/base';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\nimport {CustomerModel, CustomerSelectedModel} from '../../../models/customer';\r\nimport {FormulaCustomerModel} from '../../../models/formulacustomer';\r\nimport {CustomerService} from '../../../services/customer/customer.service';\r\nimport {DispenseTaskModel} from '../../../models/dispense.task.model';\r\n\r\n@Component({\r\n  selector: 'app-edit-formula',\r\n  templateUrl: './edit-formula.component.html',\r\n  styleUrls: ['./edit-formula.component.scss']\r\n})\r\nexport class EditFormulaComponent implements OnInit {\r\n  formulaProductBaseId: number;\r\n  selectedProductId: number;\r\n  selectedProductBaseId: number;\r\n\r\n  selectedProduct: ProductModel;\r\n  selectedProductBase: ProductBaseModel;\r\n\r\n  viewMode: string = null;\r\n  dbItem: FormulaProductBaseModel = null;\r\n  listProducts: ProductModel[] = null;\r\n  listProductBases: ProductBaseModel[] = null;\r\n  listCollections: CollectionModel[] = null;\r\n  listColourants: FormulaColourantModel[] = null;\r\n\r\n  listCustomerSelected: CustomerSelectedModel[] = [];\r\n  listFormulaCustomer: FormulaCustomerModel[] = [];\r\n\r\n  errorValidation: any = null;\r\n  updateMessage: any = null;\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private modalService: ModalService,\r\n              private colourantService: ColourantService,\r\n              private formulaService: FormulaService,\r\n              private customerService: CustomerService,\r\n              private collectionService: CollectionService,\r\n              private productService: ProductService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateMessage = null;\r\n    this.errorValidation = {};\r\n    this.route.params.subscribe(params => {\r\n      this.formulaProductBaseId = params.id != null && params.id.trim() !== '' ? parseInt(params.id) : null;\r\n      if (this.formulaProductBaseId != null && this.formulaProductBaseId > 0) {\r\n        this.viewMode = 'Edit';\r\n        this.loadCurrentFormulaProductBase();\r\n      } else {\r\n        this.viewMode = 'Add';\r\n        this.generateNewFormulaProductBase();\r\n      }\r\n      this.loadRelativeData();\r\n    });\r\n  }\r\n\r\n  generateNewFormulaProductBase() {\r\n    const collection = new CollectionModel();\r\n    const formula = new FormulaModel();\r\n    formula.approximateColor = '';\r\n    formula.collection = collection;\r\n    formula.baseOnCan = 1;\r\n\r\n    const product = new ProductModel();\r\n    const base = new BaseModel();\r\n    const productBase = new ProductBaseModel();\r\n    productBase.product = product;\r\n    productBase.base = base;\r\n\r\n    this.dbItem = new FormulaProductBaseModel();\r\n    this.dbItem.formula = formula;\r\n    this.dbItem.productBase = productBase;\r\n    this.loadColourantDatas();\r\n  }\r\n\r\n  loadCurrentFormulaProductBase() {\r\n    this.formulaService.findFormulaProductBaseById(this.formulaProductBaseId).subscribe((data: any) => {\r\n      this.dbItem = data;\r\n      this.selectedProductBase = this.dbItem.productBase;\r\n      this.selectedProduct = this.dbItem.productBase.product;\r\n\r\n      this.selectedProductBaseId = this.selectedProductBase.productBaseId;\r\n      this.selectedProductId = this.selectedProduct.productId;\r\n\r\n      this.getListProductBase();\r\n      this.loadColourantDatas();\r\n    });\r\n  }\r\n\r\n  loadRelativeData() {\r\n    this.listProducts = [];\r\n    this.productService.getListItems().subscribe(datas => {\r\n      this.listProducts = datas;\r\n    });\r\n\r\n    this.listCollections = [];\r\n    this.collectionService.getListItems().subscribe(datas => {\r\n      this.listCollections = datas;\r\n    });\r\n\r\n    this.listCustomerSelected = [];\r\n    this.customerService.findAll().subscribe(datas => {\r\n      datas.map(c => {\r\n        const customerSelected = new CustomerSelectedModel();\r\n        customerSelected.customer = c;\r\n        customerSelected.checked = false;\r\n        this.listCustomerSelected.push(customerSelected);\r\n      });\r\n    });\r\n\r\n    this.listFormulaCustomer = [];\r\n    this.formulaService.findAllByCustomer().subscribe(datas => {\r\n      this.listFormulaCustomer = datas;\r\n      if (this.listFormulaCustomer != null && this.listFormulaCustomer.length > 0) {\r\n        for (const formulaCustomer of this.listFormulaCustomer) {\r\n          const filterCustomerIdx = this.listCustomerSelected.findIndex(item => {\r\n            return item.customer.customerId === formulaCustomer.customer.customerId;\r\n          });\r\n\r\n          if (filterCustomerIdx != null && filterCustomerIdx > -1) {\r\n            console.log(filterCustomerIdx);\r\n            this.listCustomerSelected[filterCustomerIdx].checked = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getListProductBase() {\r\n    if (this.selectedProductId != null && this.selectedProductId !== undefined) {\r\n      const selectedProduct = this.listProducts.find((item) => {\r\n        return item.productId === this.selectedProductId;\r\n      });\r\n\r\n      if (selectedProduct != null) {\r\n        this.selectedProduct = selectedProduct;\r\n        this.dbItem.productBase.product = this.selectedProduct;\r\n      }\r\n\r\n      this.listProductBases = [];\r\n      this.productService.getListProductBaseFromProduct(this.selectedProductId).subscribe(datas => {\r\n        this.listProductBases = datas;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateCurrentProductBase() {\r\n    const selectedProductBase = this.listProductBases.find((item) => {\r\n      return item.productBaseId === this.selectedProductBaseId && item.product.productId === this.selectedProductId;\r\n    });\r\n\r\n    if (selectedProductBase != null) {\r\n      this.selectedProductBase = selectedProductBase;\r\n      this.dbItem.productBase = this.selectedProductBase;\r\n    }\r\n  }\r\n\r\n  loadColourantDatas() {\r\n    this.colourantService.getListItems().subscribe(datas => {\r\n      this.listColourants = [];\r\n\r\n      for (const colour of datas) {\r\n        const formulaColourant = new FormulaColourantModel();\r\n        formulaColourant.colourant = colour;\r\n        formulaColourant.formula = this.dbItem.formula;\r\n        formulaColourant.quantity = null;\r\n\r\n        this.listColourants.push(formulaColourant);\r\n      }\r\n\r\n      if (this.dbItem != null && this.dbItem.formulaProductBaseId != null && this.dbItem.formulaProductBaseId > 0) {\r\n        this.formulaService.getListColorantOfFormula(this.dbItem.formula.formulaId).subscribe((result: FormulaColourantModel[]) => {\r\n          const listColourantDb: FormulaColourantModel[] = result;\r\n\r\n          for (const colour of listColourantDb) {\r\n            const existColourantIndex = this.listColourants.findIndex((item) => {\r\n              return item.colourant.colourantId === colour.colourant.colourantId;\r\n            });\r\n\r\n            if (existColourantIndex != null) {\r\n              this.listColourants[existColourantIndex].quantity = colour.quantity;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getMaxColourantValue(listFormulaColorant: FormulaColourantModel[]) {\r\n    let maxQuantity = 0;\r\n    for (const c of listFormulaColorant) {\r\n      if (c.quantity != null && c.quantity > 0) {\r\n        if (maxQuantity == null || maxQuantity < c.quantity) {\r\n          maxQuantity = c.quantity;\r\n        }\r\n      }\r\n    }\r\n    return maxQuantity;\r\n  }\r\n\r\n  validateDataBeforeSubmit() {\r\n    let hasError = false;\r\n    const mapErrors = {};\r\n\r\n    if (this.dbItem.formula.formulaCode == null || this.dbItem.formula.formulaCode.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['formulaCode'] = 'Please enter the formula code';\r\n    }\r\n\r\n    if (this.dbItem.formula.formulaName == null || this.dbItem.formula.formulaName.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['formulaName'] = 'Please enter the formula name';\r\n    }\r\n\r\n    if (this.dbItem.formula.collection == null || this.dbItem.formula.collection.collectionId == null) {\r\n      hasError = true;\r\n      mapErrors['collectionId'] = 'Please select the collection';\r\n    }\r\n\r\n    if (this.dbItem.formula.approximateColor == null || this.dbItem.formula.approximateColor.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['approximateColor'] = 'Please select the collection';\r\n    }\r\n\r\n    if (this.selectedProductBase == null || this.selectedProductBase.product == null\r\n      || this.selectedProductBase.product.productId == null) {\r\n      hasError = true;\r\n      mapErrors['productId'] = 'Please select the product';\r\n    }\r\n\r\n    if (this.selectedProductBase == null || this.selectedProductBase.base == null || this.selectedProductBase.base.baseId == null) {\r\n      hasError = true;\r\n      mapErrors['baseId'] = 'Please select the base';\r\n    }\r\n\r\n    if (this.dbItem.formula.baseOnCan == null) {\r\n      hasError = true;\r\n      mapErrors['baseOnCan'] = 'Please enter the base on can (Default 1)';\r\n    }\r\n\r\n    if (this.listColourants == null || this.listColourants.length === 0) {\r\n      hasError = true;\r\n      mapErrors['listColourants'] = 'Please add colourants detail.';\r\n    } else {\r\n      const listColourant = this.listColourants.filter((item) => {\r\n        return item.quantity > 0;\r\n      });\r\n\r\n      if (listColourant == null || listColourant.length == 0) {\r\n        hasError = true;\r\n        mapErrors['listColourants'] = 'Please add colourants detail.';\r\n      }\r\n    }\r\n\r\n    return {\r\n      hasError: hasError, mapErrors: mapErrors\r\n    };\r\n  }\r\n\r\n  clearErrorField(field): void {\r\n    this.errorValidation[field] = null;\r\n  }\r\n\r\n  saveOrUpdateFormula() {\r\n    this.errorValidation = {};\r\n    this.updateMessage = null;\r\n\r\n    const validateData = this.validateDataBeforeSubmit();\r\n    if (! validateData.hasError) {\r\n      this.formulaService.saveOrUpdateFormulaData(this.dbItem.formulaProductBaseId, this.dbItem.formula, this.selectedProductBase,\r\n        this.listColourants, this.listCustomerSelected).subscribe((datas) => {\r\n        if (datas.formulaProductBaseId != null) {\r\n\r\n          if (this.dbItem.formulaProductBaseId == null) {\r\n            this.updateMessage = {\r\n              title: 'Save',\r\n              message: 'Saving the formula successful!.'\r\n            };\r\n          } else {\r\n            this.updateMessage = {\r\n              title: 'Update',\r\n              message: 'Update the formula successful!.'\r\n            };\r\n          }\r\n        } else {\r\n          this.updateMessage = {\r\n            title: 'Error',\r\n            message: 'Have problem when saving the formula. Please retry.'\r\n          };\r\n        }\r\n\r\n        setTimeout(() => {\r\n          this.openModal('show-update-formula-model');\r\n        }, 1);\r\n      });\r\n    } else {\r\n      this.errorValidation = validateData.mapErrors;\r\n    }\r\n  }\r\n\r\n  goToFormulaPage() {\r\n    try {\r\n      this.closeModal('show-update-formula-model');\r\n    } catch (e) {\r\n\r\n    }\r\n    this.router.navigate([`../dashboard/formula`]);\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    if (this.updateMessage != null && this.updateMessage.title != null && this.updateMessage.title !== 'Error') {\r\n      this.modalService.close(id);\r\n      this.updateMessage = null;\r\n      this.router.navigate([`../dashboard/formula`]);\r\n    } else {\r\n      this.modalService.close(id);\r\n      this.updateMessage = null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\r\\n<div [ngStyle]=\\\"{'display' : dbItem != null ? 'none': 'block'}\\\">\\r\\n  <app-list-formula (selectedFormula)=\\\"selectFormula($event)\\\"></app-list-formula>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"dbItem\\\">\\r\\n  <app-viewformula [dbItem]=\\\"dbItem\\\"></app-viewformula>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"dbItem\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <button class=\\\"btn btn-primary push-left\\\" (click)=\\\"clearSelectedFormula()\\\"><i class=\\\"fas fa-arrow-circle-left\\\"></i> Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9ybXVsYS9mb3JtdWxhL2Zvcm11bGEuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormulaProductBaseModel} from '../../../models/formula_product_base';\r\n\r\n@Component({\r\n  selector: 'app-formula',\r\n  templateUrl: './formula.component.html',\r\n  styleUrls: ['./formula.component.scss']\r\n})\r\nexport class FormulaComponent implements OnInit {\r\n  dbItem: FormulaProductBaseModel = null;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  selectFormula(selectedFormula) {\r\n    this.dbItem = selectedFormula;\r\n  }\r\n\r\n  clearSelectedFormula(){\r\n    this.dbItem = null;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>List Formula</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card filter-card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Filter\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form class=\\\"form form-horizontal form-detail\\\">\\r\\n          <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"form-group row\\\" *ngIf=\\\"listFormulas\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Select Color</label>\\r\\n              <div class=\\\"input-group input-group-sm col-md-9\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm select-color-field\\\" id=\\\"selectedFormulaFilter\\\" name=\\\"selectedFormulaFilter\\\" [(ngModel)]=\\\"filter.formulaId\\\" (ngModelChange)=\\\"onFilterChange($event)\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Color</option>\\r\\n                  <option *ngFor=\\\"let f of listFormulas\\\" value=\\\"{{f.formulaId}}\\\">{{f.formulaName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\" *ngIf=\\\"listCollections\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Select Collection</label>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm select-color-field\\\" id=\\\"selectedCollectionFilter\\\" name=\\\"selectedCollectionFilter\\\" [(ngModel)]=\\\"filter.collectionId\\\" (ngModelChange)=\\\"onFilterChange($event)\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Collection</option>\\r\\n                  <option *ngFor=\\\"let c of listCollections\\\" value=\\\"{{c.collectionId}}\\\">{{c.collectionName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\" *ngIf=\\\"listProducts\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Select Product</label>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm select-color-field\\\" id=\\\"selectedProductFilter\\\" name=\\\"selectedProductFilter\\\" [(ngModel)]=\\\"filter.productId\\\" (ngModelChange)=\\\"onFilterChange($event)\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Product</option>\\r\\n                  <option *ngFor=\\\"let c of listProducts\\\" value=\\\"{{c.productId}}\\\">{{c.productCode}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\" *ngIf=\\\"listProductBase\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Select Base</label>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm select-color-field\\\" id=\\\"selectedProductBaseFilter\\\" name=\\\"selectedProductFilter\\\" [(ngModel)]=\\\"filter.productBaseId\\\" (ngModelChange)=\\\"onFilterChange($event)\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Base</option>\\r\\n                  <option *ngFor=\\\"let c of listProductBase\\\" value=\\\"{{c.productBaseId}}\\\">{{c.base.baseName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\" *ngIf=\\\"listCustomer\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Select Customer</label>\\r\\n              <div class=\\\"col-md-9\\\">\\r\\n                <select class=\\\"form-control form-control-sm select-sm select-color-field\\\" id=\\\"selectedCustomerFilter\\\" name=\\\"selectedProductFilter\\\" [(ngModel)]=\\\"filter.customerId\\\" (ngModelChange)=\\\"onFilterChange($event)\\\">\\r\\n                  <option [ngValue]=\\\"undefined\\\">Choose Customer</option>\\r\\n                  <option *ngFor=\\\"let c of listCustomer\\\" value=\\\"{{c.customerId}}\\\">{{c.name}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-actions text-center\\\">\\r\\n            <button class=\\\"btn btn-primary mr-3\\\" (click)=\\\"refresh()\\\">Search</button>\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"reset()\\\">Reset</button>\\r\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"testElectron()\\\">Electron</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"pagenationMode\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Colorant\\r\\n\\r\\n        <button class=\\\"close\\\" (click)=\\\"addNewFormula()\\\" matTooltip=\\\"Add Formula\\\" aria-label=\\\"Add Formula\\\"><i class=\\\"fas fa-plus-square\\\"></i></button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <!--matSort (matSortChange)=\\\"sortData($event)\\\"-->\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th mat-sort-header=\\\"formulaCode\\\">Formula Code</th>\\r\\n              <th mat-sort-header=\\\"formulaName\\\">Formula Name</th>\\r\\n              <th mat-sort-header=\\\"approximateColor\\\">Approximate<br />Color</th>\\r\\n              <th mat-sort-header=\\\"collection\\\">Collection\\r\\n              <th mat-sort-header=\\\"product\\\">Product</th>\\r\\n              <th mat-sort-header=\\\"createdDate\\\">Created Date</th>\\r\\n              <th mat-sort-header=\\\"createdBy\\\">Created By</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let item of pagenationMode.listItems\\\">\\r\\n              <td>{{item.formula.formulaCode}}</td>\\r\\n              <td>{{item.formula.formulaName}}</td>\\r\\n              <td class=\\\"text-center\\\"><span [ngStyle]=\\\"{'background': item.formula.approximateColor, 'display': 'inline-block', 'width': '30px', 'height': '30px', 'border': '1px solid #333'}\\\"></span></td>\\r\\n              <td>{{item.formula.collection.collectionName}}</td>\\r\\n              <td>{{item.productBase.product.productName}}</td>\\r\\n              <td>{{item.formula.createdDate | date: 'dd/MM/yyyy'}}</td>\\r\\n              <td> {{item.formula.machine != null && item.formula.machine.machineId > 0 ? 'Me' : 'System'}}</td>\\r\\n              <td [ngStyle]=\\\"{'white-space': 'nowrap'}\\\">\\r\\n                <button mat-raised-button matTooltip=\\\"View Formula\\\" aria-label=\\\"View Formula\\\" (click)=\\\"viewFormula(item)\\\">\\r\\n                  <i class=\\\"fas fa-info-circle\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <ng-container *ngIf=\\\"item.formula.machine != null && item.formula.machine.machineId > 0\\\">\\r\\n                  <span class=\\\"vertical-separate-line\\\">&nbsp;</span>\\r\\n\\r\\n                  <button mat-raised-button matTooltip=\\\"Edit Formula\\\" aria-label=\\\"Edit Formula\\\" (click)=\\\"editTheFormula(item.formulaProductBaseId)\\\">\\r\\n                    <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n                </ng-container>\\r\\n            </tr>\\r\\n\\r\\n            <tfoot>\\r\\n            <tr>\\r\\n              <td colspan=\\\"100%\\\">\\r\\n                Show {{pagenationMode.listItems.length}} of  {{pagenationMode.totalItem}} items.\\r\\n\\r\\n                <span class=\\\"pagenation-footer\\\" style=\\\"float: right\\\">\\r\\n                  <span *ngIf=\\\"pagenationMode.pageIndex > 0\\\" (click)=\\\"goToPage(pagenationMode.pageIndex - 1)\\\" class=\\\"btn-action\\\"><</span>\\r\\n                  <span>{{pagenationMode.pageIndex + 1}}</span>\\r\\n                  <span *ngIf=\\\"pagenationMode.pageIndex * pagenationMode.maxPageItem + pagenationMode.maxPageItem < pagenationMode.totalItem\\\"  (click)=\\\"goToPage(pagenationMode.pageIndex + 1)\\\" class=\\\"btn-action\\\">></span>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".select-color-field {\\n  width: 100%; }\\n\\n.select2.select2-container {\\n  min-width: 300px;\\n  width: 100%; }\\n\\n.pagenation-footer {\\n  float: right; }\\n\\n.pagenation-footer span {\\n    display: inline-block;\\n    min-width: 50px;\\n    text-align: center;\\n    padding: 5px 10px; }\\n\\n.pagenation-footer span.btn-action {\\n      border: 1px solid #ccc;\\n      cursor: pointer; }\\n\\n.vertical-separate-line {\\n  margin-left: 0.25em;\\n  margin-right: 0.25em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb3JtdWxhL2xpc3QtZm9ybXVsYS9YOlxcd3NfbGVhcm5pbmdcXGNsaWVudHZpZXRwb3dlci9zcmNcXGFwcFxcY29tcG9uZW50c1xcZm9ybXVsYVxcbGlzdC1mb3JtdWxhXFxsaXN0LWZvcm11bGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsWUFBVyxFQUNaOztBQUdEO0VBQ0UsYUFBWSxFQWFiOztBQWREO0lBR0ksc0JBQXFCO0lBRXJCLGdCQUFlO0lBQ2YsbUJBQWtCO0lBQ2xCLGtCQUFpQixFQU1sQjs7QUFiSDtNQVVNLHVCQUFzQjtNQUN0QixnQkFBZSxFQUNoQjs7QUFLTDtFQUNFLG9CQUFtQjtFQUNuQixxQkFBb0IsRUFDckIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvcm11bGEvbGlzdC1mb3JtdWxhL2xpc3QtZm9ybXVsYS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWxlY3QtY29sb3ItZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5zZWxlY3QyLnNlbGVjdDItY29udGFpbmVye1xyXG4gIG1pbi13aWR0aDogMzAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4ucGFnZW5hdGlvbi1mb290ZXJ7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIHNwYW57XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgbWluLXdpZHRoOiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcblxyXG4gICAgJi5idG4tYWN0aW9ue1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLnZlcnRpY2FsLXNlcGFyYXRlLWxpbmV7XHJcbiAgbWFyZ2luLWxlZnQ6IDAuMjVlbTtcclxuICBtYXJnaW4tcmlnaHQ6IDAuMjVlbTtcclxufVxyXG4iXX0= */\"","import { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport {FormulaProductBaseModel} from '../../../models/formula_product_base';\r\nimport {CollectionModel} from '../../../models/collection';\r\nimport {FormulaModel} from '../../../models/formula';\r\nimport {StoreService} from '../../../services/store/store.service';\r\nimport {CollectionService} from '../../../services/collection/collection.service';\r\nimport {FormulaService} from '../../../services/formula/formula.service';\r\nimport {Router} from '@angular/router';\r\nimport {ProductService} from '../../../services/product/product.service';\r\nimport {FormulaCustomerModel} from '../../../models/formulacustomer';\r\nimport {CustomerService} from '../../../services/customer/customer.service';\r\nimport {CustomerModel} from '../../../models/customer';\r\nimport {ProductModel} from '../../../models/product';\r\nimport {Sort} from '@angular/material';\r\nimport {PagenationModel} from '../../../models/pagination.model';\r\nimport {ProductBaseModel} from '../../../models/product_base';\r\nimport {FileService} from '../../../file.service';\r\n\r\n@Component({\r\n  selector: 'app-list-formula',\r\n  templateUrl: './list-formula.component.html',\r\n  styleUrls: ['./list-formula.component.scss']\r\n})\r\n\r\nexport class ListFormulaComponent implements OnInit {\r\n  @Output() selectedFormula = new EventEmitter<FormulaProductBaseModel>();\r\n\r\n  listItems: FormulaProductBaseModel[] = [];\r\n  sortedData: FormulaProductBaseModel[] = [];\r\n  currentSort: Sort = null;\r\n  listOriginal = [];\r\n\r\n  listFormulas: FormulaModel[] = [];\r\n  listCollections: CollectionModel[] = [];\r\n  listProducts: ProductModel[] = [];\r\n  listProductBase: ProductBaseModel[];\r\n  listCustomer: CustomerModel[] = [];\r\n  listFormulaCustomer: FormulaCustomerModel[] = [];\r\n\r\n  pagenationMode: PagenationModel = new PagenationModel([], 0, 0, 15);\r\n\r\n  filter: {\r\n    formulaId: number,\r\n    productId: number,\r\n    collectionId: number,\r\n    customerId: number\r\n  };\r\n\r\n  constructor(\r\n    private storeService: StoreService,\r\n    private formulaService: FormulaService,\r\n    private collectionService: CollectionService,\r\n    private productService: ProductService,\r\n    private customerService: CustomerService,\r\n    private fileService: FileService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.listItems = [];\r\n    this.listOriginal = [];\r\n    this.sortedData = [];\r\n\r\n    this.filter = {\r\n      formulaId: undefined,\r\n      productId: undefined,\r\n      collectionId: undefined,\r\n      customerId: undefined\r\n    };\r\n\r\n    if (this.storeService.getMachineData() != null && this.storeService.getMachineData().machineId > 0) {\r\n      this.initMetadata();\r\n    }\r\n  }\r\n\r\n  initMetadata() {\r\n    // this.formulaService.postData();\r\n    // this.formulaService.postData1();\r\n    const me = this;\r\n\r\n    this.listFormulas = [];\r\n    this.formulaService.getALl().subscribe(datas => {\r\n      this.listFormulas = datas;\r\n    });\r\n\r\n    this.listProducts = [];\r\n    this.productService.getListItems().subscribe(datas => {\r\n      this.listProducts = datas;\r\n    });\r\n\r\n    this.listCollections = [];\r\n    this.collectionService.getListItems().subscribe(datas => {\r\n      me.listCollections = datas;\r\n    });\r\n\r\n    this.listProductBase = [];\r\n    this.productService.getListProductBase().subscribe(datas => {\r\n      me.listProductBase = datas;\r\n    });\r\n\r\n    // get list formula product base\r\n    this.listItems = [];\r\n    this.listOriginal = [];\r\n\r\n    this.formulaService.getAllFormulaProductBase().subscribe(datas => {\r\n      datas.map(fpb => {\r\n        me.listItems.push(fpb);\r\n        me.listOriginal.push(fpb);\r\n      });\r\n\r\n      this.updateCustomerForFormula();\r\n      this.updatePagenationMode();\r\n    });\r\n\r\n\r\n    this.listCustomer = [];\r\n    this.customerService.findAll().subscribe(datas => {\r\n      this.listCustomer = datas;\r\n    });\r\n\r\n    this.listFormulaCustomer = [];\r\n    this.formulaService.findAllByCustomer().subscribe(_datas => {\r\n      this.listFormulaCustomer = _datas;\r\n      this.updateCustomerForFormula();\r\n    });\r\n  }\r\n\r\n  updateCustomerForFormula(): void {\r\n    if (this.listFormulaCustomer != null && this.listFormulaCustomer.length > 0 && this.listItems != null && this.listItems.length > 0) {\r\n      for (const formulaCustomer of this.listFormulaCustomer) {\r\n        const listFormulaBase = this.listItems.filter(item => {\r\n          return item.formula.formulaId === formulaCustomer.formula.formulaId;\r\n        });\r\n\r\n        if (listFormulaBase != null && listFormulaBase.length > 0) {\r\n          for (const formulaBase of listFormulaBase) {\r\n            if (formulaBase.formula != null && (formulaBase.formula.listCustomer == null || formulaBase.formula.listCustomer === undefined)) {\r\n              formulaBase.formula.listCustomer = [];\r\n            }\r\n            formulaBase.formula.listCustomer.push(formulaCustomer.customer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  sortData = function (sort: Sort) {\r\n    this.currentSort = sort;\r\n    this.refresh();\r\n  };\r\n\r\n  updatePagenationMode = function () {\r\n    const listItem = this.listItems;\r\n    const currentPage = this.pagenationMode.pageIndex;\r\n\r\n    const _listItem = [];\r\n\r\n    for (let i = currentPage * this.pagenationMode.maxPageItem; i < listItem.length; i++) {\r\n      if (i < currentPage * this.pagenationMode.maxPageItem + this.pagenationMode.maxPageItem) {\r\n        _listItem.push(listItem[i]);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.pagenationMode.listItems = _listItem;\r\n    this.pagenationMode.totalItem = listItem.length;\r\n  };\r\n\r\n  viewFormula(selectItem: FormulaProductBaseModel) {\r\n    this.selectedFormula.emit(selectItem);\r\n    // this.router.navigate([`../dashboard/view-formula/${formulaProductBaseId}`]);\r\n  }\r\n\r\n  onFilterChange(event) {\r\n    this.refresh();\r\n  }\r\n\r\n  reset() {\r\n\r\n  }\r\n\r\n  testElectron() {\r\n    this.fileService.saveFile();\r\n  }\r\n\r\n  refresh() {\r\n    let resFilter = this.listOriginal;\r\n\r\n    if (this.filter.formulaId) {\r\n      resFilter = resFilter.filter(fpb => {\r\n        return fpb.formula.formulaId.toString() === this.filter.formulaId.toString();\r\n      });\r\n    }\r\n\r\n    if (this.filter.collectionId) {\r\n      resFilter = resFilter.filter(fpb => {\r\n        return fpb.formula.collection.collectionId.toString() === this.filter.collectionId.toString();\r\n      });\r\n    }\r\n\r\n    if (this.filter.productId) {\r\n      resFilter = resFilter.filter(fpb => {\r\n        return fpb.productBase.product.productId.toString() === this.filter.productId.toString();\r\n      });\r\n    }\r\n\r\n    if (this.filter.customerId) {\r\n      resFilter = resFilter.filter(fpb => {\r\n        let isExis = false;\r\n        if (fpb.formula.listCustomer != null && fpb.formula.listCustomer.length > 0) {\r\n          const index = fpb.formula.listCustomer.findIndex(customer => {\r\n            return customer.customerId.toString() === this.filter.customerId.toString();\r\n          });\r\n          if (index != null && index > -1) {\r\n            isExis = true;\r\n          }\r\n        }\r\n        return isExis;\r\n      });\r\n    }\r\n\r\n    this.listItems = resFilter;\r\n\r\n    if (this.currentSort == null || !this.currentSort.active || this.currentSort.direction === '') {\r\n      this.listItems = resFilter;\r\n    } else {\r\n      this.listItems = resFilter.sort((a, b) => {\r\n        const isAsc = this.currentSort.direction === 'asc';\r\n        switch (this.currentSort.active) {\r\n          case 'formulaCode':\r\n            return compare(a.formula.formulaCode, b.formula.formulaCode, isAsc);\r\n          case 'formulaName':\r\n            return compare(a.formula.formulaName, b.formula.formulaName, isAsc);\r\n          case 'approximateColor':\r\n            return compare(a.formula.approximateColor, b.formula.approximateColor, isAsc);\r\n          case 'collection':\r\n            return compare(a.formula.collection.collectionName, b.formula.collection.collectionName, isAsc);\r\n          case 'product':\r\n            return compare(a.productBase.product.productName, b.productBase.product.productName, isAsc);\r\n          case 'createdDate':\r\n            return compare(a.formula.createdDate, b.formula.createdDate, isAsc);\r\n          case 'createdBy':\r\n            return compare(a.formula.machine != null ? 1 : 0, b.formula.machine != null ? 1 : 0, isAsc);\r\n          default:\r\n            return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.pagenationMode.pageIndex = 0;\r\n    this.updatePagenationMode();\r\n\r\n    function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  goToPage(pageIndex: number) {\r\n    this.pagenationMode.pageIndex = pageIndex;\r\n    this.updatePagenationMode();\r\n  }\r\n\r\n  addNewFormula() {\r\n    this.router.navigate([`../dashboard/formula/add`]);\r\n  }\r\n\r\n  editTheFormula(formulaId) {\r\n    this.router.navigate([`../dashboard/formula/edit/${formulaId}`]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Maintenance</h1>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9ybXVsYS9tYWludGVuYW5jZS9tYWludGVuYW5jZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-maintenance',\r\n  templateUrl: './maintenance.component.html',\r\n  styleUrls: ['./maintenance.component.scss']\r\n})\r\nexport class MaintenanceComponent implements OnInit {\r\n\r\n  list;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Standard Formula</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"dbItem != null\\\">\\r\\n  <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Information\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body form-detail\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Color</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.formula.formulaCode}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Collection</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.formula.collection.collectionName}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Approximate Color</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <span [ngStyle]=\\\"{'background': dbItem.formula.approximateColor, 'display': 'inline-block', 'width': '30px', 'height': '30px', 'border': '1px solid #333'}\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Product</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.productBase.product.productName}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Formula Date</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.formula.createdDate | date : 'dd/MM/yyyy'}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Substrate</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.formula.substrate}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Comment</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            {{dbItem.formula.comment}}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-md-4 label-control\\\">Barcode</label>\\r\\n          <div class=\\\"col-md-8\\\">\\r\\n            <span *ngIf=\\\"selectProductBase != null\\\">\\r\\n              {{selectProductBase.barCode}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-lg-6 col-md-6 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Component colors\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" >\\r\\n            <tr>\\r\\n              <th style=\\\"width: 30%\\\">Component</th>\\r\\n              <th style=\\\"width: 20%\\\">ml</th>\\r\\n              <th style=\\\"width: 50%\\\">Color\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let colorantItem of listFormulaColorant\\\">\\r\\n              <td>{{colorantItem.colourant.colourantName}}</td>\\r\\n              <td>{{roundNumber((colorantItem.quantity / dbItem.formula.baseOnCan) * canSize)}}</td>\\r\\n              <td>\\r\\n                <span class=\\\"color-bar\\\" >\\r\\n                  <span class=\\\"color-select\\\" [ngStyle]=\\\"{'background': colorantItem.colourant.rbgHex, 'width': (colorantItem.quantity / maxColorQuantity) * 100 + '%'}\\\"></span>\\r\\n                </span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"dbItem != null\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Mixed\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\"  *ngIf=\\\"errorMessage != null && errorMessage != ''\\\">\\r\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">\\r\\n              <button class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\" (click)=\\\"clearErrorMessage()\\\">&times;</button>\\r\\n              {{errorMessage}}\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-16 col-xs-12 text-right\\\">\\r\\n\\r\\n             <span class=\\\"base-can-empty\\\" *ngIf=\\\"selectProductBase != null\\\">\\r\\n                <span class=\\\"base-can-background\\\">\\r\\n                  <span class=\\\"base-can-volume\\\" [ngStyle]=\\\"{'background-color': selectProductBase.productBase.rbgHex, 'height': selectProductBase.percentage + '%'}\\\">\\r\\n                    <span class=\\\"can-base-info\\\">\\r\\n                      <span class=\\\"base-type\\\">Base : {{selectProductBase.productBase.base.baseCode}}</span>\\r\\n                      <span class=\\\"base-volume\\\">{{canSize}} Liter</span>\\r\\n                      <span class=\\\"base-name\\\">{{selectProductBase.productBase.product.productName}}</span>\\r\\n                    </span>\\r\\n                  </span>\\r\\n                </span>\\r\\n              </span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-6 col-md-6 col-sm-126 col-xs-12 form-detail\\\">\\r\\n            <div class=\\\"row form-group\\\">\\r\\n              <label class=\\\"col-md-4 label-control\\\">Number of cans : </label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"numberOfCan\\\" class=\\\"form-control\\\" required=\\\"required\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngStyle]=\\\"{'width': '200px'}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row form-group\\\">\\r\\n              <label class=\\\"col-md-4 label-control\\\">Can size:</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"canSize\\\" class=\\\"form-control\\\" required=\\\"required\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [ngStyle]=\\\"{'width': '200px'}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row form-group\\\">\\r\\n              <label class=\\\"col-md-4 label-control\\\">Or select:</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <ng-select2 class=\\\"select-color-field\\\" [(ngModel)]=\\\"canSize\\\" [data]=\\\"listProductBase\\\" [value]=\\\"canSize\\\" [placeholder]=\\\"'Choose Can Size'\\\" [width]=\\\"200\\\" (valueChanged)=\\\"changedCanSize($event)\\\"></ng-select2>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row form-group\\\">\\r\\n              <label class=\\\"col-md-4 label-control\\\"></label>\\r\\n\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"beginDispense('view-dispense-task-modal')\\\">\\r\\n                  <i class=\\\"fas fa-fill-drip\\\"></i>\\r\\n                  <span *ngIf=\\\"inProgress\\\">In Progress</span>\\r\\n                  <span *ngIf=\\\"! inProgress\\\">Dispense</span>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"stateMachine != null && stateMachine == 'DISPENSE' && (errorMessage == null || errorMessage == '') && dbItem != null && currentTask != null && currentTask.taskId != null && currentTask.taskId > 0\\\">\\r\\n  <pp-modal id=\\\"view-dispense-task-modal\\\" class=\\\"modal dispense-job-status-modal\\\" [ngStyle]=\\\"{'display': 'none'}\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <ng-container *ngIf=\\\"errorMessage == null || errorMessage == ''\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\">Dispense Job Status</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('view-dispense-task-modal')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">×</span>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <ng-container *ngIf=\\\"dbItem != null && currentTask != null && currentTask.taskId != null && currentTask.taskId > 0\\\">\\r\\n            <app-viewdispensetask [dispenseTask]=\\\"currentTask\\\" [dispenseStepTask]=\\\"currentTaskStep\\\" [listColorantUsed]=\\\"listColorant\\\" [maxColorQuantity]=\\\"maxColorQuantity\\\"></app-viewdispensetask>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeModal('view-dispense-task-modal')\\\">Hide</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"stateMachine != null && stateMachine == 'PRINT' && dbItem != null\\\">\\r\\n  <pp-modal id=\\\"print-formula-modal\\\" class=\\\"modal print-formula-modal\\\" [ngStyle]=\\\"{'display': 'none'}\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Print</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('print-formula-modal')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row text-center\\\">\\r\\n          <div class=\\\"col-md-12 formula-color-info\\\"><h3>{{dbItem.formula.formulaCode}}</h3></div>\\r\\n          <div class=\\\"col-md-12 collection-info\\\"><h4>{{dbItem.formula.collection.collectionName}}</h4></div>\\r\\n          <div class=\\\"col-md-12 shop-info\\\"><h5>Paintshop \\\"Demo\\\"</h5></div>\\r\\n          <div class=\\\"col-md-12 street-info\\\"><h5>Demostreet 1</h5></div>\\r\\n          <div class=\\\"col-md-12 ville-info\\\"><h5>Demo ville</h5></div>\\r\\n          <div class=\\\"col-md-12 substrate-info\\\"><p>Substrate recommendation Universal primer Grey</p></div>\\r\\n          <div class=\\\"col-md-12 bar-code-info\\\">\\r\\n             <span *ngIf=\\\"selectProductBase != null\\\">\\r\\n              <ngx-barcode [bc-value]=\\\"selectProductBase.barCode\\\" [bc-display-value]=\\\"true\\\"></ngx-barcode>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeDispenseModel()\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"printFormulaDispense()\\\">Print</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\"","module.exports = \".color-bar {\\n  width: 100%;\\n  display: inline-block;\\n  position: relative;\\n  height: 1em; }\\n  .color-bar .color-select {\\n    display: inline-block;\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    bottom: 0px; }\\n  .text-error {\\n  color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb3JtdWxhL3ZpZXdmb3JtdWxhL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxmb3JtdWxhXFx2aWV3Zm9ybXVsYVxcdmlld2Zvcm11bGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXO0VBQ1gsc0JBQXFCO0VBQ3JCLG1CQUFrQjtFQUNsQixZQUFXLEVBU1o7RUFiRDtJQU9JLHNCQUFxQjtJQUNyQixtQkFBa0I7SUFDbEIsU0FBUTtJQUNSLFVBQVM7SUFDVCxZQUFXLEVBQ1o7RUFFSDtFQUNFLFdBQVUsRUFDWCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9ybXVsYS92aWV3Zm9ybXVsYS92aWV3Zm9ybXVsYS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb2xvci1iYXJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBoZWlnaHQ6IDFlbTtcclxuXHJcbiAgLmNvbG9yLXNlbGVjdHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgfVxyXG59XHJcbi50ZXh0LWVycm9ye1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuIl19 */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormulaService} from '../../../services/formula/formula.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Select2Item} from '../../../models/colorant.model';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\nimport {\r\n  DispenseDataModel,\r\n  DispenseStepDataModel,\r\n  DispenseTaskModel,\r\n  DispenseTaskStepModel,\r\n  MachineFormulaProductBaseLogModel\r\n} from '../../../models/dispense.task.model';\r\nimport {DispenseTaskService} from '../../../services/dispensetask/dispensetask.service';\r\nimport {MAP_DISPENSE_TASK_STATE, MAP_DISPENSE_TASK_STEP_TYPE} from '../../../models/dispense.task.model';\r\nimport {FormulaColourantModel, FormulaProductBaseModel, ProductBaseCanModel} from '../../../models/formula_product_base';\r\nimport {ProductBaseService} from '../../../services/productbase/productbase.service';\r\nimport ConvertModelUtils from '../../../utils/convert-models-utils';\r\nimport {MachineService} from '../../../services/machine/machine.service';\r\nimport {FormulaCustomerModel} from '../../../models/formulacustomer';\r\n\r\n@Component({\r\n  selector: 'app-viewformula',\r\n  templateUrl: './viewformula.component.html',\r\n  styleUrls: ['./viewformula.component.scss']\r\n})\r\n\r\nexport class ViewFormulaComponent implements OnInit {\r\n  @Input() dbItem: FormulaProductBaseModel;\r\n\r\n  formulaProductBaseId: number;\r\n  listFormulaColorant: FormulaColourantModel[] = null;\r\n  listProductBaseCan: ProductBaseCanModel[] = null;\r\n\r\n  maxColorQuantity = 0;\r\n  canSize = 1;\r\n  selectProductBase: ProductBaseCanModel = null;\r\n  numberOfCan = 1;\r\n  listProductBase: Select2Item[] | null = null;\r\n\r\n\r\n  // step 2. dispense colourant\r\n  inProgress: boolean = false;\r\n  currentTask: DispenseTaskModel | any = null;\r\n  currentTaskStep: DispenseTaskStepModel | any = null;\r\n  listColorant: any[] = null;\r\n  errorMessage: string = null;\r\n\r\n  stateMachine: string = null;\r\n\r\n  constructor(private formulaService: FormulaService,\r\n              private productBaseService: ProductBaseService,\r\n              private modalService: ModalService,\r\n              private dispenseTaskService: DispenseTaskService,\r\n              private machineService: MachineService,\r\n              private router: Router, private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.listFormulaColorant = [];\r\n    this.listProductBaseCan = [];\r\n    this.fetchDBItem();\r\n  }\r\n\r\n  fetchDBItem() {\r\n    this.selectProductBase = null;\r\n    this.getRelativeData();\r\n  }\r\n\r\n  roundNumber(num: number) {\r\n    return Math.round(num * 100) / 100;\r\n  }\r\n\r\n  getRelativeData() {\r\n    if (this.dbItem != null) {\r\n      // Step 2. Get list Colorant of Formula\r\n      this.formulaService.getListColorantOfFormula(this.dbItem.formula.formulaId).subscribe((data: FormulaColourantModel[]) => {\r\n        this.listFormulaColorant = data;\r\n\r\n        // Step 4. Process data before render\r\n        this.listColorant = [];\r\n\r\n        for (const colorant of this.listFormulaColorant) {\r\n          this.listColorant.push({colorant: colorant.colourant, quantity: colorant.quantity});\r\n\r\n          if (this.maxColorQuantity === 0 || this.maxColorQuantity < colorant.quantity) {\r\n            this.maxColorQuantity = colorant.quantity;\r\n          }\r\n        }\r\n      });\r\n\r\n      // Step 3. Get List Product Base Can of Formula\r\n      this.formulaService.getListProductBaseCan(this.dbItem.productBase.productBaseId).subscribe(datas => {\r\n        this.listProductBaseCan = datas;\r\n\r\n        this.listProductBase = [];\r\n\r\n        for (const productBaseCan of this.listProductBaseCan) {\r\n          this.listProductBase.push({\r\n            id: productBaseCan.can,\r\n            text: productBaseCan.can + ' ' + (productBaseCan.unit === null ? 'L' : productBaseCan.unit)\r\n          });\r\n\r\n          if (productBaseCan.can === this.canSize) {\r\n            this.selectProductBase = productBaseCan;\r\n          }\r\n        }\r\n\r\n        if (this.selectProductBase == null && this.listProductBaseCan.length > 0) {\r\n          this.selectProductBase = this.listProductBaseCan[0];\r\n          this.canSize = this.dbItem.formula.baseOnCan;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  changedCanSize(e: any): void {\r\n    this.canSize = e.value;\r\n  }\r\n\r\n  beginDispense(modalId: string): void {\r\n    this.stateMachine = null;\r\n\r\n    this.machineService.validateQuantityColourant(this.canSize, this.listFormulaColorant, this.dbItem.formula).subscribe(res => {\r\n      if (res.length === 0) {\r\n        // create when not current task in process or task is done !!!!;\r\n        if (this.currentTask == null || this.currentTask.status === MAP_DISPENSE_TASK_STATE.DONE) {\r\n          const listPumpingTask = [];\r\n\r\n          for (const colorant of this.listColorant) {\r\n            const prepare_t = new DispenseTaskStepModel(MAP_DISPENSE_TASK_STEP_TYPE.PREPARE, null,\r\n              (newDispenseTask, newDispenseStepTask) => {\r\n                this.updateDispenseTaskData(newDispenseTask, newDispenseStepTask);\r\n              });\r\n\r\n            const pumping_t = new DispenseTaskStepModel(MAP_DISPENSE_TASK_STEP_TYPE.PUMPING, new DispenseStepDataModel(colorant.colorant,\r\n              colorant.quantity * this.canSize), (newDispenseTask, newDispenseStepTask) => {\r\n              this.updateDispenseTaskData(newDispenseTask, newDispenseStepTask);\r\n            });\r\n\r\n            listPumpingTask.push(prepare_t);\r\n            listPumpingTask.push(pumping_t);\r\n          }\r\n\r\n          const stop_t = new DispenseTaskStepModel(MAP_DISPENSE_TASK_STEP_TYPE.FINISHED, null, (newDispenseTask, newDispenseStepTask) => {\r\n            this.updateDispenseTaskData(newDispenseTask, newDispenseStepTask);\r\n            this.numberOfCan -= 1;\r\n            if (this.numberOfCan > 0) {\r\n              this.beginDispense(modalId);\r\n            } else {\r\n              this.numberOfCan = 1;\r\n            }\r\n\r\n            this.stateMachine = 'PRINT';\r\n            setTimeout(() => {\r\n              this.openModal('print-formula-modal');\r\n            }, 500);\r\n          });\r\n\r\n          listPumpingTask.push(stop_t);\r\n\r\n          this.currentTask = new DispenseTaskModel('Dispense', listPumpingTask, new DispenseDataModel(this.dbItem, this.selectProductBase,\r\n            this.canSize, this.numberOfCan), null);\r\n\r\n          this.machineService.recordDispenseFormulaProductBase(MAP_DISPENSE_TASK_STATE.IN_PROGRESS, this.currentTask.taskId,\r\n            this.currentTask.taskData.formulaProductBase, this.currentTask.taskData.canSize).subscribe((data: any) => {\r\n            const item: MachineFormulaProductBaseLogModel = ConvertModelUtils.convertToDispenseFormulaProductBaseModel(data);\r\n            this.currentTask.taskId = item.machineFormulaProductBaseId;\r\n            this.currentTask.status = item.status;\r\n            this.currentTask.startTime = item.createdDate;\r\n\r\n            this.dispenseTaskService.runDispenseTask(this.currentTask);\r\n            this.stateMachine = 'DISPENSE';\r\n\r\n            setTimeout(() => {\r\n              this.openModal(modalId);\r\n            }, 200);\r\n          });\r\n        }\r\n      } else {\r\n        this.errorMessage = 'Not enough colorant quantity to dispense.';\r\n        this.currentTask == null;\r\n      }\r\n    });\r\n  }\r\n\r\n  clearErrorMessage() {\r\n    this.errorMessage = null;\r\n  }\r\n\r\n  updateDispenseTaskData(newDispenseTask: DispenseTaskModel, newDispenseStepTask: DispenseTaskStepModel) {\r\n    this.currentTask = newDispenseTask;\r\n    this.currentTaskStep = newDispenseStepTask;\r\n\r\n    if (this.currentTask.status === MAP_DISPENSE_TASK_STATE.IN_PROGRESS) {\r\n      this.inProgress = true;\r\n    }\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this.modalService.close(id);\r\n  }\r\n\r\n  closeDispenseModel() {\r\n    this.closeModal('print-formula-modal');\r\n    this.stateMachine = null;\r\n  }\r\n\r\n  printFormulaDispense() {\r\n    document.body.classList.add('print-mode');\r\n    window.print();\r\n\r\n    setTimeout(() => {\r\n      document.body.classList.remove('print-mode');\r\n      this.stateMachine = 'PRINT';\r\n    }, 2000);\r\n  }\r\n}\r\n","module.exports = \"<section class=\\\"container\\\">\\r\\n  <h2>Hướng dẫn setup git nếu commit ko được</h2>\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Khi gặp lỗi này: </p>\\r\\n    <blockquote>\\r\\n      Failed with error: unable to access 'https://github.com/buitahau/demoson.git/': The requested URL returned error: 403\\r\\n    </blockquote>\\r\\n\\r\\n    <p>Ta cần làm như sau: Vào folder .git/config, edit lại cái url như sau :</p>\\r\\n\\r\\n    <p>url = https://github.com/buitahau/demoson.git</p>\\r\\n\\r\\n    <p>url = https://bluesky020990:xxxxxxxxxxx@github.com/buitahau/demoson.git</p>\\r\\n\\r\\n    <p>Vẫn ko được :( Do ko đc share !!</p>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <h2>Hướng dẫn cài đặt angular</h2>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Để cài đặt angular, đầu tiên ta new 1 cái angular project</p>\\r\\n\\r\\n    <blockquote>\\r\\n      ng new frontend\\r\\n    </blockquote>\\r\\n\\r\\n    <p>Sau khi khởi tạo nó rồi, đơn giản là ta sẽ start nó thôi đúng ko</p>\\r\\n\\r\\n    <blockquote>\\r\\n      ng serve --open\\r\\n    </blockquote>\\r\\n\\r\\n    <p>--open khai báo tự open cái browser lên để show cái page.</p>\\r\\n\\r\\n\\r\\n    <p>Các npm cần install để làm việc trong project này bao gồm:</p>\\r\\n    <ol>\\r\\n      <li>material </li>\\r\\n      <li>boostrap</li>\\r\\n      <li>node sass (để generate scss files)</li>\\r\\n    </ol>\\r\\n\\r\\n    <p>Sau đó, ta add material cho cái project này</p>\\r\\n\\r\\n    <blockquote>\\r\\n      ng add @angular/material\\r\\n    </blockquote>\\r\\n\\r\\n\\r\\n    <p>Add luon cai boostrap</p>\\r\\n\\r\\n    <p>Install boostrap</p>\\r\\n\\r\\n    <blockquote>\\r\\n      npm install ngx-bootstrap --save\\r\\n    </blockquote>\\r\\n\\r\\n    <p>Add boostrap to project </p>\\r\\n\\r\\n    <blockquote>\\r\\n      ng add ngx-bootstrap\\r\\n    </blockquote>\\r\\n\\r\\n    <p>Xem hướng dẫn install bootstrap cho angular tai  : <a href=\\\"https://medium.com/@tomastrajan/how-to-build-responsive-layouts-with-bootstrap-4-and-angular-6-cfbb108d797b\\\">đây</a> </p>\\r\\n\\r\\n    <p>Install node sass để generate scss file. Nếu ko cài cái này thì style trong file scss sẽ ko được generate ra đâu</p>\\r\\n\\r\\n    <blockquote>\\r\\n      npm install -g node-sass\\r\\n    </blockquote>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <h2>Hướng dẫn tạo component và khai báo routers</h2>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Để tạo một component tự động, ta làm như sau : ** Khuyến khích xài command line vì generate thủ công\\r\\n    rất dễ sai và đôi khi xảy ra những sai sót ko đáng có.</p>\\r\\n\\r\\n    <ol>\\r\\n      <li>cd vào folder cài đặt angular, folder chứa file package.json (ở đây là front-end)</li>\\r\\n      <li>Dùng command line sau để tạo component một cách tự động:\\r\\n        <blockquote>\\r\\n          ng g c components/help\\r\\n        </blockquote>\\r\\n\\r\\n        <p>Giải thích  thêm : g - generate, c - component, components/help : tạo component Help ở folder /components</p>\\r\\n      </li>\\r\\n    </ol>\\r\\n\\r\\n    <img src=\\\"../../../assets/help/add_components.JPG\\\" width=\\\"989\\\" height=\\\"837\\\" class=\\\"img-fluid\\\"/>\\r\\n\\r\\n    <p>Đối với component, luôn có 2 phần, 1 là annotation @component và 2 là export class. 2 Cái này luôn đi với nhau, như hình:</p>\\r\\n\\r\\n    <img src=\\\"../../../assets/help/component_note_1.JPG\\\" width=\\\"1492\\\" height=\\\"1235\\\" class=\\\"img-fluid\\\"/>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Quan trọng nhất của angular là các router. Ta phải khai báo các router này để định tuyến các request tới\\r\\n    các Component tương ứng.</p>\\r\\n\\r\\n    <p>Trong file app.module.ts, ta khai báo routers như sau: Xem image</p>\\r\\n\\r\\n    <img src=\\\"../../../assets/help/config_routers.jpg\\\" width=\\\"1884\\\" height=\\\"1453\\\"/>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <h2>Những lưu ý khi sử dụng các components trong Angular.</h2>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Nếu một tag chưa được khai báo, thì nó sẽ báo lỗi biên dịch. Ví dụ thêm vào < mat-toolbar>&lt;/> thì ngay lập tức nó báo lỗi.</p>\\r\\n    <p>Khi import một module vào, thì phải thêm nó ở trong imports</p>\\r\\n\\r\\n    <img src=\\\"../../../assets/help/add_module.JPG\\\" width=\\\"1432\\\" height=\\\"1467\\\" class=\\\"img-fluid\\\"/>\\r\\n\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n\\r\\n<section class=\\\"container\\\">\\r\\n  <h2>Tạo service trong Angular </h2>\\r\\n\\r\\n  <div class=\\\"content\\\">\\r\\n    <p>Việc tạo service cũng như tạo component, tốt nhất nên generate tự động.</p>\\r\\n\\r\\n    <blockquote>\\r\\n      ng g s issue\\r\\n    </blockquote>\\r\\n\\r\\n    <p>Khác với component, sau khi generate xong ta phải khao báo trong declarations của app.module, thì service phải được khai báo trong providers.</p>\\r\\n\\r\\n    <img src=\\\"../../../assets/help/add_service.JPG\\\" width=\\\"2134\\\" height=\\\"1700\\\" class=\\\"img-fluid\\\"/>\\r\\n\\r\\n    <p>Như vậy, trước mắt ta có các lưu ý sau:</p>\\r\\n\\r\\n    <ol>\\r\\n      <li>Component khai báo trong declarations</li>\\r\\n      <li>Service khai báo trong providers</li>\\r\\n      <li>Module khai báo trong imports</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n\"","module.exports = \"app-help blockquote {\\n  border: 1px solid #ccc;\\n  padding: 5px; }\\n\\napp-help img {\\n  max-width: 50% !important;\\n  height: auto !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWxwL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxoZWxwXFxoZWxwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksdUJBQXNCO0VBQ3RCLGFBQVksRUFDYjs7QUFKSDtFQU9JLDBCQUF5QjtFQUN6Qix3QkFBdUIsRUFDeEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hlbHAvaGVscC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFwcC1oZWxwe1xyXG4gIGJsb2NrcXVvdGV7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gIH1cclxuXHJcbiAgaW1ne1xyXG4gICAgbWF4LXdpZHRoOiA1MCUgIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.scss']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Angular language</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Làm việc với kiểu dữ liệu trong angular.\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p>Danh sách các vấn đề cần quan tâm bao gồm :</p>\\r\\n\\r\\n        <ul>\\r\\n          <li>Show 1 biến ra màn hình</li>\\r\\n          <li>Gán giá trị local trong template</li>\\r\\n          <li>Câu điều kiện if else</li>\\r\\n          <li>Vòng lặp</li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Overview</h4>\\r\\n\\r\\n        <p>Trong angular, để set các biến cho các component để sử dụng bên html page, thì ta phải khai báo nó trong method export component.</p>\\r\\n\\r\\n        <p>Mỗi languge có những vấn đề khác nhau, ở đây ta sẽ tìm hiểu về việc show cái giá trị biến, gán giá trị, so sánh\\r\\n          điều kiện if  else if, else, các vòng lặp for, while (nếu có), cũng như các hashtag khác.</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Show 1 biến ra màn hình</h4>\\r\\n\\r\\n        <p>Biến trong angular được export trong đoạn block code cuối cùng của component. Ví dụ ta có biến pageTitle.</p>\\r\\n\\r\\n        <p>Để show nó ra màn hình ta sử dụng cặp dấu \\\"{{'{'}}\\\" \\\"{{ '{' }}\\\" \\\"{{ '}' }}\\\" \\\"{{ '}' }}\\\" này nhé.</p>\\r\\n\\r\\n        <p>(Lưu ý là show nó, còn sử dụng thì ko cần cặp dấu  \\\"{{'{'}}\\\" \\\"{{ '}' }}\\\" này đâu nhé. Xem file colorant.component.html để biết thêm chi tiết)</p>\\r\\n\\r\\n        <blockquote>\\r\\n          Content này lấy từ pageTitle : {{ pageTitle | uppercase }}\\r\\n        </blockquote>\\r\\n\\r\\n        <p>Màu của biến nó sẽ khác với màu của mấy thằng còn lại nên sẽ rất dễ xem.</p>\\r\\n\\r\\n        <p>Để gán giá trị của biến, ta cần sử dụng ngInit</p>\\r\\n\\r\\n        <blockquote>\\r\\n          *ngInit\\r\\n        </blockquote>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Gán giá trị local trong template.</h4>\\r\\n\\r\\n        <p>để khai báo 1 biến, ta sử dụng từ khóa ngInit</p>\\r\\n\\r\\n        <p>Xem thêm ở đây <a href=\\\"https://www.guru99.com/angularjs-expressions.html\\\" target=\\\"_blank\\\">Click to view</a></p>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Câu điều kiện if else</h4>\\r\\n\\r\\n        <p>Đây là 1 ví dụ của câu điều kiện if</p>\\r\\n\\r\\n        <blockquote>\\r\\n          &lt;p *ngIf=\\\"heroes.length > 3\\\">There are many heroes!&lt;/p&gt;`\\r\\n        </blockquote>\\r\\n\\r\\n        <p *ngIf=\\\"test_if_value  == true\\\">There are many heroes!</p>\\r\\n\\r\\n        <p>Xem thêm ở đây <a href=\\\"https://angular.io/guide/template-syntax#ngIf\\\" target=\\\"_blank\\\">Click to view</a> </p>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Làm việc với biến.</h4>\\r\\n\\r\\n        <p>Biến trong angular được export trong đoạn block code cuối cùng của component. Ví dụ ta có biến pageTitle.</p>\\r\\n\\r\\n        <p>Để sử dụng nó, ta sử dụng cặp dấu \\\"{{'{'}}\\\" \\\"{{ '{' }}\\\" \\\"{{ '}' }}\\\" \\\"{{ '}' }}\\\" này nhé.</p>\\r\\n\\r\\n        <blockquote>\\r\\n          Content này lấy từ pageTitle : {{ pageTitle }}\\r\\n        </blockquote>\\r\\n\\r\\n        <p>Màu của biến nó sẽ khác với màu của mấy thằng còn lại nên sẽ rất dễ xem.</p>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      *ngIf=\\\"heroes.length > 3\\\"\\r\\n\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Làm việc với mảng.</h4>\\r\\n\\r\\n        <p>Duyệt các phần tử của mảng : sử dụng * ngFor=\\\"let item of listItem\\\" </p>\\r\\n\\r\\n        <blockquote>\\r\\n          <ul *ngFor=\\\"let item of listItems\\\">\\r\\n            <li>{{item}}</li>\\r\\n          </ul>\\r\\n        </blockquote>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4>Style trong angular</h4>\\r\\n\\r\\n        <p>Xem tai link sau : <a href=\\\"https://alligator.io/angular/style-binding-ngstyle-angular/\\\" target=\\\"_blank\\\">Click to view </a></p>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!---->\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVscC9sYW5ndWFnZS9sYW5ndWFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-language',\r\n  templateUrl: './language.component.html',\r\n  styleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  test_if_value: boolean = true;\r\n  pageTitle: string = 'ANGULAR LANGUAGE !!';\r\n  listItems: string[] = ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6', 'Item 7', 'Item 8'];\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Help</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Task process\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"detail-status\\\">\\r\\n          <span class=\\\"not-start\\\">Not start</span> <span class=\\\"vertical-separate-line\\\"></span>\\r\\n          <span class=\\\"in-progress\\\">In progress</span> <span class=\\\"vertical-separate-line\\\"></span>\\r\\n          <span class=\\\"done\\\">Done</span>\\r\\n        </div>\\r\\n\\r\\n        <h3>Server</h3>\\r\\n        <ol>\\r\\n          <li class=\\\"not-start\\\">Upload cái structure database</li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">validate dữ liệu trước khi import (Import == CLEAR)\\r\\n            <ul>\\r\\n              <li>Dữ liệu không được trùng, các field là duy nhất (cho cả 4 sheets)</li>\\r\\n\\r\\n              <li>Validate data không hợp lệ (ví dụ check colourant trong formula, product, base...)</li>\\r\\n\\r\\n              <li>Đảm bảo import dữ liệu. Hiện tại quy tắc là import vào 1 cái sheet mới thì delete toàn bộ data cũ có liên quan.</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">Thêm phần quản lý machine</li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">Sau khi build App phải có phần communicate với app khác, và tiến hành ghi dữ liệu vào 1 folder được chia sẻ cùng.</li>\\r\\n          <li class=\\\"not-start\\\">Nếu đóng gói 2 app lại 1 thì tự config, còn ko thì lúc cài đặt cần chọn folder để copy file vào đó.</li>\\r\\n        </ol>\\r\\n\\r\\n        <h3>Client</h3>\\r\\n        <ol>\\r\\n          <li class=\\\"not-start\\\">\\r\\n            Setting Machine Page\\r\\n            <ul>\\r\\n              <li>Chuyển phần config setting từ machine sang admin.</li>\\r\\n              <li>Chuyển từ alert sang warning bằng icon</li>\\r\\n              <li>Validate mức màu trước lúc dispense không cho phép dưới min. Nếu sau khi pha xong mà màu dưới min thì không cho nó pha.</li>\\r\\n            </ul>\\r\\n\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">\\r\\n            Adjust Canister Fill Page\\r\\n\\r\\n            <ul>\\r\\n              <li>Bỏ phần set 100%</li>\\r\\n              <li>Thêm vào số điều chỉnh, ví dụ bình tỉ lệ thực là 1000ml, số lượng thực chỉ có 95% (5% dính ở đáy bình chẳng hạn)</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">Formula Page\\r\\n            <ul>\\r\\n              <li>Thêm Base cho phần filter</li>\\r\\n              <li class=\\\"done\\\">Add back navigator</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">\\r\\n            Print function\\r\\n\\r\\n            <ul>\\r\\n              <li>Show custom data</li>\\r\\n              <li>Show dung tích, ngày giờ</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"not-start\\\">\\r\\n            Dispense manual\\r\\n\\r\\n            <ul>\\r\\n              <li>Show custom data</li>\\r\\n              <li>Show dung tích, ngày giờ</li>\\r\\n            </ul>\\r\\n          </li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        How to use this app...\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        Content .....\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        How to use this app...\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        Content .....\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        How to use this app...\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        Content .....\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        How to use this app...\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        Content .....\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".not-start {\\n  color: grey; }\\n\\n.in-progress {\\n  color: orange; }\\n\\n.done {\\n  color: darkgreen; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9oZWxwL3F1ZXN0aW9uL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxoZWxwXFxxdWVzdGlvblxccXVlc3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7RUFDRSxjQUFhLEVBQ2Q7O0FBRUQ7RUFDRSxpQkFBZ0IsRUFDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2hlbHAvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm90LXN0YXJ0e1xyXG4gIGNvbG9yOiBncmV5O1xyXG59XHJcblxyXG4uaW4tcHJvZ3Jlc3N7XHJcbiAgY29sb3I6IG9yYW5nZTtcclxufVxyXG5cclxuLmRvbmV7XHJcbiAgY29sb3I6IGRhcmtncmVlbjtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  templateUrl: './question.component.html',\r\n  styleUrls: ['./question.component.scss']\r\n})\r\nexport class QuestionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Structure HTML & Boostrap</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Overview\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p>Cái nào cùng vậy, đã là web thì kiểu gì cũng phải xài boostrap. Boostrap không những giúp code nhanh hơn, mà hơn\\r\\n        hết, cái thư viện css và js của nó rất đẹp. Nên nếu biết sử dụng đúng cách thì ko cần biết về css cũng có thể làm được.</p>\\r\\n\\r\\n        <p>Bản chất của boostrap là quy định các template. Chỉ cần khai báo đúng template là đc. Riêng vấn đề này đòi hỏi ta phải làm\\r\\n        nhiều mới nhớ được.</p>\\r\\n\\r\\n        <p>Đối với bất cứ việc design một cái website nào cũng vậy, theo yêu cầu khách hàng, ta nên search trên mạng để tìm 1 cái layout cho hợp lý\\r\\n        sau đó mang về chỉnh sửa lại css custom theo ý ta muốn. Tất nhiên, để custom thì chắc chắn phải biết 1 chút về css và các layout của boostrap rồi, đúng ko?</p>\\r\\n\\r\\n        <p>Boostrap ra đời lâu rồi. Cái này xài boostrap 4. Ngày xưa boostrap chạy với js, thì giờ ta phải sửa lại để nó cũng chạy với angula.</p>\\r\\n\\r\\n        <p>Trong cái này, sẽ bỏ vào từ từ các template của angular và boostrap.</p>\\r\\n\\r\\n        <p>Đối với việc chuyển từ js sang angular, nó phức tạp hơn những gì ta tưởng. Tuy nhiên, may mắn thay là đã có những plugin (library) hỗ trợ\\r\\n          ta làm cái đó. Bài viết này chủ yếu list các trường hợp như vậy thôi</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Boostrap modal\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p>Boostrap modal là 1 component thường gặp nhất. Nó show các boostbox nhưu confirm, alert, và các modal để tương tác.</p>\\r\\n\\r\\n        <p>Hướng dãn thêm boostrap modal vào, ta xem ở đây <a href=\\\"http://eriktufvesson.github.io/ngbootbox/\\\" target=\\\"_blank\\\">Click to view</a> </p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVscC9zdHJ1Y3R1cmUvc3RydWN0dXJlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-structure',\r\n  templateUrl: './structure.component.html',\r\n  styleUrls: ['./structure.component.scss']\r\n})\r\nexport class StructureComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  create works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXNzdWUvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport {IssueService} from \"../../../services/issues/issue.service\";\r\n\r\n@Component({\r\n  selector: 'app-create',\r\n  templateUrl: './create.component.html',\r\n  styleUrls: ['./create.component.scss']\r\n})\r\nexport class CreateComponent implements OnInit {\r\n\r\n  constructor(private issueService: IssueService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  edit works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXNzdWUvZWRpdC9lZGl0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {IssueService} from \"../../../services/issues/issue.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss']\r\n})\r\nexport class EditComponent implements OnInit {\r\n\r\n  constructor(private issueService: IssueService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  list works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaXNzdWUvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {IssueService} from \"../../../services/issues/issue.service\";\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n  constructor(private issueService: IssueService) { }\r\n\r\n  ngOnInit() {\r\n    // this.issueService.getIssues().subscribe(response => this.videos = response);\r\n    // this.issueService.getIssues().subscribe(issues => {\r\n    //   console.log(issues);\r\n    // });\r\n  }\r\n\r\n}\r\n","module.exports = \"<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">\\r\\n    <a href=\\\"index.html\\\">Dashboard</a>\\r\\n  </li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Sample</li>\\r\\n</ol>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss']\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<footer class=\\\"sticky-footer\\\">\\r\\n  <div class=\\\"container my-auto\\\">\\r\\n    <div class=\\\"copyright text-center my-auto\\\">\\r\\n      <span>Copyright © VietPower 2018</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand static-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"page-logo background_logo\\\" style=\\\"width: 249px; height: 51px;\\\">\\r\\n      <a class=\\\"navbar-brand mr-1\\\" [routerLink]=\\\"['../dashboard']\\\">\\r\\n        <!--<img src=\\\"/assets/images/logo.png\\\" width=\\\"249\\\" height=\\\"51\\\"/>-->\\r\\n      </a>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"page-menu\\\">\\r\\n      <app-navigation></app-navigation>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \".navbar.navbar-expand {\\n  position: fixed;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  transition: all 0.5s;\\n  z-index: 997;\\n  background: #fff;\\n  box-shadow: -21.213px 21.213px 30px 0px rgba(158, 158, 158, 0.3);\\n  display: flex;\\n  justify-content: space-between !important;\\n  margin-bottom: 10px; }\\n  .navbar.navbar-expand .page-menu {\\n    float: right; }\\n  .background_logo {\\n  background: url('/./assets/images/logo.png') center center/100% 100% no-repeat;\\n  display: inline-block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvaGVhZGVyL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxsYXlvdXRcXGhlYWRlclxcaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWU7RUFDZixRQUFPO0VBQ1AsT0FBTTtFQUNOLFNBQVE7RUFDUixxQkFBb0I7RUFDcEIsYUFBWTtFQUNaLGlCQUFnQjtFQUVoQixpRUFBZ0U7RUFFaEUsY0FBYTtFQUNiLDBDQUF5QztFQUN6QyxvQkFBbUIsRUFPcEI7RUFwQkQ7SUFpQkksYUFBWSxFQUNiO0VBSUg7RUFDRSwrRUFBNEU7RUFDNUUsc0JBQW9CLEVBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIubmF2YmFyLWV4cGFuZHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgbGVmdDogMDtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXM7XHJcbiAgei1pbmRleDogOTk3O1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgLy90cmFuc2l0aW9uOiBhbGwgMC41cztcclxuICBib3gtc2hhZG93OiAtMjEuMjEzcHggMjEuMjEzcHggMzBweCAwcHggcmdiYSgxNTgsIDE1OCwgMTU4LCAwLjMpO1xyXG4gIC8vXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG5cclxuXHJcbiAgLnBhZ2UtbWVudXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICB9XHJcblxyXG59XHJcblxyXG4uYmFja2dyb3VuZF9sb2dvIHtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJy9hc3NldHMvaW1hZ2VzL2xvZ28ucG5nJykgY2VudGVyIGNlbnRlci8xMDAlIDEwMCUgbm8tcmVwZWF0O1xyXG4gIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<ul class=\\\"navbar-nav navigation-bar\\\">\\r\\n\\r\\n  <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"currentUser != null && currentUser.role.roleName == USER_ROLE.SHOP\\\">\\r\\n    <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"user-dropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"updateCurrentMode(userMode)\\\" [attr.aria-expanded]=\\\"currentMode == userMode\\\" aria-controls=\\\"collapseExample\\\">\\r\\n      <i class=\\\"fas fa-users-cog\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">User Setting</span>\\r\\n    </a>\\r\\n\\r\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"setting-dropdown\\\" [ngbCollapse]=\\\"currentMode != userMode\\\" (click)=\\\"updateCurrentMode('hide')\\\">\\r\\n      <!--<a class=\\\"dropdown-item\\\" >User Manager</a>-->\\r\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/customer']\\\">Customer Manager</a>\\r\\n    </div>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"currentUser != null && (currentUser.role.roleName == USER_ROLE.SHOP || currentUser.role.roleName == USER_ROLE.ADMIN)\\\">\\r\\n    <a class=\\\"nav-link dropdown-toggle\\\" id=\\\"setting-dropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"updateCurrentMode(settingMode)\\\" [attr.aria-expanded]=\\\"currentMode == settingMode\\\" aria-controls=\\\"collapseExample\\\">\\r\\n      <i class=\\\"fas fa-cogs\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Setting</span>\\r\\n    </a>\\r\\n\\r\\n    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"setting-dropdown\\\" [ngbCollapse]=\\\"currentMode != settingMode\\\" (click)=\\\"updateCurrentMode('hide')\\\">\\r\\n      <h6 class=\\\"dropdown-header\\\">Metadata Setting:</h6>\\r\\n\\r\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/colorant']\\\">Colorant</a>\\r\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/base']\\\">Base</a>\\r\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/product']\\\">Product</a>\\r\\n      <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/collection']\\\">Collection</a>\\r\\n\\r\\n      <ng-container *ngIf=\\\"currentUser != null && currentUser.role.roleName == USER_ROLE.SHOP\\\">\\r\\n        <div class=\\\"dropdown-divider\\\"></div>\\r\\n\\r\\n        <h6 class=\\\"dropdown-header\\\">Machine Setting:</h6>\\r\\n        <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/machine']\\\">Machine</a>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"updateCurrentMode('formula')\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['../dashboard/formula']\\\">\\r\\n      <i class=\\\"fas fa-palette\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Formula</span></a>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['../dashboard/job-status']\\\">\\r\\n      <i class=\\\"fas fa-file-contract\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Job status</span>\\r\\n    </a>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"updateCurrentMode('maintenance')\\\" *ngIf=\\\"currentUser != null && (currentUser.role.roleName == USER_ROLE.ADMIN && currentUser.role.roleName == USER_ROLE.MAINTENANCE)\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['../dashboard/maintenance']\\\">\\r\\n      <i class=\\\"fas fa-hammer\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Maintenance</span></a>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"updateCurrentMode('question')\\\">\\r\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['../dashboard/question']\\\">\\r\\n      <i class=\\\"fas fa-question-circle\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Help</span></a>\\r\\n  </li>\\r\\n\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"logOut()\\\">\\r\\n    <a class=\\\"nav-link\\\">\\r\\n      <i class=\\\"fas fa-sign-out-alt\\\"></i>\\r\\n      <span class=\\\"menu-item\\\">Logout</span></a>\\r\\n  </li>\\r\\n\\r\\n  <!--<li class=\\\"nav-item dropdown\\\">-->\\r\\n    <!--<a class=\\\"nav-link dropdown-toggle\\\" id=\\\"developer-dropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" (click)=\\\"updateCurrentMode(devMode)\\\" [attr.aria-expanded]=\\\"currentMode == devMode\\\" aria-controls=\\\"collapseExample\\\">-->\\r\\n      <!--<i class=\\\"fab fa-dev\\\"></i>-->\\r\\n      <!--<span class=\\\"menu-item\\\">Developer</span>-->\\r\\n    <!--</a>-->\\r\\n\\r\\n    <!--<div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"developer-dropdown\\\" [ngbCollapse]=\\\"currentMode != devMode\\\" (click)=\\\"updateCurrentMode('hide')\\\">-->\\r\\n      <!--<h6 class=\\\"dropdown-header\\\">Document :</h6>-->\\r\\n      <!--<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/help/overview']\\\">Overview</a>-->\\r\\n      <!--<div class=\\\"dropdown-divider\\\"></div>-->\\r\\n      <!--<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/help/language']\\\">Language</a>-->\\r\\n      <!--<a class=\\\"dropdown-item\\\" [routerLink]=\\\"['../dashboard/help/boostrap']\\\">Boostrap Template</a>-->\\r\\n    <!--</div>-->\\r\\n  <!--</li>-->\\r\\n</ul>\\r\\n\"","module.exports = \".navigation-bar .nav-item {\\n  margin-left: 25px;\\n  color: #00417b;\\n  text-align: center; }\\n  .navigation-bar .nav-item > .nav-link {\\n    color: #00417b; }\\n  .navigation-bar .nav-item > .nav-link > i.fas {\\n      font-size: 42px;\\n      color: #00417b; }\\n  .navigation-bar .nav-item.dropdown .dropdown-toggle::after {\\n    display: none; }\\n  .navigation-bar span.menu-item {\\n  font-size: 14px !important;\\n  white-space: nowrap;\\n  display: block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvbmF2aWdhdGlvbi9YOlxcd3NfbGVhcm5pbmdcXGNsaWVudHZpZXRwb3dlci9zcmNcXGFwcFxcY29tcG9uZW50c1xcbGF5b3V0XFxuYXZpZ2F0aW9uXFxuYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksa0JBQWlCO0VBQ2pCLGVBQWU7RUFDZixtQkFBa0IsRUFnQm5CO0VBcEJIO0lBT00sZUFBZSxFQU1oQjtFQWJMO01BVVEsZ0JBQWU7TUFDZixlQUFlLEVBQ2hCO0VBWlA7SUFpQlEsY0FBYSxFQUNmO0VBbEJOO0VBc0JJLDJCQUEwQjtFQUMxQixvQkFBbUI7RUFDbkIsZUFBYyxFQUVmIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmlnYXRpb24tYmFye1xyXG4gIC5uYXYtaXRlbXtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgY29sb3I6ICAjMDA0MTdiO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgID4gLm5hdi1saW5re1xyXG4gICAgICBjb2xvcjogICMwMDQxN2I7XHJcblxyXG4gICAgICA+IGkuZmFze1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNDJweDtcclxuICAgICAgICBjb2xvcjogICMwMDQxN2I7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmRyb3Bkb3due1xyXG4gICAgIC5kcm9wZG93bi10b2dnbGU6OmFmdGVye1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICBzcGFuLm1lbnUtaXRlbSB7XHJcbiAgICBmb250LXNpemU6IDE0cHggIWltcG9ydGFudDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgfVxyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from '../../../services/user/user.service';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {USER_ROLE} from '../../../models/constant';\r\nimport {UserModel} from '../../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  USER_ROLE = USER_ROLE;\r\n  currentUser: UserModel | null;\r\n  currentMode = '';\r\n\r\n  userMode = 'user';\r\n  settingMode = 'setting';\r\n  devMode = 'dev';\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.userService.getLoginUser();\r\n\r\n    if (this.currentUser == null) {\r\n      this.router.navigate([`../login`]);\r\n    }\r\n  }\r\n\r\n  updateCurrentMode(selectMode: string | null) {\r\n    if (this.currentMode === selectMode) {\r\n      this.currentMode = '';\r\n    } else {\r\n      this.currentMode = selectMode;\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    this.userService.logOut();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-login mx-auto mt-5\\\">\\r\\n    <div class=\\\"card-header\\\">Reset Password</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <div class=\\\"text-center mb-4\\\">\\r\\n        <h4>Forgot your password?</h4>\\r\\n        <p>Enter your email address and we will send you instructions on how to reset your password.</p>\\r\\n      </div>\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-label-group\\\">\\r\\n            <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email address\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\r\\n            <label for=\\\"inputEmail\\\">Enter email address</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <a class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['../login']\\\">Reset Password</a>\\r\\n      </form>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <a class=\\\"d-block small mt-3\\\" [routerLink]=\\\"['../register']\\\">Register an Account</a>\\r\\n        <a class=\\\"d-block small\\\" [routerLink]=\\\"['../login']\\\">Login Page</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4tcGFnZS9mb3Jnb3RwYXNzd29yZC9mb3Jnb3RwYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgotpassword',\r\n  templateUrl: './forgotpassword.component.html',\r\n  styleUrls: ['./forgotpassword.component.scss']\r\n})\r\nexport class ForgotpasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-login mx-auto mt-5\\\">\\r\\n    <div class=\\\"card-header\\\">Login</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-label-group\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"inputUserName\\\" [(ngModel)]=\\\"userName\\\" class=\\\"form-control\\\" placeholder=\\\"UserName\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            <label for=\\\"inputUserName\\\">Email address</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-label-group\\\">\\r\\n            <input type=\\\"password\\\" id=\\\"inputPassword\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"required\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n            <label for=\\\"inputPassword\\\">Password</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"checkbox\\\">\\r\\n            <label>\\r\\n              <input type=\\\"checkbox\\\" value=\\\"remember-me\\\">\\r\\n              Remember Password\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <a (click)=\\\"login()\\\"><button class=\\\"btn btn-primary btn-block\\\">Login</button></a>\\r\\n      </form>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <a class=\\\"d-block small mt-3\\\" [routerLink]=\\\"['../register']\\\">Register an Account</a>\\r\\n        <a class=\\\"d-block small\\\"      [routerLink]=\\\"['../forgot-password']\\\">Forgot Password?</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".login-component {\\n  width: 800px;\\n  margin: 80px auto;\\n  font-size: 20px; }\\n  .login-component .login-container {\\n    display: flex;\\n    flex-direction: column; }\\n  .login-component .login-container > * {\\n      width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1wYWdlL2xvZ2luL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxsb2dpbi1wYWdlXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFZO0VBQ1osa0JBQWlCO0VBQ2pCLGdCQUFlLEVBVWhCO0VBYkQ7SUFNSSxjQUFhO0lBQ2IsdUJBQXNCLEVBS3ZCO0VBWkg7TUFVTSxZQUFXLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xvZ2luLXBhZ2UvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29tcG9uZW50e1xyXG4gIHdpZHRoOiA4MDBweDtcclxuICBtYXJnaW46IDgwcHggYXV0bztcclxuICBmb250LXNpemU6IDIwcHg7XHJcblxyXG4gIC5sb2dpbi1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblxyXG4gICAgPiAqe1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from '../../../services/user/user.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  userName: string = null;\r\n  password: string = null;\r\n\r\n  constructor(private userService: UserService, private router: Router) {\r\n  }\r\n\r\n  // @ContentChild(MatFormFieldControl) _control: MatFormFieldControl<any>;\r\n  // @ViewChild(MatFormField) _matFormField: MatFormField;\r\n\r\n  ngOnInit() {\r\n    this.userService.clearData();\r\n  }\r\n\r\n  login() {\r\n    this.userService.clearData();\r\n    this.userService.login(this.userName, this.password);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"card card-register mx-auto mt-5\\\">\\r\\n    <div class=\\\"card-header\\\">Register an Account</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-label-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"firstName\\\" class=\\\"form-control\\\" placeholder=\\\"First name\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\">\\r\\n                <label for=\\\"firstName\\\">First name</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-label-group\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Last name\\\" required=\\\"required\\\">\\r\\n                <label for=\\\"lastName\\\">Last name</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-label-group\\\">\\r\\n            <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"required\\\">\\r\\n            <label for=\\\"inputEmail\\\">Email address</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-label-group\\\">\\r\\n                <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"required\\\">\\r\\n                <label for=\\\"inputPassword\\\">Password</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <div class=\\\"form-label-group\\\">\\r\\n                <input type=\\\"password\\\" id=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm password\\\" required=\\\"required\\\">\\r\\n                <label for=\\\"confirmPassword\\\">Confirm password</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <a class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['../login']\\\">Register</a>\\r\\n      </form>\\r\\n\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <a class=\\\"d-block small mt-3\\\" [routerLink]=\\\"['../login']\\\">Login Page</a>\\r\\n        <a class=\\\"d-block small\\\" [routerLink]=\\\"['../forgot-password']\\\">Forgot Password?</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4tcGFnZS9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Machine Setting</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"machine != null\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Colorant Machine {{ machine.name + '(' + machine.code + ')'}}\\r\\n\\r\\n        <ng-container *ngIf=\\\"! openSetting\\\">\\r\\n          <button class=\\\"close\\\" (click)=\\\"openSettingMachine()\\\"><i class=\\\"fas fa-sliders-h\\\"></i></button>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"openSetting\\\">\\r\\n          <button class=\\\"close\\\" (click)=\\\"closeSettingMachine()\\\"><i class=\\\"fas fa-window-close\\\"></i></button>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"machine-colourant-group\\\" [attr.actionType]=\\\"openSetting ? 'open-setting': ''\\\">\\r\\n          <div class=\\\"machine-background\\\">\\r\\n            <ng-container *ngIf=\\\"openSetting == true\\\">\\r\\n              <div class=\\\"machine-background-setting\\\">\\r\\n                <mat-slider class=\\\"machine-range-slider\\\" [tickInterval]=\\\"100 / 20\\\" [max]=\\\"maxQuantity\\\" [min]=\\\"0\\\" [step]=\\\"50\\\" [(ngModel)]=\\\"warningQuantity\\\" [vertical]=\\\"true\\\" [thumbLabel]=\\\"true\\\" (change)=\\\"updateMachineDataSlider('warning')\\\"></mat-slider>\\r\\n                <mat-slider class=\\\"machine-range-slider\\\" [tickInterval]=\\\"100 / 20\\\" [max]=\\\"maxQuantity\\\" [min]=\\\"0\\\" [step]=\\\"50\\\" [(ngModel)]=\\\"minQuantity\\\" [vertical]=\\\"true\\\" [thumbLabel]=\\\"true\\\" (change)=\\\"updateMachineDataSlider('min')\\\"></mat-slider>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n\\r\\n            <span class=\\\"machine-colourant-max-range\\\" [ngStyle]=\\\"{'height': '100%'}\\\"><span class=\\\"step-label\\\">{{maxQuantity}}</span></span>\\r\\n            <span class=\\\"machine-colourant-warning-range\\\" [ngStyle]=\\\"{'height': (warningQuantity / maxQuantity) * 100 + '%'}\\\"><span class=\\\"step-label\\\">{{warningQuantity}}</span></span>\\r\\n            <span class=\\\"machine-colourant-min-range\\\" [ngStyle]=\\\"{'height': (minQuantity / maxQuantity) * 100 + '%'}\\\"><span class=\\\"step-label\\\">{{minQuantity}}</span></span>\\r\\n            <span class=\\\"machine-colourant-zero-range\\\" [ngStyle]=\\\"{'height': '0%'}\\\"><span class=\\\"step-label\\\">0</span></span>\\r\\n          </div>\\r\\n\\r\\n          <ng-container *ngFor=\\\"let machineColourant of listMachineColourant\\\">\\r\\n            <div class=\\\"machine-colourant-item\\\" (click)=\\\"selectMachineColourant(machineColourant.colourant.colourantId)\\\">\\r\\n              <span *ngIf=\\\"selectedMachineColourant != null && selectedMachineColourant.colourant.colourantId == machineColourant.colourant.colourantId\\\" class=\\\"selected-colourant-bgr\\\"></span>\\r\\n              <span class=\\\"machine-colourant-bgr\\\">\\r\\n                <span class=\\\"machine-colourant-current-range\\\" [ngStyle]=\\\"{'height': (machineColourant.quantity / maxQuantity) * 100 + '%', 'background-color': machineColourant.colourant.rbgHex, 'border': '1px solid #' + machineColourant.colourant.rbgHex}\\\"></span>\\r\\n              </span>\\r\\n              <span class=\\\"colourant-name\\\">{{machineColourant.colourant.colourantName}}</span>\\r\\n              <span class=\\\"colourant-code\\\">{{machineColourant.colourant.colourantCode}}</span>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n      </div>\\r\\n      <ng-container *ngIf=\\\"minQuantity != initMinQuantity || warningQuantity != initWarningQuantity\\\">\\r\\n        <div class=\\\"card-footer\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"updateSettingMachine()\\\">Update</button>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"errorType != null\\\">\\r\\n  <pp-modal id=\\\"warning-colourants-machine-modal\\\" class=\\\"modal warning-colourants-machine-modal\\\">\\r\\n    <div class=\\\"modal-content\\\" [attr.type]=\\\"errorType\\\" >\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">{{errorType}}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('warning-colourants-machine-modal')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{errorMessage}}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeModal('warning-colourants-machine-modal')\\\">Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"selectedMachineColourant != null\\\">\\r\\n  <pp-modal id=\\\"view-selected-colourant-machine-modal\\\" class=\\\"modal machine-colourant-single-item\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Canister Refill</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('view-selected-colourant-machine-modal')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n            <div class=\\\"machine-colorant-slider-group\\\">\\r\\n              <mat-slider class=\\\"machine-colourant-slider\\\" [tickInterval]=\\\"maxQuantity / 20\\\" [max]=\\\"maxQuantity\\\" [min]=\\\"0\\\" [step]=\\\"1\\\" [(ngModel)]=\\\"updateAmount\\\" [vertical]=\\\"true\\\" [thumbLabel]=\\\"true\\\" (change)=\\\"updateAmountBySlider()\\\"></mat-slider>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-2 col-md-2 col-sm-3 col-xs-3\\\">\\r\\n            <div class=\\\"machine-colourant-group\\\">\\r\\n              <div class=\\\"machine-background\\\">\\r\\n                <span class=\\\"machine-colourant-max-range\\\" [ngStyle]=\\\"{'height': '100%'}\\\"><span class=\\\"step-label\\\">{{maxQuantity}}</span></span>\\r\\n                <span class=\\\"machine-colourant-warning-range\\\" [ngStyle]=\\\"{'height': (minQuantity / maxQuantity) * 100 + '%'}\\\"><span class=\\\"step-label\\\">{{minQuantity}}</span></span>\\r\\n                <span class=\\\"machine-colourant-min-range\\\" [ngStyle]=\\\"{'height': '0%'}\\\"><span class=\\\"step-label\\\">0</span></span>\\r\\n              </div>\\r\\n              <div class=\\\"machine-colourant-item\\\">\\r\\n                <span class=\\\"machine-colourant-bgr\\\">\\r\\n                  <span class=\\\"machine-colourant-update-range\\\"  [ngStyle]=\\\"{'height': ((selectedMachineColourant.quantity + addedAmount) / maxQuantity) * 100 + '%', 'background-color': selectedMachineColourant.colourant.rbgHex, 'border': '1px solid #' + selectedMachineColourant.colourant.rbgHex}\\\"></span>\\r\\n                  <span class=\\\"machine-colourant-current-range\\\" [ngStyle]=\\\"{'height': (selectedMachineColourant.quantity / maxQuantity) * 100 + '%', 'background-color': selectedMachineColourant.colourant.rbgHex, 'border': '1px solid #' + selectedMachineColourant.colourant.rbgHex}\\\"></span>\\r\\n                </span>\\r\\n                <span class=\\\"colourant-name\\\">{{selectedMachineColourant.colourant.colourantName}}</span>\\r\\n                <span class=\\\"colourant-code\\\">{{selectedMachineColourant.colourant.colourantCode}}</span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-lg-8 col-md-8 col-sm-6 col-xs-6\\\">\\r\\n            <div class=\\\"machine-colourant-info form-detail\\\">\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Amount:</label>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <!--<input type=\\\"number\\\" [(ngModel)]=\\\"addedAmount\\\" class=\\\"form-control\\\" required=\\\"required\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"updateAddedAmount('amount')\\\">-->\\r\\n                    <input type=\\\"number\\\" [(ngModel)]=\\\"addedAmount\\\" class=\\\"form-control\\\" required=\\\"required\\\" [ngModelOptions]=\\\"{standalone: true}\\\" (change)=\\\"updateAddedAmount('amount')\\\">\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <span class=\\\"input-group-text\\\">ml</span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">\\r\\n\\r\\n                </label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  <button class=\\\"btn btn-dark\\\" (click)=\\\"fillByPercent(100);\\\">Fill to 100%</button>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Canister</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{selectedMachineColourant.colourant.colourantId}}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Component</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{selectedMachineColourant.colourant.colourantCode}}\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Current</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{selectedMachineColourant.quantity / 1000}} L\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Maximum</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{maxQuantity / 1000}} L\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Minimum</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{minQuantity / 1000}} L\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"row form-group\\\">\\r\\n                <label class=\\\"col-md-4 label-control\\\">Density</label>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                  {{selectedMachineColourant.colourant.density}} kg/L\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!--<div class=\\\"row form-group\\\">-->\\r\\n                <!--View Usage >>-->\\r\\n              <!--</div>-->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateAndSaving('view-selected-colourant-machine-modal')\\\">Update</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('view-selected-colourant-machine-modal')\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\"","module.exports = \".machine-colourant-group {\\n  margin: 30px 20px 50px 70px;\\n  position: relative;\\n  display: flex; }\\n  .machine-colourant-group[actiontype=\\\"open-setting\\\"] .machine-background {\\n    left: -25px; }\\n  .machine-colourant-group[actiontype=\\\"open-setting\\\"] .machine-background-setting {\\n    position: absolute;\\n    top: 0px;\\n    left: -10px;\\n    bottom: 0px; }\\n  .machine-colourant-group[actiontype=\\\"open-setting\\\"] .machine-background-setting .machine-range-slider {\\n      top: -8px;\\n      bottom: -8px;\\n      position: absolute; }\\n  .machine-colourant-group[actiontype=\\\"open-setting\\\"] .machine-colourant-min-range .step-label,\\n  .machine-colourant-group[actiontype=\\\"open-setting\\\"] .machine-colourant-warning-range .step-label {\\n    opacity: 0.8; }\\n  .machine-colourant-single-item .machine-colourant-group {\\n  margin: 0px; }\\n  .machine-colourant-single-item .machine-colourant-item {\\n  min-width: 60px; }\\n  .machine-colourant-single-item .machine-colourant-zero-range .step-label,\\n.machine-colourant-single-item .machine-colourant-min-range .step-label,\\n.machine-colourant-single-item .machine-colourant-warning-range .step-label,\\n.machine-colourant-single-item .machine-colourant-max-range .step-label {\\n  display: none; }\\n  .machine-background {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  bottom: 0px;\\n  right: 0px; }\\n  .machine-background .machine-colourant-zero-range,\\n  .machine-background .machine-colourant-min-range,\\n  .machine-background .machine-colourant-warning-range,\\n  .machine-background .machine-colourant-max-range {\\n    width: 100%;\\n    position: absolute;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    opacity: 0.5; }\\n  .machine-background .machine-colourant-zero-range .step-label,\\n    .machine-background .machine-colourant-min-range .step-label,\\n    .machine-background .machine-colourant-warning-range .step-label,\\n    .machine-background .machine-colourant-max-range .step-label {\\n      position: absolute;\\n      top: 0px;\\n      left: -5px;\\n      -webkit-transform: translate(-100%, -50%);\\n      transform: translate(-100%, -50%); }\\n  .machine-background .machine-colourant-zero-range {\\n    border-top: 1px dashed #333333; }\\n  .machine-background .machine-colourant-zero-range .step-label {\\n      color: #333333; }\\n  .machine-background .machine-colourant-warning-range {\\n    border-top: 1px dashed darkorange; }\\n  .machine-background .machine-colourant-warning-range .step-label {\\n      color: darkorange; }\\n  .machine-background .machine-colourant-min-range {\\n    border-top: 1px dashed red; }\\n  .machine-background .machine-colourant-min-range .step-label {\\n      color: red; }\\n  .machine-background .machine-colourant-max-range {\\n    border-top: 1px dashed green; }\\n  .machine-background .machine-colourant-max-range .step-label {\\n      color: green; }\\n  .machine-colorant-slider-group {\\n  padding-left: 20px; }\\n  .machine-colorant-slider-group .machine-colourant-slider {\\n    height: 416px;\\n    margin-top: -8px;\\n    padding: 8px; }\\n  .machine-colourant-item {\\n  width: 6.25%;\\n  display: inline-block;\\n  height: 400px;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  position: relative; }\\n  .machine-colourant-item .machine-colourant-bgr {\\n    position: absolute;\\n    top: 0px;\\n    bottom: 0px;\\n    left: 15px;\\n    right: 15px;\\n    border: 1px solid #333333; }\\n  .machine-colourant-item .machine-colourant-bgr .machine-colourant-update-range,\\n    .machine-colourant-item .machine-colourant-bgr .machine-colourant-current-range {\\n      position: absolute;\\n      display: inline-block;\\n      left: 0px;\\n      right: 0px;\\n      bottom: 0px;\\n      border-top: 1px solid #000000; }\\n  .machine-colourant-item .machine-colourant-bgr .machine-colourant-update-range {\\n      opacity: 0.5; }\\n  .machine-colourant-item .selected-colourant-bgr {\\n    position: absolute;\\n    outline: 2px solid #00417b;\\n    top: -15px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: -15px; }\\n  .machine-colourant-item .colourant-name {\\n    position: absolute;\\n    width: 100%;\\n    display: inline-block;\\n    -webkit-transform: rotate(-90deg);\\n            transform: rotate(-90deg);\\n    -webkit-transform-origin: left center;\\n            transform-origin: left center;\\n    left: 50%;\\n    bottom: 0px;\\n    white-space: nowrap; }\\n  .machine-colourant-item .colourant-code {\\n    font-weight: bold;\\n    font-size: 120%;\\n    position: absolute;\\n    bottom: 0px;\\n    left: 50%;\\n    -webkit-transform: translate(-50%, 45px);\\n            transform: translate(-50%, 45px); }\\n  .warning-colourants-machine-modal .modal-content[type=\\\"Warning\\\"] .modal-header,\\n.warning-colourants-machine-modal .modal-content[type=\\\"Warning\\\"] .modal-body {\\n  color: darkorange; }\\n  .warning-colourants-machine-modal .modal-content[type=\\\"Danger\\\"] .modal-header,\\n.warning-colourants-machine-modal .modal-content[type=\\\"Danger\\\"] .modal-body {\\n  color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnInit} from '@angular/core';\r\nimport {MachineService} from '../../../services/machine/machine.service';\r\nimport {MachineColourantModel, MachineModel} from '../../../models/user.model';\r\nimport {ColourantService} from '../../../services/colorant/colorant.service';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\nimport {StoreService} from '../../../services/store/store.service';\r\n\r\n@Component({\r\n  selector: 'app-machinesetting',\r\n  templateUrl: './machinesetting.component.html',\r\n  styleUrls: ['./machinesetting.component.scss']\r\n})\r\n\r\nexport class MachineSettingComponent implements OnInit {\r\n  minQuantity: number;\r\n  maxQuantity: number;\r\n  warningQuantity: number;\r\n  machine: MachineModel;\r\n  listMachineColourant: MachineColourantModel[];\r\n\r\n  selectedMachineColourant: MachineColourantModel = null;\r\n  currentAmount: number;\r\n  updateAmount: number;\r\n  addedAmount: number;\r\n  // addedAmountPercent: number;\r\n  openSetting: boolean;\r\n\r\n  initMinQuantity: number;\r\n  initWarningQuantity: number;\r\n\r\n  errorType: string;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private modalService: ModalService,\r\n    private machineService: MachineService,\r\n    private storeService: StoreService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.openSetting = false;\r\n    this.errorType = null;\r\n    this.errorMessage = null;\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    this.machine = this.storeService.getMachineData();\r\n\r\n    if (this.machine != null) {\r\n      this.minQuantity = this.machine.minQuantity;\r\n      this.maxQuantity = this.machine.maxQuantity;\r\n      this.warningQuantity = this.machine.warningQuantity;\r\n\r\n      this.initMinQuantity = this.machine.minQuantity;\r\n      this.initWarningQuantity = this.machine.warningQuantity;\r\n\r\n      this.machineService.fetchDataFromServer().subscribe((datas) => {\r\n        this.processListColourantData(datas, 'init');\r\n      });\r\n    }\r\n  }\r\n\r\n  processListColourantData(datas: any, type: string) {\r\n    this.listMachineColourant = datas;\r\n    this.selectedMachineColourant = null;\r\n    this.addedAmount = 0;\r\n    this.currentAmount = 0;\r\n\r\n    if (type === 'init') {\r\n      for (const item of this.listMachineColourant) {\r\n        if (this.errorType == null && item.quantity < this.initWarningQuantity) {\r\n          this.errorType = 'Warning';\r\n          this.errorMessage = 'Some colorants are low. Please add more!';\r\n        }\r\n\r\n        if (item.quantity < this.initMinQuantity) {\r\n          this.errorType = 'Danger';\r\n          this.errorMessage = 'Some colorants are low. Please add more!';\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (this.errorType != null && this.errorMessage != null) {\r\n        setTimeout(() => {\r\n          this.openModal('warning-colourants-machine-modal');\r\n        }, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectMachineColourant(colourantId: number) {\r\n    if (this.openSetting === false) {\r\n      const listFilter = this.listMachineColourant.filter((item: MachineColourantModel) => {\r\n        return item.colourant.colourantId === colourantId;\r\n      });\r\n\r\n      this.selectedMachineColourant = listFilter.length > 0 ? listFilter[0] : null;\r\n      this.currentAmount = this.selectedMachineColourant != null ? this.selectedMachineColourant.quantity : 0;\r\n      this.addedAmount = 0;\r\n      // this.addedAmountPercent = 0;\r\n      this.updateAmount = this.currentAmount + this.addedAmount;\r\n\r\n      setTimeout(() => {\r\n        this.openModal('view-selected-colourant-machine-modal');\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  updateAddedAmount(type: string) {\r\n    if (type === 'amount') {\r\n      this.updateAmount = this.currentAmount + this.addedAmount;\r\n\r\n      if (this.updateAmount > this.maxQuantity) {\r\n        this.updateAmount = this.maxQuantity;\r\n        this.addedAmount = this.maxQuantity - this.updateAmount;\r\n      } else if (this.updateAmount < 0) {\r\n        this.updateAmount = 0;\r\n        this.addedAmount = this.updateAmount - this.currentAmount;\r\n      }\r\n      // this.addedAmountPercent = (this.addedAmount / this.maxQuantity) * 100;\r\n    } else if (type === 'percent') {\r\n      // this.addedAmount = (this.addedAmountPercent - (this.currentAmount / this.maxQuantity)) * this.maxQuantity;\r\n    }\r\n  }\r\n\r\n  updateAmountBySlider() {\r\n    this.addedAmount = this.updateAmount - this.currentAmount;\r\n  }\r\n\r\n  openSettingMachine() {\r\n    this.openSetting = true;\r\n  }\r\n\r\n  closeSettingMachine() {\r\n    this.openSetting = false;\r\n    this.minQuantity = this.initMinQuantity;\r\n    this.warningQuantity = this.initWarningQuantity;\r\n  }\r\n\r\n  updateMachineDataSlider(type: string) {\r\n    if ('warning' === type) {\r\n      if (this.warningQuantity < this.minQuantity) {\r\n        this.warningQuantity = this.minQuantity;\r\n      }\r\n    } else if ('min' === type) {\r\n      if (this.minQuantity > this.warningQuantity) {\r\n        this.minQuantity = this.warningQuantity;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSettingMachine() {\r\n    this.machineService.updateSettingMachine(this.minQuantity, this.warningQuantity).subscribe((machineData) => {\r\n      this.machine = machineData;\r\n      this.minQuantity = machineData.minQuantity;\r\n      this.maxQuantity = machineData.maxQuantity;\r\n      this.warningQuantity = machineData.warningQuantity;\r\n\r\n      this.initMinQuantity = machineData.minQuantity;\r\n      this.initWarningQuantity = machineData.warningQuantity;\r\n      this.machineService.updateMachineLocal(this.machine);\r\n    });\r\n  }\r\n\r\n  fillByPercent(percent: number) {\r\n    const remainPercent = percent - (this.currentAmount / this.maxQuantity) * 100;\r\n    this.addedAmount = remainPercent / 100 * this.maxQuantity;\r\n    this.updateAmount = this.currentAmount + this.addedAmount;\r\n  }\r\n\r\n  updateAndSaving(id: string) {\r\n    this.machineService.updateColourantMachineData(this.machine, this.selectedMachineColourant.colourant, this.addedAmount)\r\n      .subscribe((datas) => {\r\n        this.processListColourantData(datas, 'update');\r\n        this.modalService.close(id);\r\n      });\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this.modalService.close(id);\r\n\r\n    this.errorType = null;\r\n    this.errorMessage = null;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Base Manager</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Base type\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th mat-sort-header=\\\"baseCode\\\">Base Code</th>\\r\\n              <th mat-sort-header=\\\"baseName\\\">Base Name</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let base of listBases\\\">\\r\\n              <td>{{base.baseCode}}</td>\\r\\n              <td>{{base.baseName}}</td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZy9iYXNlL2Jhc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {BaseService} from '../../../services/base/base.service';\r\nimport {Sort} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-base',\r\n  templateUrl: './base.component.html',\r\n  styleUrls: ['./base.component.scss']\r\n})\r\n\r\nexport class BaseComponent implements OnInit {\r\n\r\n  listBases: Array<any>;\r\n\r\n  constructor(private baseService: BaseService) { }\r\n\r\n  ngOnInit() {\r\n    this.fletchData();\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    this.listBases = this.listBases.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      return compare(a.baseCode, b.baseCode, isAsc);\r\n    });\r\n\r\n    function compare(a: string | string, b: string | string, isAsc) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  fletchData() {\r\n    this.baseService.getListBaseFromServer().subscribe((data: any) => {\r\n      this.listBases = data;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Collection\\r\\n\\r\\n        <button class=\\\"close\\\" (click)=\\\"addCollection()\\\"><i class=\\\"fas fa-plus-square\\\"></i></button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <ng-container *ngIf=\\\"responseMessage != null && responseMessage.type == 'success'\\\">\\r\\n          <div class=\\\"alert alert-success\\\">\\r\\n            <button class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\" (click)=\\\"clearResponseMessage()\\\">&times;</button>\\r\\n            {{responseMessage.message}}\\r\\n          </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"responseMessage != null && responseMessage.type == 'error'\\\">\\r\\n          <div class=\\\"alert alert-danger\\\">\\r\\n            <button class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\" (click)=\\\"clearResponseMessage()\\\">&times;</button>\\r\\n            {{responseMessage.message}}\\r\\n          </div>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th mat-sort-header=\\\"collectionName\\\">Collection Name</th>\\r\\n              <th mat-sort-header=\\\"description\\\">Description</th>\\r\\n              <th>Created Date</th>\\r\\n              <th>Created By</th>\\r\\n              <th class=\\\"text-center\\\">Action</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let item of sortedData\\\">\\r\\n              <td>{{item.collectionName}}</td>\\r\\n              <td>{{item.description}}</td>\\r\\n              <td>{{item.createdDate | date: 'dd/MM/yyyy'}}</td>\\r\\n              <td>\\r\\n                <p *ngIf=\\\"item.machine == null\\\">System</p>\\r\\n                <p *ngIf=\\\"item.machine != null\\\">Me</p>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <ng-container *ngIf=\\\"item.machine != null && item.machine.machineId != null && item.machine.machineId > 0\\\">\\r\\n                  <button mat-raised-button\\r\\n                          matTooltip=\\\"Edit Collection\\\"\\r\\n                          aria-label=\\\"Edit Collection\\\"\\r\\n                          (click)=\\\"viewCollection(item.collectionId)\\\">\\r\\n                          <i class=\\\"fas fa-edit\\\"></i>\\r\\n                  </button>\\r\\n\\r\\n                  <span class=\\\"vertical-separate-line\\\">&nbsp;</span>\\r\\n\\r\\n                  <button mat-raised-button\\r\\n                          matTooltip=\\\"Delete Collection\\\"\\r\\n                          aria-label=\\\"Delete Collection\\\"\\r\\n                          (click)=\\\"confirmDeleteCollection(item.collectionId)\\\">\\r\\n                    <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                  </button>\\r\\n                </ng-container>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"dbItem != null\\\">\\r\\n  <pp-modal id=\\\"view-detail-collection\\\" class=\\\"modal view-detail-collection\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">{{dbItem.collectionId > 0 ? 'Edit Collection':  'Add Collection'}}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('view-detail-collection')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form class=\\\"form form-horizontal form-detail\\\">\\r\\n          <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Collection Name</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.collectionName\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n\\r\\n                <ng-container *ngIf=\\\"errorValidation != null && errorValidation['collectionName'] != null\\\">\\r\\n                  <span class=\\\"error-label\\\">{{errorValidation['collectionName']}}</span>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Description</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <textarea [(ngModel)]=\\\"dbItem.description\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <input type=\\\"hidden\\\" [(ngModel)]=\\\"dbItem.collectionId\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('view-detail-collection')\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateOrSavingCollection()\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"collectionId != null && collectionId > 0\\\">\\r\\n  <pp-modal id=\\\"confirm-remove-collection-model\\\" class=\\\"modal confirm-remove-collection-model\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Confirm</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('confirm-remove-collection-model')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Do you want to delete this collection ?\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('view-detail-collection')\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteCollection(collectionId)\\\">Ok</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\"","module.exports = \".view-detail-collection .modal-dialog {\\n  width: 800px !important;\\n  max-width: 800px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5nL2NvbGxlY3Rpb24vWDpcXHdzX2xlYXJuaW5nXFxjbGllbnR2aWV0cG93ZXIvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHNldHRpbmdcXGNvbGxlY3Rpb25cXGNvbGxlY3Rpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSx3QkFBdUI7RUFDdkIsNEJBQTJCLEVBQzVCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5nL2NvbGxlY3Rpb24vY29sbGVjdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aWV3LWRldGFpbC1jb2xsZWN0aW9ue1xyXG4gIC5tb2RhbC1kaWFsb2d7XHJcbiAgICB3aWR0aDogODAwcHggIWltcG9ydGFudDtcclxuICAgIG1heC13aWR0aDogODAwcHggIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuIl19 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\nimport {CollectionService} from '../../../services/collection/collection.service';\r\nimport {CollectionModel} from '../../../models/collection';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\nimport {MachineService} from '../../../services/machine/machine.service';\r\nimport {MachineModel, ResponseMessageModel} from '../../../models/user.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-collection',\r\n  templateUrl: './collection.component.html',\r\n  styleUrls: ['./collection.component.scss']\r\n})\r\nexport class CollectionComponent implements OnInit {\r\n  machine: MachineModel = null;\r\n  collectionId: number = null;\r\n  dbItem: CollectionModel = null;\r\n  collectionCode: string = null;\r\n  collectionName: string = null;\r\n\r\n  listItems: Array<any>;\r\n  sortedData: CollectionModel[] = null;\r\n  responseMessage: ResponseMessageModel = null;\r\n  errorValidation: any;\r\n\r\n  constructor(private collectionService: CollectionService, private modalService: ModalService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.listItems.slice();\r\n\r\n    if (! sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'collectionName': return compare(a.collectionName, b.collectionName, isAsc);\r\n        case 'description': return compare(a.description, b.description, isAsc);\r\n        case 'createdDate': return compare(a.createdDate, b.createdDate, isAsc);\r\n        case 'createBy': return compare(a.createBy == null ? 0 : 1, b.createBy == null ? 0 : 1, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  fetchData() {\r\n    this.collectionService.getListItems().subscribe((data: any) => {\r\n      this.listItems = data;\r\n      this.sortedData = this.listItems;\r\n    });\r\n  }\r\n\r\n  addCollection(): void {\r\n    this.dbItem = new CollectionModel();\r\n\r\n    setTimeout(() => {\r\n      this.openModal('view-detail-collection');\r\n    }, 100);\r\n  }\r\n\r\n  viewCollection(collectionId: number): void {\r\n    this.collectionService.findById(collectionId).subscribe((data: any) => {\r\n      this.dbItem = data;\r\n      setTimeout(() => {\r\n        this.openModal('view-detail-collection');\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  confirmDeleteCollection(collectionId) {\r\n    this.collectionId = collectionId;\r\n\r\n    setTimeout(() => {\r\n      this.openModal('confirm-remove-collection-model');\r\n    }, 100);\r\n  }\r\n\r\n  deleteCollection(collectionId: number): void {\r\n    this.collectionService.deleteCollection(collectionId).subscribe((data: any) => {\r\n      this.responseMessage = data;\r\n      this.collectionId = null;\r\n      this.closeModal('confirm-remove-collection-model');\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  updateOrSavingCollection(): void {\r\n    const errorData = this.validateDataBeforeSubmit();\r\n\r\n    if (!errorData.hasError) {\r\n      this.collectionService.updateOrSavingCollection(this.dbItem).subscribe((data: any) => {\r\n        this.dbItem = data;\r\n        this.closeModal('view-detail-collection');\r\n        this.dbItem = null;\r\n        this.fetchData();\r\n      });\r\n    } else {\r\n      this.errorValidation = errorData.mapErrors;\r\n    }\r\n  }\r\n\r\n  validateDataBeforeSubmit() {\r\n    let hasError = false;\r\n    const mapErrors = {};\r\n\r\n    if (this.dbItem.collectionName == null || this.dbItem.collectionName.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['collectionName'] = 'Please enter the collection name!';\r\n    }\r\n\r\n    return {\r\n      hasError: hasError, mapErrors: mapErrors\r\n    };\r\n  }\r\n\r\n  clearResponseMessage(): void {\r\n    this.responseMessage = null;\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this.modalService.close(id);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Colorant Manager</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\" ng-init=\\\"testInput='value'\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Colorant\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th mat-sort-header=\\\"colourantCode\\\">Colourant Code</th>\\r\\n              <th mat-sort-header=\\\"colourantName\\\">Colourant Name</th>\\r\\n              <th mat-sort-header=\\\"density\\\">Density</th>\\r\\n              <th mat-sort-header=\\\"pricePerUnit\\\">Price Per Unit</th>\\r\\n              <th mat-sort-header=\\\"surcharge\\\">Surcharge</th>\\r\\n              <th>Color</th>\\r\\n              <th>Kind</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let colorant of sortedData\\\">\\r\\n              <td>{{colorant.colourantCode}}</td>\\r\\n              <td>{{colorant.colourantName}}</td>\\r\\n              <td>{{colorant.density}}</td>\\r\\n              <td>{{colorant.pricePerUnit}}</td>\\r\\n              <td>{{colorant.surcharge}}</td>\\r\\n              <td><span [ngStyle]=\\\"{'background': colorant.rbgHex, 'display': 'inline-block', 'width': '30px', 'height': '30px', 'border': '1px solid #333'}\\\"></span></td>\\r\\n              <td>{{colorant.kind}}</td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".mat-form-field {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zZXR0aW5nL2NvbG9yYW50L1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxzZXR0aW5nXFxjb2xvcmFudFxcY29sb3JhbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFXLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NldHRpbmcvY29sb3JhbnQvY29sb3JhbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\nimport {ColourantService} from '../../../services/colorant/colorant.service';\r\nimport {ColorantModel} from '../../../models/colorant';\r\n\r\n@Component({\r\n  selector: 'app-colorant',\r\n  templateUrl: './colorant.component.html',\r\n  styleUrls: ['./colorant.component.scss']\r\n})\r\n\r\nexport class ColorantComponent implements OnInit {\r\n  code: string = null;\r\n  name: string = null;\r\n\r\n  sortedData: ColorantModel[];\r\n  dbItems: ColorantModel[];\r\n\r\n  constructor(private colourantService: ColourantService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.code = null;\r\n    this.name = null;\r\n    this.filter();\r\n  }\r\n\r\n  filter() {\r\n    this.colourantService.getListItems().subscribe((data: any) => {\r\n      this.dbItems = data;\r\n      this.sortedData = this.dbItems;\r\n    });\r\n  }\r\n\r\n  resetFilter() {\r\n    this.code = null;\r\n    this.name = null;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    if (! sort.active || sort.direction === '') {\r\n      this.sortedData = this.dbItems;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = this.dbItems.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'colourantCode': return compare(a.colourantCode, b.colourantCode, isAsc);\r\n        case 'colourantName': return compare(a.colourantName, b.colourantName, isAsc);\r\n        case 'density': return compare(a.density, b.density, isAsc);\r\n        case 'pricePerUnit': return compare(a.pricePerUnit, b.pricePerUnit, isAsc);\r\n        case 'surcharge': return compare(a.surcharge, b.surcharge, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Customer Manager</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Customers\\r\\n\\r\\n        <button class=\\\"close\\\" (click)=\\\"addCustomer()\\\"><i class=\\\"fas fa-plus-square\\\"></i></button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <ng-container *ngIf=\\\"responseMessage != null && responseMessage.type == 'success'\\\">\\r\\n          <div class=\\\"alert alert-success\\\">\\r\\n            <button class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\" (click)=\\\"clearResponseMessage()\\\">&times;</button>\\r\\n            {{responseMessage.message}}\\r\\n          </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container *ngIf=\\\"responseMessage != null && responseMessage.type == 'error'\\\">\\r\\n          <div class=\\\"alert alert-danger\\\">\\r\\n            <button class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\" (click)=\\\"clearResponseMessage()\\\">&times;</button>\\r\\n            {{responseMessage.message}}\\r\\n          </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th mat-sort-header=\\\"name\\\">Name</th>\\r\\n              <th mat-sort-header=\\\"phone\\\">Phone Number</th>\\r\\n              <th mat-sort-header=\\\"email\\\">Email</th>\\r\\n              <th mat-sort-header=\\\"address\\\">Address</th>\\r\\n              <th mat-sort-header=\\\"note\\\">Note</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n\\r\\n            <tr *ngFor=\\\"let customer of sortedData\\\">\\r\\n              <td>{{customer.name}}</td>\\r\\n              <td>{{customer.phone}}</td>\\r\\n              <td>{{customer.email}}</td>\\r\\n              <td>{{customer.address}}</td>\\r\\n              <td>{{customer.note}}</td>\\r\\n              <td>\\r\\n                <button mat-raised-button\\r\\n                        matTooltip=\\\"Edit Collection\\\"\\r\\n                        aria-label=\\\"Edit Collection\\\"\\r\\n                        (click)=\\\"viewCustomer(customer)\\\">\\r\\n                  <i class=\\\"fas fa-edit\\\"></i>\\r\\n                </button>\\r\\n\\r\\n                <button mat-raised-button\\r\\n                        matTooltip=\\\"Delete Collection\\\"\\r\\n                        aria-label=\\\"Delete Collection\\\"\\r\\n                        (click)=\\\"confirmDeleteCustomer(customer)\\\">\\r\\n                  <i class=\\\"fas fa-trash-alt\\\"></i>\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-container *ngIf=\\\"dbItem != null\\\">\\r\\n  <pp-modal id=\\\"view-detail-customer\\\" class=\\\"modal view-detail-customer\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">{{dbItem.customerId > 0 ? 'Edit Customer':  'Add Customer'}}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('view-detail-customer')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form class=\\\"form form-horizontal form-detail\\\">\\r\\n          <div class=\\\"form-body\\\">\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Name</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.name\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Phone Number</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.phone\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Email</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"dbItem.email\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Address</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <textarea [(ngModel)]=\\\"dbItem.address\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n              <label class=\\\"col-md-3 label-control\\\">Note</label>\\r\\n              <div class=\\\"col-md-8\\\">\\r\\n                <textarea [(ngModel)]=\\\"dbItem.note\\\" class=\\\"form-control\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></textarea>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('view-detail-customer')\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateOrSavingCustomer()\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\\r\\n<ng-container *ngIf=\\\"selectedCustomerId != null && selectedCustomerId > 0\\\">\\r\\n  <pp-modal id=\\\"confirm-remove-customer-model\\\" class=\\\"modal confirm-remove-customer-model\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">Confirm</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal('confirm-remove-customer-model')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">×</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Do you want to delete this customer?\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal('confirm-remove-customer-model')\\\">Cancel</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteCustomer()\\\">Ok</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </pp-modal>\\r\\n</ng-container>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZy9jdXN0b21lci9jdXN0b21lci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\r\nimport {CustomerModel} from '../../../models/customer';\r\nimport {CustomerService} from '../../../services/customer/customer.service';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\nimport {ResponseMessageModel} from '../../../models/user.model';\r\nimport {Sort} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n  sortedData: CustomerModel[];\r\n  dbItems: CustomerModel[];\r\n  dbItem: CustomerModel;\r\n  selectedCustomerId: number;\r\n\r\n  responseMessage: ResponseMessageModel = null;\r\n  mapErrors: any;\r\n\r\n  constructor(private customerService: CustomerService, private modalService: ModalService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.responseMessage = null;\r\n    this.dbItem = null;\r\n    this.selectedCustomerId = null;\r\n\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.customerService.findAll().subscribe((data: any[]) => {\r\n      this.dbItems = data;\r\n      this.sortedData = this.dbItems;\r\n    });\r\n  }\r\n\r\n  addCustomer(): void {\r\n    this.dbItem = new CustomerModel();\r\n\r\n    setTimeout(() => {\r\n      this.openModal('view-detail-customer');\r\n    }, 100);\r\n  }\r\n\r\n  viewCustomer(customer: CustomerModel): void {\r\n    this.dbItem = customer;\r\n\r\n    setTimeout(() => {\r\n      this.openModal('view-detail-customer');\r\n    }, 100);\r\n  }\r\n\r\n  validateDataBeforeSubmit() {\r\n    let hasError = false;\r\n    const mapErrors = {};\r\n\r\n    if (this.dbItem.name == null || this.dbItem.name.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['name'] = 'Please enter the customer name!';\r\n    }\r\n\r\n    if (this.dbItem.phone == null || this.dbItem.phone.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['phone'] = 'Please enter the customer phone number!';\r\n    }\r\n\r\n    if (this.dbItem.address == null || this.dbItem.address.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['address'] = 'Please enter the customer address!';\r\n    }\r\n\r\n    if (this.dbItem.email == null || this.dbItem.email.trim() === '') {\r\n      hasError = true;\r\n      mapErrors['email'] = 'Please enter the customer email!';\r\n    }\r\n\r\n    return {\r\n      hasError: hasError, mapErrors: mapErrors\r\n    };\r\n  }\r\n\r\n  updateOrSavingCustomer(): void {\r\n    const errorData = this.validateDataBeforeSubmit();\r\n    if (!errorData.hasError) {\r\n      this.customerService.saveOrUpdate(this.dbItem).subscribe((data: any) => {\r\n        this.dbItem = data;\r\n        this.closeModal('view-detail-customer');\r\n        this.dbItem = null;\r\n        this.fetchData();\r\n      });\r\n    } else {\r\n      this.mapErrors = errorData.mapErrors;\r\n    }\r\n  }\r\n\r\n  confirmDeleteCustomer(customer: CustomerModel): void {\r\n    this.selectedCustomerId = customer.customerId;\r\n\r\n    setTimeout(() => {\r\n      this.openModal('confirm-remove-customer-model');\r\n    }, 100);\r\n  }\r\n\r\n  deleteCustomer(): void {\r\n    this.customerService.deleteCustomer(this.selectedCustomerId).subscribe((data: any) => {\r\n      this.responseMessage = data;\r\n      this.selectedCustomerId = null;\r\n      this.closeModal('confirm-remove-customer-model');\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n\r\n  clearResponseMessage(): void {\r\n    this.responseMessage = null;\r\n  }\r\n\r\n  openModal(id: string) {\r\n    this.modalService.open(id);\r\n  }\r\n\r\n  closeModal(id: string) {\r\n    this.modalService.close(id);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    if (! sort.active || sort.direction === '') {\r\n      this.sortedData = this.dbItems;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = this.dbItems.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'phone': return compare(a.phone, b.phone, isAsc);\r\n        case 'email': return compare(a.email, b.email, isAsc);\r\n        case 'address': return compare(a.address, b.address, isAsc);\r\n        case 'note': return compare(a.note, b.note, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: number | string, b: number | string, isAsc: boolean) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"block-header\\\">\\r\\n  <h1>Product Manager</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        List Product\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n            <tr>\\r\\n              <th>#</th>\\r\\n              <th mat-sort-header=\\\"productCode\\\">Product Code</th>\\r\\n              <th mat-sort-header=\\\"productName\\\">Product Name</th>\\r\\n              <th mat-sort-header=\\\"createdDate\\\">Created Date</th>\\r\\n              <th mat-sort-header=\\\"createBy\\\">Created By</th>\\r\\n            </tr>\\r\\n\\r\\n            <ng-container *ngFor=\\\"let item of sortedData let i=index\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <span *ngIf=\\\"currentProductViewer == item.productId\\\" (click)=\\\"showProductDetail(-1)\\\"><i class=\\\"fas fa-minus\\\"></i></span>\\r\\n                  <span *ngIf=\\\"currentProductViewer != item.productId\\\" (click)=\\\"showProductDetail(item.productId)\\\"><i class=\\\"fas fa-plus\\\"></i></span>\\r\\n                </td>\\r\\n                <td>{{item.productCode}}</td>\\r\\n                <td>{{item.productName}}</td>\\r\\n                <td>{{item.createdDate | date : 'dd/MM/yyyy'}}</td>\\r\\n                <td>\\r\\n                  <span *ngIf=\\\"item.createBy == null\\\">\\r\\n                    System\\r\\n                  </span>\\r\\n\\r\\n                  <span *ngIf=\\\"item.createBy != null\\\">\\r\\n                    Me\\r\\n                  </span>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n              <tr *ngIf=\\\"currentProductViewer == item.productId\\\" selected class=\\\"product-detail-row\\\">\\r\\n                <td></td>\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <app-viewdetail [productId]=\\\"item.productId\\\"></app-viewdetail>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </ng-container>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZy9wcm9kdWN0L3Byb2R1Y3QuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\nimport {ProductService} from '../../../services/product/product.service';\r\nimport {ProductModel} from '../../../models/product';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\n\r\nexport class ProductComponent implements OnInit {\r\n  productCode: string = null;\r\n  productName: string = null;\r\n\r\n  listItems: ProductModel[] = null;\r\n  sortedData: ProductModel[] = null;\r\n  currentProductViewer: number = null;\r\n\r\n  constructor(private productService: ProductService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fletchData();\r\n  }\r\n\r\n  filter() {\r\n    // const filterProduct = function (filter) {\r\n    //   return function (item: ProductDTO): boolean {\r\n    //     return (filter.productCode === null || filter.productCode === '' || item.productCode === filter.productCode)\r\n    //       && (filter.productName === null || filter.productName === '' || item.productName === filter.productName);\r\n    //   };\r\n    // };\r\n    //\r\n    // this.sortedData = this.listItems.filter(filterProduct({code: this.productCode, name: this.productName}));\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.listItems.slice();\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'productCode': return compare(a.productCode, b.productCode, isAsc);\r\n        case 'productName': return compare(a.productName, b.productName, isAsc);\r\n        case 'createdDate': return compare(a.createdDate, b.createdDate, isAsc);\r\n        case 'createBy': return compare(a.createBy == null ? 0 : 1, b.createBy  == null ? 0 : 1, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: string | number, b: string | number, isAsc) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  fletchData() {\r\n    this.productService.getListItems().subscribe((data: any) => {\r\n      this.listItems = data;\r\n      this.sortedData = this.listItems;\r\n    });\r\n  }\r\n\r\n  showProductDetail(productId: number) {\r\n    this.currentProductViewer = productId;\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  productbase works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2V0dGluZy9wcm9kdWN0YmFzZS9wcm9kdWN0YmFzZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-productbase',\r\n  templateUrl: './productbase.component.html',\r\n  styleUrls: ['./productbase.component.scss']\r\n})\r\nexport class ProductbaseComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  user works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"pp-modal modal-dialog modal-dialog-centered\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal-backdrop fade show\\\"></div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpcmVjdGlvbnMvYm9vc3RyYXAvbW9kYWwvbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ModalService} from '../../../services/boostrap/modal.service';\r\n\r\n@Component({\r\n  selector: 'pp-modal',\r\n  templateUrl: './modal.component.html',\r\n  // template:\r\n  // '<div class=\"pp-modal modal-dialog modal-dialog-centered\">' +\r\n  // '<ng-content></ng-content>' +\r\n  // '</div>' +\r\n  // '<div class=\"modal-backdrop fade show\"></div>',\r\n\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\n\r\n\r\nexport class ModalComponent implements OnInit, OnDestroy {\r\n  @Input() id: string;\r\n  private element: any;\r\n\r\n  constructor(private modalService: ModalService, private el: ElementRef) {\r\n    this.element = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const modal = this;\r\n\r\n    // ensure id attribute exists\r\n    if (!this.id) {\r\n      console.error('modal must have an id');\r\n      return;\r\n    }\r\n\r\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n    document.body.appendChild(this.element);\r\n\r\n    // close modal on background click\r\n    this.element.addEventListener('click', function (e: any) {\r\n      if (e.target.className === 'pp-modal') {\r\n        modal.close();\r\n      }\r\n    });\r\n\r\n    // add self (this modal instance) to the modal service so it's accessible from controllers\r\n    this.modalService.add(this);\r\n  }\r\n\r\n  // remove self from modal service when directive is destroyed\r\n  ngOnDestroy(): void {\r\n    this.modalService.remove(this.id);\r\n    this.element.remove();\r\n  }\r\n\r\n  // open modal\r\n  open(): void {\r\n    this.element.style.display = 'block';\r\n    document.body.classList.add('modal-open');\r\n  }\r\n\r\n  // close modal\r\n  close(): void {\r\n    this.element.style.display = 'none';\r\n    document.body.classList.remove('modal-open');\r\n  }\r\n\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"productBase != null\\\">\\r\\n  <div class=\\\"base-can-information\\\">\\r\\n    <div class=\\\"base-can-empty\\\">\\r\\n    <span class=\\\"base-can-background\\\">\\r\\n      <span class=\\\"base-can-volume\\\" [ngStyle]=\\\"{'background-color': productBase.rbgHex, 'height': '100%'}\\\">\\r\\n        <span class=\\\"can-base-info\\\">\\r\\n          <span class=\\\"base-type\\\">Base : {{productBase.base.baseCode}}</span>\\r\\n          <span class=\\\"base-volume\\\">{{canSize + \\\" Liter\\\" }}</span>\\r\\n          <span class=\\\"base-name\\\">{{collection.collectionName}}</span>\\r\\n        </span>\\r\\n      </span>\\r\\n    </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\"","module.exports = \".base-can-information {\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlyZWN0aW9ucy9wcm9kdWN0L2Jhc2UtY2FuL1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxkaXJlY3Rpb25zXFxwcm9kdWN0XFxiYXNlLWNhblxcYmFzZS1jYW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBa0IsRUFDbkIiLCJmaWxlIjoic3JjL2FwcC9kaXJlY3Rpb25zL3Byb2R1Y3QvYmFzZS1jYW4vYmFzZS1jYW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFzZS1jYW4taW5mb3JtYXRpb257XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ProductBaseModel} from '../../../models/product_base';\r\nimport {CollectionModel} from '../../../models/collection';\r\n\r\n@Component({\r\n  selector: 'app-base-can',\r\n  templateUrl: './base-can.component.html',\r\n  styleUrls: ['./base-can.component.scss']\r\n})\r\nexport class BaseCanComponent implements OnInit {\r\n  @Input() productBase: ProductBaseModel;\r\n  @Input() canSize: number;\r\n  @Input() collection: CollectionModel;\r\n\r\n  private _productBase: ProductBaseModel;\r\n  private _canSize: number;\r\n  private _collection: CollectionModel[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<ng-container *ngIf=\\\"listFormulaColorant != null\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-bordered\\\" >\\r\\n      <tr>\\r\\n        <th style=\\\"width: 30%\\\">Component</th>\\r\\n        <th style=\\\"width: 20%\\\">ml</th>\\r\\n        <th style=\\\"width: 50%\\\">Color\\r\\n      </tr>\\r\\n\\r\\n      <ng-container *ngFor=\\\"let colorantItem of listFormulaColorant\\\">\\r\\n        <tr *ngIf=\\\"colorantItem.quantity != null && colorantItem.quantity > 0\\\">\\r\\n          <td>{{colorantItem.colourant.colourantName}}</td>\\r\\n          <td>{{roundNumber((colorantItem.quantity / baseOnCan) * canSize)}}</td>\\r\\n          <td>\\r\\n          <span class=\\\"color-bar\\\" >\\r\\n            <span class=\\\"color-select\\\" [ngStyle]=\\\"{'background': colorantItem.colourant.rbgHex, 'width': (colorantItem.quantity / maxColorQuantity) * 100 + '%'}\\\"></span>\\r\\n          </span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </table>\\r\\n  </div>\\r\\n</ng-container>\\r\\n\\r\\n\"","module.exports = \".color-bar {\\n  width: 100%;\\n  display: inline-block;\\n  position: relative;\\n  height: 1em; }\\n  .color-bar .color-select {\\n    display: inline-block;\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    bottom: 0px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlyZWN0aW9ucy9wcm9kdWN0L3RhYmxlY29sb3VyYW50L1g6XFx3c19sZWFybmluZ1xcY2xpZW50dmlldHBvd2VyL3NyY1xcYXBwXFxkaXJlY3Rpb25zXFxwcm9kdWN0XFx0YWJsZWNvbG91cmFudFxcdGFibGUtY29sb3VyYW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVc7RUFDWCxzQkFBcUI7RUFDckIsbUJBQWtCO0VBQ2xCLFlBQVcsRUFTWjtFQWJEO0lBT0ksc0JBQXFCO0lBQ3JCLG1CQUFrQjtJQUNsQixTQUFRO0lBQ1IsVUFBUztJQUNULFlBQVcsRUFDWiIsImZpbGUiOiJzcmMvYXBwL2RpcmVjdGlvbnMvcHJvZHVjdC90YWJsZWNvbG91cmFudC90YWJsZS1jb2xvdXJhbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbG9yLWJhcntcclxuICB3aWR0aDogMTAwJTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogMWVtO1xyXG5cclxuICAuY29sb3Itc2VsZWN0e1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICBib3R0b206IDBweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import {Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {FormulaColourantModel} from '../../../models/formula_product_base';\r\n\r\n@Component({\r\n  selector: 'app-table-colourants',\r\n  templateUrl: './table-colourants.component.html',\r\n  styleUrls: ['./table-colourants.component.scss']\r\n})\r\n\r\nexport class TableColourantsComponent implements OnInit, OnChanges {\r\n  @Input() baseOnCan: number;\r\n  @Input() canSize: number;\r\n  @Input() listFormulaColorant: FormulaColourantModel[];\r\n  @Input() maxColorQuantity: number;\r\n\r\n  private _baseOnCan: number;\r\n  private _canSize: number;\r\n  private _listFormulaColorant: FormulaColourantModel[];\r\n  private _maxColorQuantity: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log(changes);\r\n\r\n    const baseOnCanChange: SimpleChange = changes.baseOnCan;\r\n    if (baseOnCanChange != null) {\r\n      this._baseOnCan = baseOnCanChange.currentValue;\r\n    }\r\n\r\n    const canSizeChange: SimpleChange = changes.canSize;\r\n    if (canSizeChange != null) {\r\n      this._canSize = canSizeChange.currentValue;\r\n    }\r\n\r\n    const listFormulaColorantChange: SimpleChange = changes.listFormulaColorant;\r\n    if (listFormulaColorantChange != null) {\r\n      this._listFormulaColorant = listFormulaColorantChange.currentValue;\r\n    }\r\n    const maxColorQuantityChange: SimpleChange = changes.maxColorQuantity;\r\n    if (maxColorQuantityChange != null) {\r\n      this._maxColorQuantity = maxColorQuantityChange.currentValue;\r\n    }\r\n  }\r\n\r\n  roundNumber(num: number) {\r\n    return Math.round(num * 100) / 100;\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-borderless\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th>Base</th>\\r\\n      <th>Density</th>\\r\\n      <th>Color</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let item of listProductBaseCan let i=index\\\">\\r\\n      <td>{{item.base.baseName}}</td>\\r\\n      <td>{{item.density}}</td>\\r\\n      <td>\\r\\n        <span [ngStyle]=\\\"{'background': item.rbgHex, 'display': 'inline-block', 'width': '30px', 'height': '30px', 'border': '1px solid #333'}\\\"></span>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpcmVjdGlvbnMvcHJvZHVjdC92aWV3ZGV0YWlsL3ZpZXdkZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, ElementRef, Input, OnInit} from '@angular/core';\r\nimport {ProductService} from '../../../services/product/product.service';\r\nimport {ProductBaseModel} from '../../../models/product_base';\r\n\r\n@Component({\r\n  selector: 'app-viewdetail',\r\n  templateUrl: './viewdetail.component.html',\r\n  styleUrls: ['./viewdetail.component.scss']\r\n})\r\nexport class ViewDetailComponent implements OnInit {\r\n  @Input() productId: number;\r\n  listProductBaseCan: ProductBaseModel[] | null = null;\r\n\r\n  constructor(private productService: ProductService) {\r\n    // this.element = el.nativeElement;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.productService.viewProductDetail(this.productId).subscribe((data: any) => {\r\n      this.listProductBaseCan = data;\r\n      console.log(this.listProductBaseCan);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private ipc: IpcRenderer;\n  constructor() {\n    if ((<any>window).require) {\n    try {\n      this.ipc = (<any>window).require('electron').ipcRenderer;\n    } catch (error) {\n      throw error;\n    }\n    } else {\n      console.warn('Could not load electron ipc');\n    }\n  }\n\n  saveFile() {\n    // return new Promise<string[]>((resolve, reject) => {\n    //   this.ipc.once(\"getFilesResponse\", (event, arg) => {\n    //     resolve(arg);\n    //   });\n    //   this.ipc.send(\"getFiles\");\n    // });\n    this.ipc.send('saveFile', {data: 'test'});\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\n\r\nimport {\r\n  // MatAutocompleteModule,\r\n  // MatButtonModule,\r\n  // MatButtonToggleModule,\r\n  // MatCardModule,\r\n  MatCheckboxModule,\r\n  // MatChipsModule,\r\n  // MatDatepickerModule,\r\n  // MatDialogModule,\r\n  // MatExpansionModule,\r\n  // MatGridListModule,\r\n  // MatIconModule,\r\n  // MatInputModule,\r\n  // MatListModule,\r\n  // MatMenuModule,\r\n  // MatNativeDateModule,\r\n  // MatProgressBarModule,\r\n  // MatProgressSpinnerModule,\r\n  // MatRadioModule,\r\n  // MatRippleModule,\r\n  // MatSelectModule,\r\n  // MatSidenavModule,\r\n  MatSliderModule, // The module require hammerjs to getting smoothly\r\n  // MatSlideToggleModule,\r\n  // MatSnackBarModule,\r\n  // MatStepperModule,\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatFormFieldModule,\r\n  // MatTabsModule,\r\n  // MatToolbarModule,\r\n  MatTooltipModule,\r\n} from '@angular/material';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    // Material\r\n    // MatAutocompleteModule,\r\n    // MatButtonModule,\r\n    // MatButtonToggleModule,\r\n    // MatCardModule,\r\n    MatCheckboxModule,\r\n    // MatChipsModule,\r\n    // MatDatepickerModule,\r\n    // MatDialogModule,\r\n    // MatExpansionModule,\r\n    // MatGridListModule,\r\n    // MatIconModule,\r\n    // MatInputModule,\r\n    // MatListModule,\r\n    // MatMenuModule,\r\n    // MatProgressBarModule,\r\n    // MatProgressSpinnerModule,\r\n    // MatRadioModule,\r\n    // MatRippleModule,\r\n    // MatSelectModule,\r\n    // MatSidenavModule,\r\n    // MatSlideToggleModule,\r\n    MatSliderModule,\r\n    // MatSnackBarModule,\r\n    // MatStepperModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    // MatTabsModule,\r\n    // MatToolbarModule,\r\n    MatTooltipModule,\r\n    // MatNativeDateModule,\r\n    ColorPickerModule\r\n  ],\r\n  exports: [\r\n    // Material\r\n    // MatAutocompleteModule,\r\n    // MatButtonModule,\r\n    // MatButtonToggleModule,\r\n    // MatCardModule,\r\n    MatCheckboxModule,\r\n    // MatChipsModule,\r\n    // MatDatepickerModule,\r\n    // MatDialogModule,\r\n    // MatExpansionModule,\r\n    // MatGridListModule,\r\n    // MatIconModule,\r\n    // MatInputModule,\r\n    // MatListModule,\r\n    // MatMenuModule,\r\n    // MatProgressBarModule,\r\n    // MatProgressSpinnerModule,\r\n    // MatRadioModule,\r\n    // MatRippleModule,\r\n    // MatSelectModule,\r\n    // MatSidenavModule,\r\n    // MatSlideToggleModule,\r\n    MatSliderModule,\r\n    // MatSnackBarModule,\r\n    // MatStepperModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    // MatTabsModule,\r\n    // MatToolbarModule,\r\n    MatTooltipModule,\r\n    // MatNativeDateModule,\r\n    ColorPickerModule\r\n  ]\r\n})\r\n\r\n\r\nexport class MaterialModule{}\r\n","export class BaseModel {\r\n  private _baseId: number;\r\n  private _baseCode: string;\r\n  private _baseName: string;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  get baseId(): number {\r\n    return this._baseId;\r\n  }\r\n\r\n  set baseId(value: number) {\r\n    this._baseId = value;\r\n  }\r\n\r\n  get baseCode(): string {\r\n    return this._baseCode;\r\n  }\r\n\r\n  set baseCode(value: string) {\r\n    this._baseCode = value;\r\n  }\r\n\r\n  get baseName(): string {\r\n    return this._baseName;\r\n  }\r\n\r\n  set baseName(value: string) {\r\n    this._baseName = value;\r\n  }\r\n}\r\n","import {MachineModel} from './user.model';\r\n\r\nexport class CollectionModel {\r\n  private _collectionId: number;\r\n  private _collectionName: string;\r\n  private _description: string;\r\n  private _createdDate: string;\r\n  private _machine: MachineModel;\r\n\r\n  get collectionId(): number {\r\n    return this._collectionId;\r\n  }\r\n\r\n  set collectionId(value: number) {\r\n    this._collectionId = value;\r\n  }\r\n\r\n  get collectionName(): string {\r\n    return this._collectionName;\r\n  }\r\n\r\n  set collectionName(value: string) {\r\n    this._collectionName = value;\r\n  }\r\n\r\n  get description(): string {\r\n    return this._description;\r\n  }\r\n\r\n  set description(value: string) {\r\n    this._description = value;\r\n  }\r\n\r\n  get createdDate(): string {\r\n    return this._createdDate;\r\n  }\r\n\r\n  set createdDate(value: string) {\r\n    this._createdDate = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n}\r\n","export class ColorantModel {\r\n  private _colourantId: number;\r\n  private _colourantCode: string;\r\n  private _colourantName: string;\r\n  private _density: string;\r\n  private _pricePerUnit: number | null;\r\n  private _surcharge: number | number;\r\n  private _rbgHex: string | null;\r\n  private _kind: string | null;\r\n\r\n\r\n  get colourantId(): number {\r\n    return this._colourantId;\r\n  }\r\n\r\n  set colourantId(value: number) {\r\n    this._colourantId = value;\r\n  }\r\n\r\n  get colourantCode(): string {\r\n    return this._colourantCode;\r\n  }\r\n\r\n  set colourantCode(value: string) {\r\n    this._colourantCode = value;\r\n  }\r\n\r\n  get colourantName(): string {\r\n    return this._colourantName;\r\n  }\r\n\r\n  set colourantName(value: string) {\r\n    this._colourantName = value;\r\n  }\r\n\r\n  get density(): string {\r\n    return this._density;\r\n  }\r\n\r\n  set density(value: string) {\r\n    this._density = value;\r\n  }\r\n\r\n  get pricePerUnit(): number | null {\r\n    return this._pricePerUnit;\r\n  }\r\n\r\n  set pricePerUnit(value: number | null) {\r\n    this._pricePerUnit = value;\r\n  }\r\n\r\n  get surcharge(): number {\r\n    return this._surcharge;\r\n  }\r\n\r\n  set surcharge(value: number) {\r\n    this._surcharge = value;\r\n  }\r\n\r\n  get rbgHex(): string | null {\r\n    return this._rbgHex;\r\n  }\r\n\r\n  set rbgHex(value: string | null) {\r\n    this._rbgHex = value;\r\n  }\r\n\r\n  get kind(): string | null {\r\n    return this._kind;\r\n  }\r\n\r\n  set kind(value: string | null) {\r\n    this._kind = value;\r\n  }\r\n}\r\n","export let USER_ROLE = {\r\n  'ADMIN' : 'ADMIN',\r\n  'SHOP' : 'SHOP',\r\n  'OPERATOR' : 'OPERATOR',\r\n  'MAINTENANCE' : 'MAINTENANCE'\r\n};\r\n","import {MachineModel} from './user.model';\r\n\r\nexport class CustomerModel {\r\n  private _customerId: number;\r\n  private _name: string;\r\n  private _phone: string;\r\n  private _email: string;\r\n  private _address: string;\r\n  private _note: string;\r\n  private _machine: MachineModel;\r\n\r\n  get customerId(): number {\r\n    return this._customerId;\r\n  }\r\n\r\n  set customerId(value: number) {\r\n    this._customerId = value;\r\n  }\r\n\r\n  get phone(): string {\r\n    return this._phone;\r\n  }\r\n\r\n  set phone(value: string) {\r\n    this._phone = value;\r\n  }\r\n\r\n  get email(): string {\r\n    return this._email;\r\n  }\r\n\r\n  set email(value: string) {\r\n    this._email = value;\r\n  }\r\n\r\n  get address(): string {\r\n    return this._address;\r\n  }\r\n\r\n  set address(value: string) {\r\n    this._address = value;\r\n  }\r\n\r\n  get note(): string {\r\n    return this._note;\r\n  }\r\n\r\n  set note(value: string) {\r\n    this._note = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value: string) {\r\n    this._name = value;\r\n  }\r\n}\r\n\r\nexport class CustomerSelectedModel {\r\n  private _customer: CustomerModel;\r\n  private _checked: boolean;\r\n\r\n\r\n  get checked(): boolean {\r\n    return this._checked;\r\n  }\r\n\r\n  set checked(value: boolean) {\r\n    this._checked = value;\r\n  }\r\n\r\n  get customer(): CustomerModel {\r\n    return this._customer;\r\n  }\r\n\r\n  set customer(value: CustomerModel) {\r\n    this._customer = value;\r\n  }\r\n}\r\n","import {ColorantModel} from './colorant';\r\nimport {FormulaProductBaseModel, ProductBaseCanModel} from './formula_product_base';\r\nimport {MachineModel, UserModel} from './user.model';\r\nimport {TaskInterface} from '../utils/convert-models-utils';\r\n\r\nexport const MAP_DISPENSE_TASK_STATE = {\r\n  WAITING: 'WAITING',\r\n  IN_PROGRESS: 'START',\r\n  DONE: 'DONE',\r\n};\r\n\r\nexport const MAP_DISPENSE_TASK_STEP_TYPE = {\r\n  PREPARE: 'prepare',\r\n  PUMPING: 'pumping',\r\n  FINISHED: 'finished'\r\n};\r\n\r\nexport class DispenseDataModel {\r\n  private _formulaProductBase: FormulaProductBaseModel;\r\n  private _productBaseCan: ProductBaseCanModel;\r\n  private _canSize: number;\r\n  private _numberOfCan: number;\r\n\r\n  constructor(formulaProductBase: FormulaProductBaseModel, productBaseCan: ProductBaseCanModel, canSize: number, numberOfCan: number) {\r\n    this._formulaProductBase = formulaProductBase;\r\n    this._productBaseCan = productBaseCan;\r\n    this._canSize = canSize;\r\n    this._numberOfCan = numberOfCan;\r\n  }\r\n\r\n  get formulaProductBase(): FormulaProductBaseModel {\r\n    return this._formulaProductBase;\r\n  }\r\n\r\n  set formulaProductBase(value: FormulaProductBaseModel) {\r\n    this._formulaProductBase = value;\r\n  }\r\n\r\n  get productBaseCan(): ProductBaseCanModel {\r\n    return this._productBaseCan;\r\n  }\r\n\r\n  set productBaseCan(value: ProductBaseCanModel) {\r\n    this._productBaseCan = value;\r\n  }\r\n\r\n  get canSize(): number {\r\n    return this._canSize;\r\n  }\r\n\r\n  set canSize(value: number) {\r\n    this._canSize = value;\r\n  }\r\n\r\n  get numberOfCan(): number {\r\n    return this._numberOfCan;\r\n  }\r\n\r\n  set numberOfCan(value: number) {\r\n    this._numberOfCan = value;\r\n  }\r\n}\r\n\r\nexport class DispenseStepDataModel {\r\n  private _colorant: ColorantModel;\r\n  private _quantity: number;\r\n\r\n  constructor(colorant: ColorantModel, quantity: number) {\r\n    this._colorant = colorant;\r\n    this._quantity = quantity;\r\n  }\r\n\r\n  get colorant(): ColorantModel {\r\n    return this._colorant;\r\n  }\r\n\r\n  set colorant(value: ColorantModel) {\r\n    this._colorant = value;\r\n  }\r\n\r\n  get quantity(): number {\r\n    return this._quantity;\r\n  }\r\n\r\n  set quantity(value: number) {\r\n    this._quantity = value;\r\n  }\r\n}\r\n\r\n\r\nexport class DispenseTaskStepModel implements TaskInterface {\r\n  private _taskId: number;\r\n  private _type: string;\r\n  private _status: string;\r\n  private _process: number;\r\n  private _totalProcess: number;\r\n  private _callBackFunction;\r\n\r\n  // custom data\r\n  private _startTime: Date;\r\n  private _endTime: Date;\r\n  private _parentTask: DispenseTaskModel | null;\r\n  private _taskData: DispenseStepDataModel | null;\r\n\r\n\r\n  constructor(type: string, taskData: DispenseStepDataModel | null, callBackFunction) {\r\n    this._type = type;\r\n    this._taskData = taskData;\r\n    this._callBackFunction = callBackFunction;\r\n    this._status = MAP_DISPENSE_TASK_STATE.WAITING;\r\n    this._totalProcess = 2000;\r\n  }\r\n\r\n  get taskId(): number {\r\n    return this._taskId;\r\n  }\r\n\r\n  set taskId(value: number) {\r\n    this._taskId = value;\r\n  }\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: string) {\r\n    this._type = value;\r\n  }\r\n\r\n\r\n  get status(): string {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string) {\r\n    this._status = value;\r\n  }\r\n\r\n  get process(): number {\r\n    return this._process;\r\n  }\r\n\r\n  set process(value: number) {\r\n    this._process = value;\r\n  }\r\n\r\n  get totalProcess(): number {\r\n    return this._totalProcess;\r\n  }\r\n\r\n  set totalProcess(value: number) {\r\n    this._totalProcess = value;\r\n  }\r\n\r\n  get callBackFunction() {\r\n    return this._callBackFunction;\r\n  }\r\n\r\n  set callBackFunction(value) {\r\n    this._callBackFunction = value;\r\n  }\r\n\r\n  get startTime(): Date {\r\n    return this._startTime;\r\n  }\r\n\r\n  set startTime(value: Date) {\r\n    this._startTime = value;\r\n  }\r\n\r\n  get endTime(): Date {\r\n    return this._endTime;\r\n  }\r\n\r\n  set endTime(value: Date) {\r\n    this._endTime = value;\r\n  }\r\n\r\n  get parentTask(): DispenseTaskModel | null {\r\n    return this._parentTask;\r\n  }\r\n\r\n  set parentTask(value: DispenseTaskModel | null) {\r\n    this._parentTask = value;\r\n  }\r\n\r\n  get taskData(): DispenseStepDataModel | null {\r\n    return this._taskData;\r\n  }\r\n\r\n  set taskData(value: DispenseStepDataModel | null) {\r\n    this._taskData = value;\r\n  }\r\n}\r\n\r\nexport class DispenseTaskModel implements TaskInterface {\r\n  private _taskId: number;\r\n  private _type: string;\r\n  private _status: string;\r\n  private _process: number;\r\n  private _totalProcess: number;\r\n  private _callBackFunction;\r\n\r\n  // custom data\r\n  private _startTime: Date;\r\n  private _endTime: Date;\r\n\r\n  private _taskData: DispenseDataModel |  null;\r\n  private _childrenTask: DispenseTaskStepModel [] | null;\r\n\r\n  constructor(type: string, childrenTask: DispenseTaskStepModel[] | null, taskData: DispenseDataModel | null, callBackFunction) {\r\n    this._type = type;\r\n    this._childrenTask = childrenTask;\r\n    this._taskData = taskData;\r\n    this._callBackFunction = callBackFunction;\r\n    this._status = MAP_DISPENSE_TASK_STATE.WAITING;\r\n    this._totalProcess = 2000;\r\n  }\r\n\r\n  get taskId(): number {\r\n    return this._taskId;\r\n  }\r\n\r\n  set taskId(value: number) {\r\n    this._taskId = value;\r\n  }\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: string) {\r\n    this._type = value;\r\n  }\r\n\r\n  get status(): string {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string) {\r\n    this._status = value;\r\n  }\r\n\r\n  get process(): number {\r\n    return this._process;\r\n  }\r\n\r\n  set process(value: number) {\r\n    this._process = value;\r\n  }\r\n\r\n  get totalProcess(): number {\r\n    return this._totalProcess;\r\n  }\r\n\r\n  set totalProcess(value: number) {\r\n    this._totalProcess = value;\r\n  }\r\n\r\n  get callBackFunction() {\r\n    return this._callBackFunction;\r\n  }\r\n\r\n  set callBackFunction(value) {\r\n    this._callBackFunction = value;\r\n  }\r\n\r\n  get startTime(): Date {\r\n    return this._startTime;\r\n  }\r\n\r\n  set startTime(value: Date) {\r\n    this._startTime = value;\r\n  }\r\n\r\n  get endTime(): Date {\r\n    return this._endTime;\r\n  }\r\n\r\n  set endTime(value: Date) {\r\n    this._endTime = value;\r\n  }\r\n\r\n  get taskData(): DispenseDataModel | null {\r\n    return this._taskData;\r\n  }\r\n\r\n  set taskData(value: DispenseDataModel | null) {\r\n    this._taskData = value;\r\n  }\r\n\r\n  get childrenTask(): DispenseTaskStepModel[] | null {\r\n    return this._childrenTask;\r\n  }\r\n\r\n  set childrenTask(value: DispenseTaskStepModel [] | null) {\r\n    this._childrenTask = value;\r\n  }\r\n}\r\n\r\nexport class MachineFormulaProductBaseLogModel {\r\n  private _machineFormulaProductBaseId: number;\r\n  private _machine: MachineModel;\r\n  private _formulaProductBase: FormulaProductBaseModel;\r\n  private _user: UserModel;\r\n  private _canSize: number;\r\n  private _createdDate: Date;\r\n  private _finishedDate: Date;\r\n  private _status: string;\r\n\r\n  get machineFormulaProductBaseId(): number {\r\n    return this._machineFormulaProductBaseId;\r\n  }\r\n\r\n  set machineFormulaProductBaseId(value: number) {\r\n    this._machineFormulaProductBaseId = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n\r\n  get formulaProductBase(): FormulaProductBaseModel {\r\n    return this._formulaProductBase;\r\n  }\r\n\r\n  set formulaProductBase(value: FormulaProductBaseModel) {\r\n    this._formulaProductBase = value;\r\n  }\r\n\r\n  get user(): UserModel {\r\n    return this._user;\r\n  }\r\n\r\n  set user(value: UserModel) {\r\n    this._user = value;\r\n  }\r\n\r\n  get canSize(): number {\r\n    return this._canSize;\r\n  }\r\n\r\n  set canSize(value: number) {\r\n    this._canSize = value;\r\n  }\r\n\r\n  get createdDate(): Date {\r\n    return this._createdDate;\r\n  }\r\n\r\n  set createdDate(value: Date) {\r\n    this._createdDate = value;\r\n  }\r\n\r\n  get status(): string {\r\n    return this._status;\r\n  }\r\n\r\n  set status(value: string) {\r\n    this._status = value;\r\n  }\r\n\r\n  get finishedDate(): Date {\r\n    return this._finishedDate;\r\n  }\r\n\r\n  set finishedDate(value: Date) {\r\n    this._finishedDate = value;\r\n  }\r\n}\r\n","import {CollectionModel} from './collection';\r\nimport {MachineModel} from './user.model';\r\nimport {CustomerModel} from './customer';\r\n\r\nexport class FormulaModel {\r\n  private _formulaId: number;\r\n  private _formulaCode: string;\r\n  private _formulaName: string;\r\n  private _collection: CollectionModel;\r\n  private _createdDate: Date;\r\n  private _createBy: any | null;\r\n  private _baseOnCan: number | 1;\r\n  private _machine: MachineModel;\r\n  private _approximateColor: string;\r\n  private _substrate: string;\r\n  private _comment: string;\r\n  private _listCustomer: CustomerModel[];\r\n\r\n  get baseOnCan(): number {\r\n    return this._baseOnCan;\r\n  }\r\n\r\n  set baseOnCan(value: number) {\r\n    this._baseOnCan = value;\r\n  }\r\n\r\n  get formulaId(): number {\r\n    return this._formulaId;\r\n  }\r\n\r\n  set formulaId(value: number) {\r\n    this._formulaId = value;\r\n  }\r\n\r\n  get formulaCode(): string {\r\n    return this._formulaCode;\r\n  }\r\n\r\n  set formulaCode(value: string) {\r\n    this._formulaCode = value;\r\n  }\r\n\r\n  get formulaName(): string {\r\n    return this._formulaName;\r\n  }\r\n\r\n  set formulaName(value: string) {\r\n    this._formulaName = value;\r\n  }\r\n\r\n  get collection(): CollectionModel {\r\n    return this._collection;\r\n  }\r\n\r\n  set collection(value: CollectionModel) {\r\n    this._collection = value;\r\n  }\r\n\r\n\r\n  get createdDate(): Date {\r\n    return this._createdDate;\r\n  }\r\n\r\n  set createdDate(value: Date) {\r\n    this._createdDate = value;\r\n  }\r\n\r\n  get createBy(): any | null {\r\n    return this._createBy;\r\n  }\r\n\r\n  set createBy(value: any | null) {\r\n    this._createBy = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n\r\n  get approximateColor(): string {\r\n    return this._approximateColor;\r\n  }\r\n\r\n  set approximateColor(value: string) {\r\n    this._approximateColor = value;\r\n  }\r\n\r\n  get substrate(): string {\r\n    return this._substrate;\r\n  }\r\n\r\n  set substrate(value: string) {\r\n    this._substrate = value;\r\n  }\r\n\r\n  get comment(): string {\r\n    return this._comment;\r\n  }\r\n\r\n  set comment(value: string) {\r\n    this._comment = value;\r\n  }\r\n\r\n  get listCustomer(): CustomerModel[] {\r\n    return this._listCustomer;\r\n  }\r\n\r\n  set listCustomer(value: CustomerModel[]) {\r\n    this._listCustomer = value;\r\n  }\r\n}\r\n","import {FormulaModel} from './formula';\r\nimport {ProductBaseModel} from './product_base';\r\nimport {ColorantModel} from './colorant';\r\n\r\nexport class FormulaProductBaseModel {\r\n  private _formulaProductBaseId: number;\r\n  private _formula: FormulaModel;\r\n  private _productBase: ProductBaseModel;\r\n\r\n  get formulaProductBaseId(): number {\r\n    return this._formulaProductBaseId;\r\n  }\r\n\r\n  set formulaProductBaseId(value: number) {\r\n    this._formulaProductBaseId = value;\r\n  }\r\n\r\n  get formula(): FormulaModel {\r\n    return this._formula;\r\n  }\r\n\r\n  set formula(value: FormulaModel) {\r\n    this._formula = value;\r\n  }\r\n\r\n  get productBase(): ProductBaseModel {\r\n    return this._productBase;\r\n  }\r\n\r\n  set productBase(value: ProductBaseModel) {\r\n    this._productBase = value;\r\n  }\r\n}\r\n\r\nexport class FormulaColourantModel {\r\n  private _formulaColourantId: number;\r\n  private _formula: FormulaModel;\r\n  private _colourant: ColorantModel;\r\n  private _quantity: number;\r\n\r\n  get formulaColourantId(): number {\r\n    return this._formulaColourantId;\r\n  }\r\n\r\n  set formulaColourantId(value: number) {\r\n    this._formulaColourantId = value;\r\n  }\r\n\r\n  get formula(): FormulaModel {\r\n    return this._formula;\r\n  }\r\n\r\n  set formula(value: FormulaModel) {\r\n    this._formula = value;\r\n  }\r\n\r\n  get colourant(): ColorantModel {\r\n    return this._colourant;\r\n  }\r\n\r\n  set colourant(value: ColorantModel) {\r\n    this._colourant = value;\r\n  }\r\n\r\n  get quantity(): number {\r\n    return this._quantity;\r\n  }\r\n\r\n  set quantity(value: number) {\r\n    this._quantity = value;\r\n  }\r\n}\r\n\r\n\r\nexport class ProductBaseCanModel {\r\n  private _productBaseCanId: number;\r\n  private _productBase: ProductBaseModel;\r\n  private _can: number;\r\n  private _unit: string;\r\n  private _pricePerCan: number;\r\n  private _barCode: number;\r\n  private _percentage: number;\r\n\r\n\r\n  get productBaseCanId(): number {\r\n    return this._productBaseCanId;\r\n  }\r\n\r\n  set productBaseCanId(value: number) {\r\n    this._productBaseCanId = value;\r\n  }\r\n\r\n  get productBase(): ProductBaseModel {\r\n    return this._productBase;\r\n  }\r\n\r\n  set productBase(value: ProductBaseModel) {\r\n    this._productBase = value;\r\n  }\r\n\r\n  get can(): number {\r\n    return this._can;\r\n  }\r\n\r\n  set can(value: number) {\r\n    this._can = value;\r\n  }\r\n\r\n  get unit(): string {\r\n    return this._unit;\r\n  }\r\n\r\n  set unit(value: string) {\r\n    this._unit = value;\r\n  }\r\n\r\n  get pricePerCan(): number {\r\n    return this._pricePerCan;\r\n  }\r\n\r\n  set pricePerCan(value: number) {\r\n    this._pricePerCan = value;\r\n  }\r\n\r\n  get barCode(): number {\r\n    return this._barCode;\r\n  }\r\n\r\n  set barCode(value: number) {\r\n    this._barCode = value;\r\n  }\r\n\r\n  get percentage(): number {\r\n    return this._percentage;\r\n  }\r\n\r\n  set percentage(value: number) {\r\n    this._percentage = value;\r\n  }\r\n}\r\n","import {MachineModel} from './user.model';\r\nimport {FormulaModel} from './formula';\r\nimport {CustomerModel} from './customer';\r\n\r\nexport class FormulaCustomerModel {\r\n  private _formulaCustomerId: number;\r\n  private _formula: FormulaModel;\r\n  private _customer: CustomerModel;\r\n\r\n  get formulaCustomerId(): number {\r\n    return this._formulaCustomerId;\r\n  }\r\n\r\n  set formulaCustomerId(value: number) {\r\n    this._formulaCustomerId = value;\r\n  }\r\n\r\n  get formula(): FormulaModel {\r\n    return this._formula;\r\n  }\r\n\r\n  set formula(value: FormulaModel) {\r\n    this._formula = value;\r\n  }\r\n\r\n  get customer(): CustomerModel {\r\n    return this._customer;\r\n  }\r\n\r\n  set customer(value: CustomerModel) {\r\n    this._customer = value;\r\n  }\r\n}\r\n","export class PagenationModel {\r\n  private _listItems: any[];\r\n  private _totalItem: number;\r\n  private _pageIndex: number;\r\n  private _maxPageItem: number;\r\n\r\n\r\n  constructor(listItems: any[], totalItem: number, pageIndex: number, maxPageItem: number) {\r\n    this._listItems = listItems;\r\n    this._totalItem = totalItem;\r\n    this._pageIndex = pageIndex;\r\n    this._maxPageItem = maxPageItem;\r\n  }\r\n\r\n  get listItems(): any[] {\r\n    return this._listItems;\r\n  }\r\n\r\n  set listItems(value: any[]) {\r\n    this._listItems = value;\r\n  }\r\n\r\n  get totalItem(): number {\r\n    return this._totalItem;\r\n  }\r\n\r\n  set totalItem(value: number) {\r\n    this._totalItem = value;\r\n  }\r\n\r\n  get pageIndex(): number {\r\n    return this._pageIndex;\r\n  }\r\n\r\n  set pageIndex(value: number) {\r\n    this._pageIndex = value;\r\n  }\r\n\r\n  get maxPageItem(): number {\r\n    return this._maxPageItem;\r\n  }\r\n\r\n  set maxPageItem(value: number) {\r\n    this._maxPageItem = value;\r\n  }\r\n}\r\n","export class ProductModel {\r\n  private _productId: number;\r\n  private _productCode: string;\r\n  private _productName: string;\r\n  private _createdDate: string;\r\n  private _createBy: any;\r\n\r\n  get productId(): number {\r\n    return this._productId;\r\n  }\r\n\r\n  set productId(value: number) {\r\n    this._productId = value;\r\n  }\r\n\r\n  get productCode(): string {\r\n    return this._productCode;\r\n  }\r\n\r\n  set productCode(value: string) {\r\n    this._productCode = value;\r\n  }\r\n\r\n  get productName(): string {\r\n    return this._productName;\r\n  }\r\n\r\n  set productName(value: string) {\r\n    this._productName = value;\r\n  }\r\n\r\n  get createdDate(): string {\r\n    return this._createdDate;\r\n  }\r\n\r\n  set createdDate(value: string) {\r\n    this._createdDate = value;\r\n  }\r\n\r\n  get createBy(): any {\r\n    return this._createBy;\r\n  }\r\n\r\n  set createBy(value: any) {\r\n    this._createBy = value;\r\n  }\r\n}\r\n","import {ProductModel} from './product';\r\nimport {BaseModel} from './base';\r\n\r\nexport class ProductBaseModel {\r\n  private _productBaseId: number;\r\n  private _product: ProductModel;\r\n  private _base: BaseModel;\r\n  private _rbgHex: string;\r\n  private _density: number;\r\n\r\n  get productBaseId(): number {\r\n    return this._productBaseId;\r\n  }\r\n\r\n  set productBaseId(value: number) {\r\n    this._productBaseId = value;\r\n  }\r\n\r\n  get product(): ProductModel {\r\n    return this._product;\r\n  }\r\n\r\n  set product(value: ProductModel) {\r\n    this._product = value;\r\n  }\r\n\r\n  get base(): BaseModel {\r\n    return this._base;\r\n  }\r\n\r\n  set base(value: BaseModel) {\r\n    this._base = value;\r\n  }\r\n\r\n  get rbgHex(): string {\r\n    return this._rbgHex;\r\n  }\r\n\r\n  set rbgHex(value: string) {\r\n    this._rbgHex = value;\r\n  }\r\n\r\n  get density(): number {\r\n    return this._density;\r\n  }\r\n\r\n  set density(value: number) {\r\n    this._density = value;\r\n  }\r\n}\r\n","import {ColorantModel} from './colorant';\r\n\r\nexport class MachineModel {\r\n  private _machineId: number;\r\n  private _code: string;\r\n  private _name: string;\r\n  private _minQuantity: number;\r\n  private _maxQuantity: number;\r\n  private _warningQuantity: number;\r\n\r\n  get machineId(): number {\r\n    return this._machineId;\r\n  }\r\n\r\n  set machineId(value: number) {\r\n    this._machineId = value;\r\n  }\r\n\r\n  get code(): string {\r\n    return this._code;\r\n  }\r\n\r\n  set code(value: string) {\r\n    this._code = value;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  get minQuantity(): number {\r\n    return this._minQuantity;\r\n  }\r\n\r\n  set minQuantity(value: number) {\r\n    this._minQuantity = value;\r\n  }\r\n\r\n  get maxQuantity(): number {\r\n    return this._maxQuantity;\r\n  }\r\n\r\n  set maxQuantity(value: number) {\r\n    this._maxQuantity = value;\r\n  }\r\n\r\n  get warningQuantity(): number {\r\n    return this._warningQuantity;\r\n  }\r\n\r\n  set warningQuantity(value: number) {\r\n    this._warningQuantity = value;\r\n  }\r\n}\r\n\r\nexport class RoleModel {\r\n  private _roleId:number;\r\n  private _roleName: string;\r\n\r\n\r\n  get roleId(): number {\r\n    return this._roleId;\r\n  }\r\n\r\n  set roleId(value: number) {\r\n    this._roleId = value;\r\n  }\r\n\r\n  get roleName(): string {\r\n    return this._roleName;\r\n  }\r\n\r\n  set roleName(value: string) {\r\n    this._roleName = value;\r\n  }\r\n}\r\n\r\nexport class UserModel {\r\n  private _userId: string;\r\n  private _userName: string;\r\n  private _role: RoleModel;\r\n  private _machine: MachineModel;\r\n\r\n  get userId(): string {\r\n    return this._userId;\r\n  }\r\n\r\n  set userId(value: string) {\r\n    this._userId = value;\r\n  }\r\n\r\n  get userName(): string {\r\n    return this._userName;\r\n  }\r\n\r\n  set userName(value: string) {\r\n    this._userName = value;\r\n  }\r\n\r\n  get role(): RoleModel {\r\n    return this._role;\r\n  }\r\n\r\n  set role(value: RoleModel) {\r\n    this._role = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n}\r\n\r\nexport class MachineColourantModel {\r\n  private _machineColourantId: number;\r\n  private _machine: MachineModel;\r\n  private _colourant: ColorantModel;\r\n  private _quantity: number;\r\n\r\n  get machineColourantId(): number {\r\n    return this._machineColourantId;\r\n  }\r\n\r\n  set machineColourantId(value: number) {\r\n    this._machineColourantId = value;\r\n  }\r\n\r\n  get machine(): MachineModel {\r\n    return this._machine;\r\n  }\r\n\r\n  set machine(value: MachineModel) {\r\n    this._machine = value;\r\n  }\r\n\r\n  get colourant(): ColorantModel {\r\n    return this._colourant;\r\n  }\r\n\r\n  set colourant(value: ColorantModel) {\r\n    this._colourant = value;\r\n  }\r\n\r\n  get quantity(): number {\r\n    return this._quantity;\r\n  }\r\n\r\n  set quantity(value: number) {\r\n    this._quantity = value;\r\n  }\r\n}\r\n\r\n\r\nexport class ResponseMessageModel {\r\n  private _type: string;\r\n  private _message: string;\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  set type(value: string) {\r\n    this._type = value;\r\n  }\r\n\r\n  get message(): string {\r\n    return this._message;\r\n  }\r\n\r\n  set message(value: string) {\r\n    this._message = value;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport {environment} from 'src/environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class BaseService {\r\n\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  getListBaseFromServer() {\r\n    return this.http.get(environment.settings.serverendpoint + 'base/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listBases = [];\r\n        if (data) {\r\n          for (const base of data) {\r\n            listBases.push(ConvertModelUtils.convertToBaseModel(base));\r\n          }\r\n        }\r\n        return listBases;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ModalService {\r\n  private modals: any[] = [];\r\n\r\n  constructor() { }\r\n\r\n  add(modal: any) {\r\n    // add modal to array of active modals\r\n    this.modals.push(modal);\r\n  }\r\n\r\n  remove(id: string) {\r\n    // remove modal from array of active modals\r\n    this.modals = this.modals.filter(x => x.id !== id);\r\n  }\r\n\r\n  open(id: string) {\r\n    // open modal specified by id\r\n    const modal: any = this.modals.filter(x => x.id === id)[0];\r\n    modal.open();\r\n  }\r\n\r\n  close(id: string) {\r\n    // close modal specified by id\r\n    const modal: any = this.modals.filter(x => x.id === id)[0];\r\n    modal.close();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {CollectionModel} from '../../models/collection';\r\nimport {MachineModel, UserModel} from '../../models/user.model';\r\nimport {StoreService} from '../store/store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CollectionService {\r\n  constructor(private http: HttpService, private storeService: StoreService) {\r\n  }\r\n\r\n  getListItems() {\r\n    return this.http.get(environment.settings.serverendpoint + 'collection/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listItems = [];\r\n        if (data) {\r\n          for (const collection of data) {\r\n            listItems.push(ConvertModelUtils.convertCollectionModel(collection));\r\n          }\r\n        }\r\n        return listItems;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  findById(collectionId) {\r\n    return this.http.get(environment.settings.serverendpoint + 'collection/findById/' + collectionId).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertCollectionModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateOrSavingCollection(collection: CollectionModel) {\r\n    const machine = this.storeService.getMachineData();\r\n    const dt = {\r\n      collectionId: collection.collectionId,\r\n      collectionName: collection.collectionName,\r\n      description: collection.description,\r\n      machine: {machineId: machine.machineId}\r\n    };\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'collection/save', dt).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToMachineModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteCollection(collectionId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'collection/delete/' + collectionId).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToResponseMessageModel(data);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {ColorantModel} from '../../models/colorant';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ColourantService {\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  search(code: string, name: string) {\r\n    return this.getListItems();\r\n    // return this.listItems.filter(filterColor({code: code, name: name}));\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    return this.getListItems();\r\n\r\n  }\r\n\r\n  getListItems() {\r\n    return this.http.get(environment.settings.serverendpoint + 'colourant/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listColourant = [];\r\n        if (data) {\r\n          for (const colorant of data) {\r\n            listColourant.push(this.convertColourantToDTO(colorant));\r\n          }\r\n        }\r\n        return listColourant;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  private convertColourantToDTO(object: any) {\r\n    const colourantModel = new ColorantModel();\r\n    colourantModel.colourantId = object.colourantId;\r\n    colourantModel.colourantCode = object.colourantCode;\r\n    colourantModel.colourantName = object.colourantName;\r\n    colourantModel.density = object.density;\r\n    colourantModel.pricePerUnit = object.pricePerUnit;\r\n    colourantModel.surcharge = object.surcharge;\r\n    colourantModel.rbgHex = object.rbgHex;\r\n    colourantModel.kind = object.kind;\r\n    return colourantModel;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport {StoreService} from '../store/store.service';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {CustomerModel} from '../../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private http: HttpService, private storeService: StoreService) { }\r\n\r\n  findAll() {\r\n    const machine = this.storeService.getMachineData();\r\n    if (machine != null && machine.machineId > 0) {\r\n      return this.http.get(environment.settings.serverendpoint + 'customer/findAll/' + machine.machineId).pipe(\r\n        map((data: Array<any>) => {\r\n          const listCustomer = [];\r\n          if (data) {\r\n            for (const customer of data) {\r\n              listCustomer.push(ConvertModelUtils.convertToCustomerModel(customer));\r\n            }\r\n          }\r\n          return listCustomer;\r\n        }), catchError(e => {\r\n          return [];\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  saveOrUpdate(dbItem: CustomerModel) {\r\n    const machine = this.storeService.getMachineData();\r\n    const dt = ConvertModelUtils.convertToCustomerDBItem(dbItem,  machine);\r\n    return this.http.post(environment.settings.serverendpoint + 'customer/save', dt).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToMachineModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteCustomer(customerId: number) {\r\n    const machine = this.storeService.getMachineData();\r\n    const dt = {\r\n      customerId: customerId,\r\n      machine: {machineId: machine.machineId}\r\n    };\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'customer/delete', dt).pipe(\r\n      map((data: any) => {\r\n        console.log(data);\r\n        return ConvertModelUtils.convertToResponseMessageModel(data);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MachineService} from '../machine/machine.service';\r\nimport {Router} from '@angular/router';\r\nimport {StoreService} from '../store/store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DashboardService {\r\n\r\n  constructor(private router: Router, private storeService: StoreService, private machineService: MachineService) {\r\n  }\r\n\r\n  validateMachineData() {\r\n    const machine = this.storeService.getMachineData();\r\n    if (machine != null) {\r\n      this.machineService.fetchDataFromServer().subscribe((data: any) => {\r\n        let isLowColourant = false;\r\n        const listMachineColourants = data;\r\n        if (listMachineColourants == null || listMachineColourants.length === 0) {\r\n          isLowColourant = true;\r\n        } else {\r\n          for (const colourantMachine of listMachineColourants) {\r\n            if (colourantMachine.quantity < machine.warningQuantity) {\r\n              isLowColourant = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isLowColourant) {\r\n          this.router.navigate(['/dashboard/machine']);\r\n        } else {\r\n          this.router.navigate(['/dashboard/formula']);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  validateDispenseTask(numberCan: number) {\r\n\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  DispenseTaskModel, DispenseTaskStepModel,\r\n} from '../../models/dispense.task.model';\r\nimport {MachineService} from '../machine/machine.service';\r\nimport {FormulaProductBaseModel} from '../../models/formula_product_base';\r\nimport {MAP_TASK_STATE} from '../../utils/convert-models-utils';\r\nimport {MAP_DISPENSE_TASK_STATE, MAP_DISPENSE_TASK_STEP_TYPE} from '../../models/dispense.task.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DispenseTaskService {\r\n  currentTask: DispenseTaskModel | null = null;\r\n  currentTaskStep: DispenseTaskStepModel | null = null;\r\n  listDispenseTask: DispenseTaskModel[];\r\n  status: string;\r\n\r\n  constructor(private machineService: MachineService) {\r\n    this.listDispenseTask = [];\r\n    this.currentTask = null;\r\n    this.status = MAP_DISPENSE_TASK_STATE.WAITING;\r\n  }\r\n\r\n  runDispenseTask(_dispenseTask: DispenseTaskModel) {\r\n    this.listDispenseTask.push(_dispenseTask);\r\n    this.currentTask = _dispenseTask;\r\n    this.processDispenseTask();\r\n  }\r\n\r\n  processDispenseTask(): void {\r\n    if (this.currentTask != null) {\r\n      this.status = MAP_TASK_STATE.IN_PROGRESS;\r\n      this.currentTaskStep = getInProgressStepData(this.currentTask);\r\n\r\n      this.currentTask.status = MAP_TASK_STATE.IN_PROGRESS;\r\n      this.currentTaskStep.status = MAP_TASK_STATE.IN_PROGRESS;\r\n      const waitTime = this.currentTaskStep.totalProcess;\r\n\r\n      setTimeout(() => {\r\n        this.notifyInDoneDispenseStepAction();\r\n      }, waitTime);\r\n    }\r\n\r\n    function getInProgressStepData(_dispenseTask: DispenseTaskModel) {\r\n      for (const step of _dispenseTask.childrenTask) {\r\n        if (step.status === MAP_DISPENSE_TASK_STATE.WAITING) {\r\n          return step;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  notifyInDoneDispenseStepAction() {\r\n    if (this.currentTaskStep != null) {\r\n      if (this.currentTaskStep.type === MAP_DISPENSE_TASK_STEP_TYPE.PREPARE) {\r\n        // do nothing\r\n        this.currentTaskStep.status = MAP_DISPENSE_TASK_STATE.DONE;\r\n        if (this.currentTaskStep.callBackFunction != null) {\r\n          this.currentTaskStep.callBackFunction(this.currentTask, this.currentTaskStep);\r\n        }\r\n        this.processDispenseTask();\r\n\r\n      } else if (this.currentTaskStep.type === MAP_DISPENSE_TASK_STEP_TYPE.PUMPING) {\r\n        this.currentTaskStep.status = MAP_DISPENSE_TASK_STATE.DONE;\r\n\r\n        this.recordDispenseTaskLog(this.currentTaskStep.type, this.currentTaskStep, this.currentTask.taskId);\r\n\r\n        if (this.currentTaskStep.callBackFunction != null) {\r\n          this.currentTaskStep.callBackFunction(this.currentTask, this.currentTaskStep);\r\n        }\r\n\r\n        this.processDispenseTask();\r\n\r\n      } else if (this.currentTaskStep.type === MAP_DISPENSE_TASK_STEP_TYPE.FINISHED) {\r\n        this.updateDispenseTaskStatus(MAP_DISPENSE_TASK_STATE.DONE, this.currentTask.taskId, this.currentTask.taskData.formulaProductBase,\r\n          this.currentTask.taskData.canSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  recordDispenseTaskLog(type: string, data: DispenseTaskStepModel, taskId: number): void {\r\n    if (type === MAP_DISPENSE_TASK_STEP_TYPE.PUMPING) {\r\n      this.machineService.subtractionColourantMachine(data.taskData.colorant, data.taskData.quantity, taskId);\r\n    }\r\n  }\r\n\r\n  updateDispenseTaskStatus(type: string, taskId: number, formulaProductBase: FormulaProductBaseModel, canSize: number) {\r\n    this.machineService.recordDispenseFormulaProductBase(type, taskId, formulaProductBase, canSize).subscribe((datas) => {\r\n      // update current data\r\n      this.currentTaskStep.status = MAP_DISPENSE_TASK_STATE.DONE;\r\n      this.currentTask.status = MAP_DISPENSE_TASK_STATE.DONE;\r\n      this.status = MAP_DISPENSE_TASK_STATE.WAITING;\r\n\r\n      if (this.currentTaskStep.callBackFunction != null) {\r\n        this.currentTaskStep.callBackFunction(this.currentTask, this.currentTaskStep);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {FormulaModel} from '../../models/formula';\r\nimport {FormulaColourantModel, FormulaProductBaseModel} from '../../models/formula_product_base';\r\nimport {StoreService} from '../store/store.service';\r\nimport {ProductBaseModel} from '../../models/product_base';\r\nimport {CustomerSelectedModel} from '../../models/customer';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FormulaService {\r\n  listFormula: FormulaModel[] = [];\r\n  listFormulaProductBase: FormulaProductBaseModel[] = [];\r\n\r\n  constructor(private http: HttpService, private storeService: StoreService) {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    this.getALl();\r\n    this.getAllFormulaProductBase();\r\n  }\r\n\r\n  getAllFormulaProductBase() {\r\n    return this.http.get(environment.settings.serverendpoint + 'formula_product_base/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listFormulaProductBase = [];\r\n        if (data) {\r\n          for (const fpb of data) {\r\n            listFormulaProductBase.push(ConvertModelUtils.convertFormulaProductBaseModel(fpb));\r\n          }\r\n        }\r\n\r\n        this.listFormulaProductBase = listFormulaProductBase;\r\n        return listFormulaProductBase;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  getALl() {\r\n    return this.http.get(environment.settings.serverendpoint + 'formula/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data) {\r\n          for (const formula of data) {\r\n            result.push(ConvertModelUtils.convertToFormulaModel(formula));\r\n          }\r\n        }\r\n        this.listFormula = result;\r\n        return result;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  findAllByCustomer() {\r\n    const machine = this.storeService.getMachineData();\r\n    return this.http.get(environment.settings.serverendpoint + 'formula-customer/getAll/' + machine.machineId).pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data) {\r\n          for (const formula of data) {\r\n            result.push(ConvertModelUtils.convertToFormulaCustomerModel(formula));\r\n          }\r\n        }\r\n        return result;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  // postData() {\r\n  //   const dt = {\r\n  //     username: \"Haukute\",\r\n  //     password: \"123456\"\r\n  //   };\r\n  //   debugger;\r\n  //   this.http.post(environment.settings.serverendpoint + 'login', dt).pipe(\r\n  //     map(datas => {\r\n  //       console.log(datas);\r\n  //     }),\r\n  //   ).subscribe();\r\n  // }\r\n  //\r\n  // postData1() {\r\n  //   const dt = {\r\n  //     username: \"Haukute\",\r\n  //     password: \"123456\"\r\n  //   };\r\n  //   debugger;\r\n  //   this.http.post(environment.settings.serverendpoint + 'login_test', dt).pipe(\r\n  //     map(datas => {\r\n  //       console.log(datas);\r\n  //     }),\r\n  //   ).subscribe();\r\n  // }\r\n\r\n  findById(formulaId: number) {\r\n    const result = this.listFormula.filter(filterById);\r\n    return result != null && result.length > 0 ? Object.assign({}, result[0]) : null;\r\n\r\n    function filterById(item, index, array) {\r\n      return (item.formulaId === formulaId);\r\n    }\r\n  }\r\n\r\n  getListColorantOfFormula(formulaId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'formula/getColourants/' + formulaId).pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            result.push(ConvertModelUtils.convertToFormulaColourantModel(item));\r\n          }\r\n        }\r\n        return result;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  getListProductBaseCan(productBaseId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'product_base_can/findById/' + productBaseId).pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            result.push(ConvertModelUtils.convertToProductBaseCanModel(item));\r\n          }\r\n        }\r\n        return result;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  findFormulaProductBaseById(formulaProductBaseId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'formula_product_base/findById/' + formulaProductBaseId).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToFormulaProductBaseModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  saveOrUpdateFormulaData(formulaProductBaseId: number, formula: FormulaModel, productBase: ProductBaseModel,\r\n                          listColourants: FormulaColourantModel[], listCustomerSelected: CustomerSelectedModel[]) {\r\n    const savingItem = ConvertModelUtils.convertToSavingFormulaProductBaseDBItem(formulaProductBaseId, formula, productBase,\r\n      this.storeService.getMachineData(), listColourants, listCustomerSelected);\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'machine_formula/saveOrUpdate', savingItem).pipe(\r\n      map((data: any) => {\r\n        console.log(data);\r\n\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n// import 'rxjs/add/observable/of';\r\n\r\nexport interface IssueDTO {\r\n  title: string;\r\n  responsive: string;\r\n  description: string;\r\n  severity: string;\r\n  status: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IssueService {\r\n  uri = 'http://localhost:4000';\r\n  listIssues: IssueDTO[] = [];\r\n\r\n  constructor(private  http: HttpClient) {\r\n\r\n  }\r\n\r\n  getIssues(): IssueDTO[] {\r\n    this.listIssues.push(this.generateIssue('Title 1', 'response 1', 'description 1', 'severity', 'status 1'));\r\n    this.listIssues.push(this.generateIssue('Title 2', 'response 2', 'description 2', 'severity', 'status 2'));\r\n    this.listIssues.push(this.generateIssue('Title 3', 'response 3', 'description 3', 'severity', 'status 3'));\r\n    this.listIssues.push(this.generateIssue('Title 4', 'response 4', 'description 4', 'severity', 'status 3'));\r\n\r\n    return this.listIssues;\r\n\r\n    // return this.http.get(`${this.uri}`)\r\n  }\r\n\r\n  getIssueById(id) {\r\n    return this.http.get(`${this.uri}/issues/${id}`);\r\n  }\r\n\r\n  addIssue(title, responsive, description, severity) {\r\n    const issue = {\r\n      title: title, responsive: responsive, description: description, severity: severity\r\n    };\r\n\r\n    return this.http.post(`${this.uri}/issues/add`, issue);\r\n  }\r\n\r\n  updateIssue(id, title, responsive, description, severity, status) {\r\n    const issue = {\r\n      title: title,\r\n      responsive: responsive,\r\n      description: description,\r\n      severity: severity,\r\n      status: status\r\n    };\r\n\r\n    return this.http.post(`${this.uri}/issues/update/${id}`, issue);\r\n  }\r\n\r\n  deleteIssue(id) {\r\n    return this.http.get(`${this.uri}/issues/delete/${id}`);\r\n\r\n  }\r\n\r\n  generateIssue(title, responsive, description, severity, status) {\r\n    return {\r\n      title: title,\r\n      responsive: responsive,\r\n      description: description,\r\n      severity: severity,\r\n      status: status\r\n    };\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport {MachineColourantModel, MachineModel} from '../../models/user.model';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Router} from '@angular/router';\r\nimport {ColorantModel} from '../../models/colorant';\r\nimport {FormulaColourantModel, FormulaProductBaseModel} from '../../models/formula_product_base';\r\nimport {FormulaModel} from '../../models/formula';\r\nimport {StoreService} from '../store/store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MachineService {\r\n  machine: MachineModel = null;\r\n  listMachineColourants: MachineColourantModel[];\r\n\r\n  constructor(private http: HttpService, private storeService: StoreService, private router: Router) {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    this.machine = this.storeService.getMachineData();\r\n\r\n    if (this.machine != null) {\r\n      this.fetchDataFromServer().subscribe((data: any) => {\r\n        this.listMachineColourants = data;\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchDataFromServer() {\r\n   this.getCurrentMachine();\r\n\r\n    return this.http.get(environment.settings.serverendpoint + 'machine/getColourants/' + this.machine.machineId).pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data && data.length > 0) {\r\n          for (const item of data) {\r\n            result.push(ConvertModelUtils.convertToMachineColourantModel(item));\r\n          }\r\n        }\r\n        return result;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  getListColorantOfMachine() {\r\n    return this.listMachineColourants;\r\n  }\r\n\r\n  getCurrentMachine() {\r\n    if (this.machine == null) {\r\n      this.machine = this.storeService.getMachineData();\r\n    }\r\n    return this.machine;\r\n  }\r\n\r\n  updateColourantMachineData(machine: MachineModel, colourant: ColorantModel, addedAmount: number) {\r\n    const dt = {\r\n      machine: {machineId: machine.machineId},\r\n      colourant: {colourantId: colourant.colourantId},\r\n      quantity: addedAmount\r\n    };\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'machine_colour/update', dt).pipe(\r\n      map((data: Array<any>) => {\r\n        const result = [];\r\n        if (data && data.length > 0) {\r\n          for (const item of data) {\r\n            result.push(ConvertModelUtils.convertToMachineColourantModel(item));\r\n          }\r\n        }\r\n        return result;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  subtractionColourantMachine(colorant: ColorantModel, quantity: number, taskId: number) {\r\n    const machine = this.getCurrentMachine();\r\n\r\n    const dt = {\r\n      machine: {machineId: machine.machineId},\r\n      colourant: {colourantId: colorant.colourantId},\r\n      quantity: quantity,\r\n      machineFormulaProductBaseId: taskId\r\n    };\r\n    this.http.post(environment.settings.serverendpoint + 'machine_colour/subtraction', dt).pipe().subscribe();\r\n  }\r\n\r\n  recordDispenseFormulaProductBase(status: string, taskId, formulaProductBase: FormulaProductBaseModel, quantity: number) {\r\n    const machine = this.storeService.getMachineData();\r\n    const user = this.storeService.getLoginUserData();\r\n\r\n    const dt = {\r\n      machineFormulaProductBaseId: taskId,\r\n      formulaProductBase: {formulaProductBaseId: formulaProductBase.formulaProductBaseId},\r\n      user: {userId: user.userId},\r\n      machine: {machineId: machine.machineId},\r\n      quantity: quantity,\r\n      status: status\r\n    };\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'machine_formula/record', dt);\r\n  }\r\n\r\n  findAllDispenseTask() {\r\n    this.getCurrentMachine();\r\n\r\n    return this.http.get(environment.settings.serverendpoint + 'machine_formula/findAll/' + this.machine.machineId).pipe(\r\n      map((data: Array<any>) => {\r\n        const listDispenseTaskLog = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            listDispenseTaskLog.push(ConvertModelUtils.convertToDispenseFormulaProductBaseModel(item));\r\n          }\r\n        }\r\n        return listDispenseTaskLog;\r\n      }), catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  findDispenseTaskById(taskId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'machine_formula/findById/' + taskId).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToFormulaProductBaseModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validate số lượng colourant của machine có còn đủ để pha màu với cansize này hay không\r\n   * listFormulaColorant: là default colourant khi chọn formula, chưa nhân cansize\r\n   * canSize: số lít\r\n   */\r\n  validateQuantityColourant(canSize: number, listFormulaColorant: FormulaColourantModel[], formular: FormulaModel) {\r\n    this.getCurrentMachine();\r\n\r\n    const machineId = this.machine.machineId;\r\n    const baseOnCan = formular.baseOnCan ? formular.baseOnCan : 1; // nếu undefined thì default là 1;\r\n    return this.http.get(environment.settings.serverendpoint + 'machine/getColourants/' + machineId).pipe(\r\n      map((mColours: Array<any>) => {\r\n        // list colourant hiện có của machine\r\n        const res = []; // kết quả trả về, danh sách màu không đủ\r\n        const mapExistColours = {}; // tạo map colour với key là colourcode, value là số lượng còn lại\r\n        mColours.map(c => {\r\n          mapExistColours[c.colourant.colourantCode] = c.quantity;\r\n        });\r\n        listFormulaColorant.map(lf => {\r\n          const colourCode = lf.colourant.colourantCode;\r\n          // số lượng mong đợi: lấy số ml cần có, chia cho baseOnCan của formula và nhân cho số lit cansize\r\n          const expectQuantity = ((lf.quantity / baseOnCan) * canSize).toFixed(2);\r\n          // nếu trong máy không còn màu này, hoặc còn nhưng nhỏ hơn số lượng mong đợi\r\n          if (!mapExistColours[colourCode] || mapExistColours[colourCode] < expectQuantity) {\r\n            res.push(colourCode);\r\n          }\r\n        });\r\n        return res;\r\n      })\r\n    );\r\n  }\r\n\r\n  updateSettingMachine(minQuantity: number, warningQuantity: number) {\r\n    this.getCurrentMachine();\r\n\r\n    const dt = {\r\n      machineId: this.machine.machineId,\r\n      minQuantity: minQuantity,\r\n      warningQuantity: warningQuantity,\r\n    };\r\n\r\n    return this.http.post(environment.settings.serverendpoint + 'machine/update', dt).pipe(\r\n      map((data: any) => {\r\n        return ConvertModelUtils.convertToMachineModel(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateMachineLocal(machine: MachineModel) {\r\n    this.machine = machine;\r\n    this.storeService.updateMachineData(this.machine);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Sort} from '@angular/material';\r\nimport {environment} from '../../../environments/environment';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport {ProductModel} from '../../models/product';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {BaseModel} from '../../models/base';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProductService {\r\n  listItems: ProductModel[] = [];\r\n  sortedData: ProductModel[] = null;\r\n\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  getListItems() {\r\n    return this.http.get(environment.settings.serverendpoint + 'product/getAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listItems = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            listItems.push(ConvertModelUtils.convertToProductModel(item));\r\n          }\r\n        }\r\n        return listItems;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  viewProductDetail(productId: number): any {\r\n    return this.http.get(environment.settings.serverendpoint + 'product/view-detail/' + productId);\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.listItems.slice();\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'productCode': return compare(a.productCode, b.productCode, isAsc);\r\n        case 'productName': return compare(a.productName, b.productName, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n    function compare(a: string | number, b: string | number, isAsc) {\r\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n    }\r\n  }\r\n\r\n  getListProductBase() {\r\n    return this.http.get(environment.settings.serverendpoint + 'product-base/findAll').pipe(\r\n      map((data: Array<any>) => {\r\n        const listItems = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            listItems.push(ConvertModelUtils.convertToProductBaseModel(item));\r\n          }\r\n        }\r\n        return listItems;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n\r\n  getListProductBaseFromProduct(productId: number) {\r\n    return this.http.get(environment.settings.serverendpoint + 'product-base/findByProduct/' + productId).pipe(\r\n      map((data: Array<any>) => {\r\n        const listItems = [];\r\n        if (data) {\r\n          for (const item of data) {\r\n            listItems.push(ConvertModelUtils.convertToProductBaseModel(item));\r\n          }\r\n        }\r\n        return listItems;\r\n      }),\r\n      catchError(e => {\r\n        return [];\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductBaseService {\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MachineModel, UserModel} from '../../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoreService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  loginUser: UserModel = null;\r\n  machine: MachineModel = null;\r\n\r\n  updateLoginUserData(loginUser: UserModel) {\r\n    this.loginUser = loginUser;\r\n  }\r\n\r\n  updateMachineData(machine: MachineModel) {\r\n    this.machine = machine;\r\n  }\r\n\r\n  getLoginUserData(): UserModel {\r\n    return this.loginUser;\r\n  }\r\n\r\n  getMachineData(): MachineModel {\r\n    return this.machine;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CookieService} from 'ng-cookie';\r\nimport {Router} from '@angular/router';\r\nimport {map} from 'rxjs/internal/operators';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpService} from '../../shared/http/services/http.service';\r\nimport ConvertModelUtils from '../../utils/convert-models-utils';\r\nimport {UserModel} from '../../models/user.model';\r\nimport {StoreService} from '../store/store.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  isLogin: boolean = false;\r\n  userDTO: UserModel = null;\r\n  errorMessage: string;\r\n\r\n  constructor(private http: HttpService, private router: Router, private cookieService: CookieService, private storeService: StoreService) {\r\n    this.isAuthenticated();\r\n  }\r\n\r\n  isAuthenticated() {\r\n    if (this.cookieService.get_cookie('username') && this.cookieService.get_cookie('password')) {\r\n      this.login(this.cookieService.get_cookie('username'), this.cookieService.get_cookie('password'));\r\n    }\r\n  }\r\n\r\n  login(userName: string, password: string) {\r\n    const dt = {\r\n      userName: userName,\r\n      password: password,\r\n    };\r\n\r\n    this.http.post(environment.settings.serverendpoint + 'login_test', dt).pipe(\r\n      map(datas => {\r\n        if (datas != null) {\r\n          this.isLogin = true;\r\n          this.userDTO = ConvertModelUtils.convertToUserModel(datas);\r\n          this.storeService.updateLoginUserData(this.userDTO);\r\n          this.storeService.updateMachineData(this.userDTO.machine);\r\n          this.cookieService.set_cookie('username', userName, 1);\r\n          this.cookieService.set_cookie('password', password, 1);\r\n          this.router.navigate(['/dashboard']);\r\n          this.errorMessage = null;\r\n        } else {\r\n          this.userDTO = null;\r\n          this.isLogin = false;\r\n          this.errorMessage = 'Username or Password is incorrect! Please try again';\r\n          alert('Username or Password is incorrect! Please try again');\r\n        }\r\n      }),\r\n    ).subscribe();\r\n  }\r\n\r\n  getLoginUser(): UserModel | null {\r\n    return this.userDTO;\r\n  }\r\n\r\n  logOut() {\r\n    this.clearData();\r\n    this.router.navigate([`../login`]);\r\n  }\r\n\r\n  clearData() {\r\n    this.userDTO = null;\r\n    this.isLogin = false;\r\n    this.cookieService.delete_cookie('username');\r\n    this.cookieService.delete_cookie('token');\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders} from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {HttpService} from './services/http.service';\r\nimport {AppHttpInterceptor} from './interceptor/https-interceptor';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n  ],\r\n  providers: [\r\n    HttpService,\r\n    AppHttpInterceptor,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AppHttpInterceptor,\r\n      multi: true\r\n    }],\r\n  exports: []\r\n})\r\nexport class HttpModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: HttpModule,\r\n      providers: [\r\n        HttpService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n// import { AuthService } from 'src/app/auth/auth.service';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable ({\r\n  providedIn: 'root'\r\n})\r\nexport class AppHttpInterceptor implements HttpInterceptor {\r\n  // constructor(private authService: AuthService) {\r\n  // }\r\n  constructor() {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let authReq = null;\r\n    // var token = this.authService.getToken();\r\n    // if (token) {\r\n      req.headers.set(\"Access-Control-Allow-Origin\", \"*\");\r\n      req.headers.set(\"ContentType \", \"application/json\");\r\n      authReq = req.clone({ headers: req.headers });\r\n    // } else {\r\n    //   authReq = req.clone();\r\n    // }\r\n    // Clone the request to add the new header.\r\n    //send the newly created request\r\n    return next.handle(authReq)\r\n      .pipe(\r\n        catchError(this.handlePdmHttpError.bind(this))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle http errors\r\n   * `caught`, which is the source observable, in case you'd like to \"retry\" that observable by returning it again.\r\n   * Whatever observable\r\n   *  is returned by the `selector` will be used to continue the observable chain.\r\n   *\r\n   * @private\r\n   * @param {(Response | any)} error\r\n   * @param {Observable} caught\r\n   * @returns {Observable<any>}\r\n   * @memberof HttpService\r\n   */\r\n  private handleHttpError(error: HttpErrorResponse | any, caught?: Observable<any>): Observable<any> {\r\n    // if (error.status == 401) {\r\n    //   this.authService.logout();\r\n    // }\r\n    let message: string;\r\n    if (error instanceof HttpErrorResponse) {\r\n      message = error.message;\r\n    } else {\r\n      message = error.message ? error.message : error.toString();\r\n    }\r\n    return throwError(message);\r\n  }\r\n\r\n  /**\r\n   * Handle pdm http errors\r\n   * `caught`, which is the source observable, in case you'd like to \"retry\" that observable by returning it again.\r\n   * Whatever observable\r\n   *  is returned by the `selector` will be used to continue the observable chain.\r\n   *\r\n   * @private\r\n   * @param {(Response | any)} error\r\n   * @param {Observable} caught\r\n   * @returns {Observable<any>}\r\n   * @memberof HttpService\r\n   */\r\n  handlePdmHttpError(error: HttpErrorResponse | any, caught?: Observable<any>): Observable<any> {\r\n    // if (error.status == 401) {\r\n    //   this.authService.logout();\r\n    // }\r\n    let message: string;\r\n    if (error instanceof HttpErrorResponse) {\r\n      // error from loopback\r\n      if (error.error.error) {\r\n        message = error.error.error.message;\r\n      } else {\r\n        message = error.message;\r\n      }\r\n    } else {\r\n      message = error.message ? error.message : error.toString();\r\n    }\r\n    return throwError(message);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class HttpService extends HttpClient {\r\n\r\n}\r\n","import {FormulaModel} from '../models/formula';\r\nimport {CollectionModel} from '../models/collection';\r\nimport {FormulaColourantModel, FormulaProductBaseModel, ProductBaseCanModel} from '../models/formula_product_base';\r\nimport {ProductBaseModel} from '../models/product_base';\r\nimport {ProductModel} from '../models/product';\r\nimport {BaseModel} from '../models/base';\r\nimport {ColorantModel} from '../models/colorant';\r\nimport {MachineColourantModel, MachineModel, ResponseMessageModel, RoleModel, UserModel} from '../models/user.model';\r\nimport {MachineFormulaProductBaseLogModel} from '../models/dispense.task.model';\r\nimport {CustomerModel, CustomerSelectedModel} from '../models/customer';\r\nimport {FormulaCustomerModel} from '../models/formulacustomer';\r\n\r\nexport interface TaskInterface {\r\n  taskId: number;\r\n  type: string;\r\n  status: string;\r\n  process: number;\r\n  totalProcess: number;\r\n  callBackFunction;\r\n}\r\n\r\nexport const MAP_TASK_STATE = {\r\n  SLEEP: 'SLEEP',\r\n  IN_PROGRESS: 'IN-PROGRESS',\r\n  FINISHED: 'FINISHED'\r\n};\r\n\r\nexport default class ConvertModelUtils {\r\n  static convertToFormulaModel(object: any): FormulaModel {\r\n    const formula = new FormulaModel();\r\n    formula.formulaId = object.formulaId;\r\n    formula.formulaCode = object.formulaCode;\r\n    formula.formulaName = object.formulaName;\r\n    formula.collection = ConvertModelUtils.convertCollectionModel(object.collection);\r\n    formula.createdDate = object.createdDate;\r\n    formula.createBy = object.createBy;\r\n    formula.baseOnCan = object.baseOnCan;\r\n    formula.machine = object.machine != null ? ConvertModelUtils.convertToMachineModel(object.machine) : null;\r\n    formula.approximateColor = object.approximateColor;\r\n    formula.comment = object.comment;\r\n    formula.substrate = object.substrate;\r\n    return formula;\r\n  }\r\n\r\n  static convertToFormulaCustomerModel(object: any): FormulaCustomerModel {\r\n    const formulaCustomer = new FormulaCustomerModel();\r\n    formulaCustomer.formulaCustomerId = object.formulaCustomerId;\r\n    formulaCustomer.formula = ConvertModelUtils.convertToFormulaModel(object.formula);\r\n    formulaCustomer.customer = ConvertModelUtils.convertToCustomerModel(object.customer);\r\n    return formulaCustomer;\r\n  }\r\n\r\n  static convertToProductModel(object: any): ProductModel {\r\n    const item = new ProductModel();\r\n    item.productId = object.productId;\r\n    item.productCode = object.productCode;\r\n    item.productName = object.productName;\r\n    item.createdDate = object.createdDate;\r\n    item.createBy = object.createBy;\r\n    return item;\r\n  }\r\n\r\n  static convertToFormulaProductBaseModel(object: any): FormulaProductBaseModel {\r\n    const item = new FormulaProductBaseModel();\r\n    item.formulaProductBaseId = object.formulaProductBaseId;\r\n    item.productBase = ConvertModelUtils.convertToProductBaseModel(object.productBase);\r\n    item.formula = ConvertModelUtils.convertToFormulaModel(object.formula);\r\n    return item;\r\n  }\r\n\r\n  static convertToFormulaColourantModel(object: any): FormulaColourantModel {\r\n    const item = new FormulaColourantModel();\r\n    item.formulaColourantId = object.formulaColourantId;\r\n    item.formula = ConvertModelUtils.convertToFormulaModel(object.formula);\r\n    item.colourant = ConvertModelUtils.convertToColourantModel(object.colourant);\r\n    item.quantity = object.quantity;\r\n    return item;\r\n  }\r\n\r\n  static convertToColourantModel(object: any): ColorantModel {\r\n    const item = new ColorantModel();\r\n    item.colourantId = object.colourantId;\r\n    item.colourantCode = object.colourantCode;\r\n    item.colourantName = object.colourantName;\r\n    item.density = object.density;\r\n    item.pricePerUnit = object.pricePerUnit;\r\n    item.surcharge = object.surcharge;\r\n    item.rbgHex = object.rbgHex === '#00' ? '#000000' : object.rbgHex;\r\n    item.kind = object.kind;\r\n    return item;\r\n  }\r\n\r\n  static convertToProductBaseCanModel(object: any) {\r\n    const item = new ProductBaseCanModel();\r\n    item.productBaseCanId = object.productBaseCanId;\r\n    item.productBase = object.productBase;\r\n    item.can = object.can;\r\n    item.unit = object.unit;\r\n    item.pricePerCan = object.pricePerCan;\r\n    item.barCode = object.barCode;\r\n    item.percentage = object.percentage;\r\n    return item;\r\n  }\r\n\r\n  static convertCollectionModel(object: any): CollectionModel {\r\n    const collection = new CollectionModel();\r\n    collection.collectionId = object.collectionId;\r\n    collection.collectionName = object.collectionName;\r\n    collection.description = object.description;\r\n    collection.machine = object.machine != null ? ConvertModelUtils.convertToMachineModel(object.machine) : null;\r\n    return collection;\r\n  }\r\n\r\n  static convertFormulaProductBaseModel(object: any): FormulaProductBaseModel {\r\n    const formulaProductBase = new FormulaProductBaseModel();\r\n    formulaProductBase.formulaProductBaseId = object.formulaProductBaseId;\r\n    formulaProductBase.formula = ConvertModelUtils.convertToFormulaModel(object.formula);\r\n    formulaProductBase.productBase = ConvertModelUtils.convertToProductBaseModel(object.productBase);\r\n    return formulaProductBase;\r\n  }\r\n\r\n  static convertToProductBaseModel(object: any) {\r\n    const productBase = new ProductBaseModel();\r\n    productBase.productBaseId = object.productBaseId;\r\n    productBase.product = ConvertModelUtils.convertToProductModel(object.product);\r\n    productBase.base = ConvertModelUtils.convertToBaseModel(object.base);\r\n    productBase.rbgHex = object.rbgHex;\r\n    productBase.density = object.density;\r\n    return productBase;\r\n  }\r\n\r\n  static convertToBaseModel(object: any) {\r\n    const base = new BaseModel();\r\n    base.baseCode = object.baseCode;\r\n    base.baseId = object.baseId;\r\n    base.baseName = object.baseName;\r\n    return base;\r\n  }\r\n\r\n  static convertToUserModel(object: any): UserModel {\r\n    const user = new UserModel();\r\n    user.userId = object.userId;\r\n    user.userName = object.userName;\r\n    user.role = object.role != null ? ConvertModelUtils.convertToRoleModel(object.role) : null;\r\n    user.machine = object.machine != null ? ConvertModelUtils.convertToMachineModel(object.machine) : null;\r\n    return user;\r\n  }\r\n\r\n  static convertToRoleModel(object: any): RoleModel {\r\n    const role = new RoleModel();\r\n    role.roleId = object.roleId;\r\n    role.roleName = object.roleName;\r\n    return role;\r\n  }\r\n\r\n  static convertToMachineModel(object: any): MachineModel {\r\n    const machine = new MachineModel();\r\n    machine.machineId = object.machineId;\r\n    machine.code = object.code;\r\n    machine.name = object.name;\r\n    machine.minQuantity = object.minQuantity;\r\n    machine.warningQuantity = object.warningQuantity;\r\n    machine.maxQuantity = object.maxQuantity;\r\n    return machine;\r\n  }\r\n\r\n  static convertToMachineColourantModel(object: any): MachineColourantModel {\r\n    const item = new MachineColourantModel();\r\n    item.machineColourantId = object.machineColourantId;\r\n    item.colourant = ConvertModelUtils.convertToColourantModel(object.colourant);\r\n    item.machine = ConvertModelUtils.convertToMachineModel(object.machine);\r\n    item.quantity = object.quantity;\r\n    return item;\r\n  }\r\n\r\n  static convertToDispenseFormulaProductBaseModel(object: any): MachineFormulaProductBaseLogModel {\r\n    const item = new MachineFormulaProductBaseLogModel();\r\n    item.machineFormulaProductBaseId = object.machineFormulaProductBaseId;\r\n    item.formulaProductBase = ConvertModelUtils.convertToFormulaProductBaseModel(object.formulaProductBase);\r\n    item.machine = ConvertModelUtils.convertToMachineModel(object.machine);\r\n    item.user = ConvertModelUtils.convertToUserModel(object.user);\r\n    item.canSize = object.quantity;\r\n    item.createdDate = object.createdDate;\r\n    item.finishedDate = object.finishedDate;\r\n    item.status = object.status;\r\n    return item;\r\n  }\r\n\r\n\r\n  static convertToCustomerModel(customer: any): CustomerModel {\r\n    const item = new CustomerModel();\r\n    item.customerId = customer.customerId;\r\n    item.name = customer.name;\r\n    item.phone = customer.phone;\r\n    item.email = customer.email;\r\n    item.address = customer.address;\r\n    item.note = customer.note;\r\n    item.machine = customer.machine != null ? ConvertModelUtils.convertToMachineModel(customer.machine) : null;\r\n    return item;\r\n  }\r\n\r\n  static convertToResponseMessageModel(object: any): ResponseMessageModel {\r\n    const item = new ResponseMessageModel();\r\n    item.type = object.type;\r\n    item.message = object.message;\r\n    return item;\r\n  }\r\n\r\n  static convertToSavingFormulaProductBaseDBItem(formulaProductBaseId: number,\r\n                                                 formula: FormulaModel,\r\n                                                 productBase: ProductBaseModel,\r\n                                                 machine: MachineModel,\r\n                                                 formulaColourantList: FormulaColourantModel[],\r\n                                                 listCustomerSelected: CustomerSelectedModel[]) {\r\n    const machineDbItem = {\r\n      machineId: machine.machineId\r\n    };\r\n\r\n    const formulaProductBaseDBItem = {\r\n      formulaProductBaseId: formulaProductBaseId,\r\n      formula: ConvertModelUtils.convertToFormulaDBItem(formula),\r\n      productBase: {productBaseId: productBase.productBaseId}\r\n    };\r\n\r\n    const formulaColourantListDBItem = [];\r\n    for (const item of formulaColourantList) {\r\n      if (item.quantity != null && item.quantity > 0) {\r\n        formulaColourantListDBItem.push(ConvertModelUtils.convertToFormulaColourantDBItem(item));\r\n      }\r\n    }\r\n\r\n    const _listCustomerSelected = [];\r\n    for (const customerSelect of listCustomerSelected) {\r\n      if (customerSelect.checked) {\r\n        _listCustomerSelected.push(customerSelect.customer.customerId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      formulaProductBase: formulaProductBaseDBItem,\r\n      machine: machineDbItem,\r\n      formulaColourantList: formulaColourantListDBItem,\r\n      listCustomer : _listCustomerSelected\r\n    };\r\n  }\r\n\r\n  static convertToFormulaDBItem(formula: FormulaModel) {\r\n    return {\r\n      formulaId: formula.formulaId,\r\n      formulaCode: formula.formulaCode,\r\n      formulaName: formula.formulaName,\r\n      collection: {collectionId: formula.collection.collectionId},\r\n      baseOnCan: formula.baseOnCan,\r\n      approximateColor: formula.approximateColor,\r\n      substrate: formula.substrate,\r\n      comment: formula.comment,\r\n    };\r\n  }\r\n\r\n  static convertToFormulaColourantDBItem(formulaColourant: FormulaColourantModel) {\r\n    return {\r\n      formulaColourantId: formulaColourant.formulaColourantId,\r\n      colourant: {colourantId: formulaColourant.colourant.colourantId},\r\n      formula: {formulaId: formulaColourant.formula.formulaId},\r\n      quantity: formulaColourant.quantity,\r\n    };\r\n  }\r\n\r\n  static convertToCustomerDBItem(dbItem: CustomerModel, machine: MachineModel) {\r\n    return {\r\n      customerId: dbItem.customerId,\r\n      name: dbItem.name,\r\n      phone: dbItem.phone,\r\n      email: dbItem.email,\r\n      address: dbItem.address,\r\n      note: dbItem.note,\r\n      machine: {machineId: machine.machineId},\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  settings: {\r\n    // serverendpoint: 'http://localhost:8080/server/api/',\r\n    serverendpoint: 'http://ec2-34-227-171-6.compute-1.amazonaws.com:8081/demoson/server/api/',\r\n    dateFormat : 'dd/MM/yyyy'\r\n  }\r\n};\r\n\r\nexport class StaticVariable {\r\n  private static _settings;\r\n  constructor() {\r\n    StaticVariable._settings = environment.settings;\r\n  }\r\n\r\n  public STATIC_VARIABLE = StaticVariable;\r\n\r\n  static get settings() {\r\n    return this._settings;\r\n  }\r\n}\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}